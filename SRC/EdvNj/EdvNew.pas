{
* Copyright (c) 2020, Reijo Pursiainen, Hannu Pursiainen
* All rights reserved.
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*
*     * Redistributions of source code must retain the above copyright
*       notice, this list of conditions and the following disclaimer.
*     * Redistributions in binary form must reproduce the above copyright
*       notice, this list of conditions and the following disclaimer in the
*       documentation and/or other materials provided with the distribution.
*     * Neither the name of Reijo Pursiainen, Hannu Pursiainen nor the
*       names of its contributors may be used to endorse or promote products
*       derived from this software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY REIJO PURSIAINEN, HANNU PURSIAINEN AND
* CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
* BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
* A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REIJO PURSIAINEN,
* HANNU PURSIAINEN AND CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
* LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
* SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
}

///////////////////////////////////////////////////////////////////////////////
{DEVELOPER1:
10.0.4 yhteydessä taas todettu:  EdvNewFrm´in uudelleenpiirto tapahtuu,
       kun (alkupiirto)  IsEqualEdvTiedotType ´ssä FNC := TR  ja
           (johto-osat)  IsEqualEdvPalstaType ´ssä FNC := FA.
10.0.4§ =fKaikkiOikeudet_1x :n muutos molempiin suuntiin (ON/EI) ei päivittänyt kuvaajaa, näin merkityt muutos-
         kohdat liittyvät nimenomaan tämän aiheen käsittelyyn.
=================================================================================================================}

///////////////////////////////////////////////////////////////////////////////
//
// FileName:  ËdvNew.pas
// Location:  src\edvnj
// Abstract:  Edeltävän verkon kuvaus.
//
///////////////////////////////////////////////////////////////////////////////
//
// Following fields are automatically generated by the version control system:
//
// $Revision: 1.6 $
//     $Date: 2005/10/15 08:22:17 $
//
///////////////////////////////////////////////////////////////////////////////
//
// Change Log. Old log entries can be removed by deleting them.
// $Log: EdvNew.pas,v $
// Revision 1.6  2005/10/15 08:22:17  DEVELOPER2
// Optimointi: johdot.resize() kutsutaan vain EdvNew modulista tarvittaessa
//
// Revision 1.5  2005/10/09 14:00:46  DEVELOPER2
// Reijolta 26.9.2005
//
// 
// 10    18.08.04 20:51 DEVELOPER2
// Bug fix. Korjattu liityntäjohdon symbolin tulostus.
// 
// 9     2.05.04 8:54 DEVELOPER2
// Reijolta 29.4.2004
// 
// 6     16.01.04 20:46 DEVELOPER2
// Otettu käyttöön muutettu liittymajohtojen tietorakenne:
// - WriteEdv(): var-esittely otettu käyttöön koodin optimoimiseksi,
// propertit korvattu suorilla sijoitusoperaatioilla.
// - WriteYLE(): var-esittely otettu käyttöön koodin optimoimiseksi.
// - ReadEdv(), ReadYLE(), WriteNjL(), ReadNjL(), WriteEdka(), ReadEdka():
// poistettu tarpeettomina.
// - EdvTiedot, YLE: Propertin lukeminen poistettu tarpeettomana
// - Njl, edka: Propertit poistettu tarpeetomina.  
// 
// 5     22.11.03 10:52 Kai
// - Turhia paneeleja poistettu
// - Turhia käännöslippuja poistettu
// - Lisätty otsikkotiedot 

unit EdvNew;  //Paikallisen osan alku: Etsi VARosa
{  NjVrk.INC:  (NjFrm.)ShowModal; //< +1.1.3  Nyt ei enää olisi Edv:ssä tarpeen BtnClickeissä yms. sulkea NjFrmia
   n++         ='Ajatus' otettu NjVrk.PAS :sta }

// Tässä tiedostossa tunnisteet 102000 - 102999

//DEVELOPER1: PRINT_BG_COLOR defs.pas määrittelee pohjavärin tulostuksessa

{$I ..\globals\defines.inc}

interface

uses
  Windows, Messages, SysUtils, Classes, Graphics, Controls, Dialogs, Forms, NolaForms,
  { Omat unitit }
  Globals,      { Globaalit määritykset }
  Settings,     { Asetusolio }
  TextBase,     { Tekstivarasto }
  Johdot,johto, { Johto }
  Defs,         { Yleiset asetukset }
  StdCtrls, ToolWin, ComCtrls, ExtCtrls, Grids,
  StringGridNola, LabelNola, PanelNola, Spin, Buttons, Printers, ComboBoxXY,
  RichEditNola, licenseFuncs{=lvLT..+8.0.0},Asetus, System.UITypes
  ;

type

  TEdvNewFrm = class(TFormNola)
    FooterPanel: TPanel;
    OkBtn: TButton;
    SuljeBtn: TButton;
    TulostaBtn: TButton;
    LueBtn: TButton;
    TalletaBtn: TButton;
    DetaljitBtn: TButton;
    OhjeBtn: TButton;
    LisaaBtn: TButton;

    HeaderPanel: TPanel;
    PoiskRadVal: TRadioGroup;
    SulakRadVal: TRadioGroup;
    UnLabel: TLabelNola;
    UnCmBx: TComboBoxXY;
    cULabel: TLabelNola;
    cUCmBx: TComboBoxXY;

    JohdotHeaderPohja: TPanelNola;
    JohdotDataPohja: TPanelNola;
    JohdotDataWnd: TPanelNola;
    JohdotHeaderWnd: TPanel;
    JohdotDataPanel: TPanel;
    JohdotHeaderPanel: TPanel;
    JohdotHScroll: TScrollBar;
    JohdotVScroll: TScrollBar;
    OpenButton: TSpeedButton;
    HideButton: TSpeedButton;
    JohdotColHeaderHeader: TPanel;
    JohdotColHeaderPohja: TPanelNola;
    JohdotColHeaderWnd: TPanel;
    JohdotColHeaderPanel: TPanel;
    FirstCablePanel: TPanel;
    ChkBxAv: TCheckBox;
    JOsia: TLabelNola;
    YhtPit: TLabelNola;
    KayraBtn: TButton;
    aRich: TRichEditNola;
    ApuLbl: TLabel;
    PEN_PE_inf: TLabelNola;
    LisaLbl: TLabel;
    PRradVal: TRadioGroup;
    LbNjAs: TLabelNola;
    BxAsT: TComboBoxXY;
    LbLt_z: TLabelNola;
    BxTZpe: TComboBoxXY;
    PrRjMm2Bx: TComboBoxXY;
    KuvausPan: TPanel;
    PvitaBtn: TButton;
    LaakMPan: TPanel;
    LaakMBx: TComboBoxXY;
    KuvausVpan: TPanel;
    KuvausEdit: TEdit;
    UkBx: TComboBoxXY;
    procedure JohtoPanelResize(Sender: TObject);
    procedure JohdotHeaderPanelResize(Sender: TObject);
    procedure JohdotHeaderWndResize(Sender: TObject);
    procedure JohdotColHeaderPanelResize(Sender: TObject);
    procedure JohdotColHeaderWndResize(Sender: TObject);
    procedure JohdotDataPohjaResize(Sender: TObject);
    procedure JohdotColHeaderPohjaResize(Sender: TObject);
    procedure JohdotHScrollScroll(Sender: TObject; ScrollCode: TScrollCode;  var ScrollPos: Integer);
    procedure JohdotVScrollScroll(Sender: TObject; ScrollCode: TScrollCode;  var ScrollPos: Integer);

    procedure PohjaClick(Sender: TObject);
    procedure PohjaDblClick(Sender: TObject);
    procedure HeaderClick(Sender: TObject);
    procedure HeaderDblClick(Sender: TObject);

    procedure TulostaBtnClick(Sender: TObject);
    procedure LisaaBtnClick(Sender: TObject);
    procedure OkBtnClick(Sender: TObject);
    procedure SuljeBtnClick(Sender: TObject);
    procedure LueBtnClick(Sender: TObject);
    procedure TalletaBtnClick(Sender: TObject);
    procedure DetaljitBtnClick(Sender: TObject);
    procedure OhjeBtnClick(Sender: TObject);
    procedure PoiskRadValClick(Sender: TObject);
    procedure SulakRadValClick(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure UnCmBxExit(Sender: TObject);
    procedure cUCmBxExit(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure UnCmBxKeyPress(Sender: TObject; var Key: Char);
    procedure cUCmBxKeyPress(Sender: TObject; var Key: Char);
    procedure PvitaBtnClick(Sender: TObject);
    procedure ChkBxAvClick(Sender: TObject);
    procedure KuvausEditChange(Sender: TObject);
    procedure FormKeyDown(Sender: TObject; var Key: Word;  Shift: TShiftState);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure UnCmBxChange(Sender: TObject);
    procedure cUCmBxChange(Sender: TObject);
    procedure HeaderPanelMouseMove(Sender: TObject; Shift: TShiftState; X,Y: Integer);
    procedure FooterPanelMouseMove(Sender: TObject; Shift: TShiftState; X,Y: Integer);
    procedure KuvausEditMouseMove(Sender: TObject; Shift: TShiftState; X,Y: Integer);
    procedure ChkBxAvMouseDown(Sender: TObject; Button: TMouseButton;  Shift: TShiftState; X, Y: Integer);
    procedure Bx1_nEnter(Sender: TObject);
    procedure KayraBtnClick(Sender: TObject);
    procedure FormResize(Sender: TObject);
    procedure PRradValClick(Sender: TObject);
    procedure BxAsTChange(Sender: TObject);
    procedure BxTZpeChange(Sender: TObject);
    procedure PrRjMm2BxEnter(Sender: TObject);
    procedure PrRjMm2BxSelect(Sender: TObject);
    procedure PrRjMm2BxChange(Sender: TObject);
    procedure LaakMBxExit(Sender: TObject);
    procedure LaakMBxKeyPress(Sender: TObject; var Key: Char);
    procedure BxAsTExit(Sender: TObject);
    procedure UkBxChange(Sender: TObject);
    procedure UkBxKeyPress(Sender: TObject; var Key: Char);
    procedure LaakMBxChange(Sender: TObject);
  private
    {VAR-paikalliset muuttujat ennen PRCtä}
    { Private declarations }
    lastVClick, lastHClick: Boolean;
    prevHeaderWidth: integer;
    HeaderOpen: boolean;

    fileName: string; { Sijoita tähän käsiteltävä tiedoston nimi }

    function  PrintTiedot(canvas: TCanvas; width: integer; left, top: integer; zoom: Real; bgColor: TColor): integer;

    procedure WriteEdv(var value: EdvYHTtype);
    procedure WriteYLE(var value: EdvTiedotType);

    procedure TulostaAvust;
    procedure TulostaEdv;

  protected
  public
    { Public declarations }
    Johdot: TJohdot;

    //property  EdvTiedot: EdvYHTtype     write WriteEdv;
    //property  YLE:       EdvTiedotType  write WriteYLE;

    constructor Create(AOwner: TComponent); override;
    destructor Destroy; override;
    procedure SetTexts; override;
    procedure UpdateValues;

  end;
    procedure FrmOtsikko; //<+1414d
//##################################################################################################
var alkuaset :boolean;   //avuRv :integer; //str,edStr :String;       //<str.. = X/Y kokeilua varten
    Jrow :integer;       //<JOHDOT.PAS:ssa MouseMove:ssa talletetaan ROW, jotta DblClick:ssä avuste_..
  EdvNewFrm: TEdvNewFrm;
  procedure asetaIecOfaRadVal (sulTyp :string);
//procedure FrmOtsikko; -1414
  procedure PvitaMuutokset;
  procedure PvitaEdvFrm;    //<Hoitaa koko edvNewFrm´in päivittämisen.
  procedure AsetaEdvFrm;
  procedure avust (rivi :integer);

implementation

uses PaaVal, Y_, Herja1, NjVrk, SyottoAv, Syotto, EdvNewLask, PrintDialogNola, DetEv, {Odota, }Progres,
     NjTul3, IkKayra, Odota, Unit0{=fSu_Sama takia}, Unit1{PoisAikar..Takia}, LaskeeOd, Moot{mo.moty.Vrk},
     InfoDlgUnit{+8.0.0}{, FileCtrl}{+11.0.2 DirectoryExists}, registry{+1102å2+}, inifiles;
//  RichEditNola, licenseFuncs{=lvLT..+8.0.0}, Asetus, FileCtrl{+11.0.2 DirectoryExists}

VAR alpPoiskIx,alpPRaik{8.0.0},alpIecIx,alpUn :integer;  alpCU{,alpLaakPmu 130.2e} :real;  alpResMm2S{120.5},alpAsT,alpTZ{+9.0.1}{,alpSuk130.2e} :string{+8.0.11};
    Gray_Chkd :boolean; //<+1.1.3 Vain PRC ChkBxAvMouseDown ja ChkBxAvClick väliseen tiedonsiirtoon ILMAN EVENTIÄ
//==================================================================================================

///////////////////////////////////////////////////////////////////////////////
  procedure avust (rivi :integer);      begin
     if EdvNewFrm.Active  then begin                                                             //<+6.1.1
        avuste(0, rivi, 0,0);                   //<Vapauttaa avusteen, koska ei SYOAKTV := TR, vrt ed. POHJACLICK
        if EdvNewFrm.Showing  and EdvNewFrm.Visible  then
           EdvNewFrm.SetFocus;         //<DEVELOPER1: Mahistaa mm. F1:llä avuste on/ei. Ei yksin riitä, vrt. AvusteEdit
     end;
  end;

///////////////////////////////////////////////////////////////////////////////
  procedure PvBtnOff;      begin  EdvNewFrm.PvitaBtn.Font.Style := [];
                                  EdvNewFrm.PvitaBtn.Enabled := false;  end;

///////////////////////////////////////////////////////////////////////////////
  procedure PvBtnOn;       begin  EdvNewFrm.PvitaBtn.Font.Style := [fsBold];
                                  EdvNewFrm.PvitaBtn.Enabled := true;   end;

///////////////////////////////////////////////////////////////////////////////   //,+130.2e: PvitaBtnClick´ssä PvitaEdvFrm => AsetaEdvFrm =uudet ALP -arvot.
   procedure asetaPvBtn;      {LABEL 1;  }VAR su,{sr, }sc,cu,alpSm,sm,suk :string;  //ar :real;

      function eri(SA :string;  su :string) :boolean;      VAR d :integer;  c :char;      begin //<,,Muuttaa uuden SU-str´n desiMrkn samaksi kuin SA'ssa
         c := '.'; //<+130.2e   //Herjasi:  might not have been init.
         d := Pos('.',SA);                               //PRC AsetaEdvFrm:                           //   ja vertaa, jos SA<>su fnc := TR.
         if d>0                                                // alpTZ :=      EdvNewFrm.BxTZpe.Text;
            then c := '.'                                      // alpPoiskIx := EdvNewFrm.PoiskRadVal.ItemIndex;
            else begin                                         // alpPRaik :=   EdvNewFrm.PRradVal.ItemIndex;
               d := Pos(',',SA);                               // alpIecIx :=   EdvNewFrm.SulakRadVal.ItemIndex;
               if d>0  then c := ',';                          // alpAsT :=     AnsiUpperCase (Trim (EdvNewFrm.BxAsT.Text)); //<+8.0.11
            end;                                               // alpSuk :=     Trim (EdvNewFrm.UkBx.Text);                  //<+130.2e
         if d>0  then begin                                    // alpUn :=      a_getIntg (2,edv.Yle.Un);
            d := Pos('.',su);                                  // alpCU :=      a_getReaa (3,edv.Yle.cU);
            if d>0                                             // alpLaakPmu := a_getReaa (4,edv.Yle.LaakPmu);               //<+130.2o
               then su[d] := c                                 // alpResMm2S :=  EdvNewFrm.PrRjMm2Bx.Text;                   //<+120.5 Ei käytetty muualla.}
               else begin
                  d := Pos(',',su);
                  if d>0  then su[d] := c;
               end;
         end;//if d>0
         result := SA<>su;
      end;//DmrkAlpMuk

   begin//asetaPvBtn....................
      su := fImrkt0(alpUn,1);
      sc := sRmrkt0vex(alpCU,1,3);
      cu := EdvNewFrm.cUCmBx.Text;
      alpSm :=  fRmrkt0(alpLaakPmu,1,1);
      sm := Trim(EdvNewFrm.LaakMBx.Text);                          //<+130.2e
      suk := Trim (EdvNewFrm.UkBx.Text);                           //<+130.2e:  uk OFF  uk ON

      while (cu<>'')  and (Length(cu)>1)  and (cu[Length(cu)]='0') //<,Poistetaan tästäkin loppunollat. 8.0.11
        do Delete (cu,Length(cu),1);
    (*if (alpPoiskIx<>EdvNewFrm.PoiskRadVal.ItemIndex) or (alpPRaik<>EdvNewFrm.PRradVal.ItemIndex{+8.0.0}) or
         (alpIecIx<>EdvNewFrm.SulakRadVal.ItemIndex)   or (su<>EdvNewFrm.UnCmBx.Text) or (sc<>cu) or
         (alpAsT<>EdvNewFrm.BxAsT.Text{+8.0.11})       or (alpTZ<>EdvNewFrm.BxTZpe.Text{+9.0.1})  or (alpSm<>sm) or
         (alpSuk<>suk)*)
      if    (alpPoiskIx<>EdvNewFrm.PoiskRadVal.ItemIndex) or    (alpPRaik<>EdvNewFrm.PRradVal.ItemIndex{+8.0.0}) or   //<,ERI myös muuttaa desMrkt samoiksi,
            (alpIecIx<>EdvNewFrm.SulakRadVal.ItemIndex)   or eri(su, EdvNewFrm.UnCmBx.Text) or (sc<>cu) or            //  jottei ne aiheuttaisi eroja(FA).
         eri(alpAsT, EdvNewFrm.BxAsT.Text{+8.0.11})       or eri(alpTZ, EdvNewFrm.BxTZpe.Text{+9.0.1})  or eri(alpSm,sm) or
         eri(alpSuk, suk) //<alpSuk := AsetaEdvFrm´ssa.
            then PvBtnOn
            else PvBtnOff
   end;

///////////////////////////////////////////////////////////////////////////////
  procedure OhjeVex;      begin                                  //<,,+2.0.5
             if apuaOn  then begin
                SyottoAvFrm.Hide;
                apuaOn := false;
                EdvNewFrm.OhjeBtn.Font.Size := 17;
                EdvNewFrm.OhjeBtn.Font.Style := [fsBold];  end; end;
  procedure NormBtn;      begin                                 //<,,+2.0.5
                OhjeVex;  end;                                  //<'Jotta NormBtn -kutsu kuten MoFrm :ssa

///////////////////////////////////////////////////////////////////////////////
  procedure asetaIecOfaRadVal (sulTyp :string);      begin
     if fSu_Sama (sulTyp,su_IECg)
        then begin a_putBool (8, TRUE, Edv.YLE.IecOfa);    //<Sij jotta ajantas.
                   EdvNewFrm.SulakRadVal.ItemIndex := 0;  end
        else begin a_putBool (9, FALSE,Edv.YLE.IecOfa);
                   EdvNewFrm.SulakRadVal.ItemIndex := 1;  end;
  end;

///////////////////////////////////////////////////////////////////////////////
 {function PrRjMm2_toIndx (mm2 :integer) :integer;      begin //<,,+120.5 //  '16A2.5/10A1.5 mm²'  -130.0,,,,,,,,,,,,,,,,,,,,,,,,,,
     case mm2 of                                                          //  '10A 2.5/1.5 mm²'
       -1 :result := 0; //<-1 on merkkinä 0´lle.                          //  '6A 2.5/1.5 mm²'  <+130.0
        2 :result := 1;                                                   //  '4A 2.5/1.5 mm²'  <+130.0
        4 :result := 2;                                                   //  '2A 2.5/1.5 mm²'  <+130.0
        6 :result := 3;                                                   //  '4mm² 16A/10A '
       10 :result := 4;                                                   //  '6mm² 16A/10A '
     else  result := 5;                                                   //  '10mm² 16A/10A '
     end;//case                                                           //  '16mm² 16A/10A '
  end;}
///////////////////////////////////////////////////////////////////////////////
constructor TEdvNewFrm.Create(AOwner: TComponent);
                              //,,Testaa kirjoitusoikeuden Registryyn.  Siirretty PaaVal.PAS´ista.  +11.0.2
   procedure ChkRegistryKirjOikeus_Inform;      {VAR TestiKeyNimi,TestiKeyPolku,TestiArvo,so,TstKeyS,tstS,inf :string;
                                                     WinDirC :PChar;  o :integer;  Reg :TRegistry;
                                                     erS.TheKey,IniFN :string;  Inif :TIniFile;}
                                                     {SectLst :TStringList;}

     {procedure Herjaa;      begin
         MessageDlg (erS +'  Korjaa Registry´n (HKEY_LOCAL_MACHINE/SOFTWARE) kirjoitus/hallintaoikeutesi!',
                     mtInformation,[mbOk], 0);  end;
      procedure kasvaInf (si :string);      begin //end;
         if inf<>''  then inf := inf +' ';
         inf := inf + si;  end;
      function HexToInt(HexNum: string): LongInt;      begin//http://delphi.about.com/od/mathematics/a/baseconvert.htm
         Result:=StrToInt('$' + HexNum) ;
      end;}

   begin//ChkRegistryKirjOikeus_Inform........
               {Ks. E:\ProjektiDelphi-vihjeet\RegistryFuncs\Win7 HKLM_KEY_WOW.rtf   <= Siellä muutakin, esim. W7..
               GOOGLE:  delphi Registry KeyExists
                         http://www.delphipages.com/forum/showthread.php?t=25953
                         How can I check if this registry key exists in the registry.
               function GetRegistryValue: string;
               var
               Registry: TRegistry;
               begin
               Registry:=TRegistry.Create;
               Registry.RootKey := HKEY_LOCAL_MACHINE;
               if Registry.OpenKey('SOFTWARE\ATI Technologies', False) then
               MessageDlg('the selected key exists', mtInformation, [mbOk], 0)
               else
               MessageDlg('The selected key does not exist', mtError, [mbOK], 0);
               Registry.Free;
               end;}

              {if myRegSettings.OpenKey('SOFTWARE\AsetusFrm - Window left', False)  //<,, =OK
                  then so := '0'                                  //<KEY ei ole vielä eikä sitä tehdä (ed. FALSE)
                  else so := '6';                                 //<KEY on olemassa.
                             {if myRegSettings.KeyExists (so)        //<,, EiOK ennen OpenKey ´tä.
                                 then so := '6'
                                 else so := '0';
                              if so='§'  then;}
(*§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§*)
(*Ei tunnistu ...                                                                                 <,,-12.0.0=12å8
      TstKeyS :=      'A_TestiKey';                               //<Tämän niminen KEY tehdään testaamiseksi.
      TestiKeyNimi := 'SOFTWARE\Nola\Settings\' +TstKeyS;
      TestiArvo :=    'Poista KEY-nimikin. Käytetty vain kirjoitusoikeustestaukseen!';
      TestiKeyPolku := '..\' +TestiKeyNimi +' -Key (nimike)';
      inf := TestiKeyPolku +': ';       //Registry.LocalMachine.Open...
             //Reg := TRegistry.Create; //,,E:\Projektit_Delphi-Vihjeet =====\RegistryFuncs\OpenKey,Del,Exists.rtf
               Reg := TRegistry.Create(KEY_READ OR $0200); //KEY_WOW64_64KEY =0x0100,  KEY_WOW64_32KEY =0x0200
               Reg.RootKey := HKEY_LOCAL_MACHINE;         //Joskus ollut:  myRegSettings...
               TheKey := 'SoftWare\Wow6432Node';
               if NOT Reg.OpenKey(TheKey, False)
                  then ShowMessage(TheKey +' -Keytä eioo.')
                  else ShowMessage(TheKey +' -on.');
               TheKey := 'SoftWare\Wow6432Node\Nola';
               if NOT Reg.OpenKey(TheKey, False)
                  then ShowMessage(TheKey +' -Keytä eioo.')
                  else ShowMessage(TheKey +' -on.');
               TheKey := 'SoftWare\Wow6432Node\Nola\Settings';
               if NOT Reg.OpenKey(TheKey, False)
                  then ShowMessage(TheKey +' -Keytä eioo.')
                  else ShowMessage(TheKey +' -on.');
               TheKey := 'SoftWare\Nola';
               if NOT Reg.OpenKey(TheKey, False)
                  then ShowMessage(TheKey +' -Keytä eioo.')
                  else ShowMessage(TheKey +' -on.');
               Reg.CloseKey;
               Reg.Free;
            //SectLst := TStringList.Create;
          //IniFN := 'C:\VARO_NOLA_LUE_WARNING\Param\NolaTyö';
            IniFN := 'C:\VARO_NOLA_WARNING\Param\';
            SysUtils.ForceDirectories (IniFN);
            Inif := TIniFile.Create(IniFN +'Nola.txt');
            Inif.WriteString('Asetukset','Alaraja','12345');
            Inif.Free;

erS := '';                                                             //Wow6432Node
tstS := '';
//,KOE
erS := 'Lopuksi aina info:  ChkRegTst/OnCreate käyty!';
GetMem(WinDirC, 144);                                                  //<Ilman tätä:  ..may not have been init..
GetWindowsDirectory(WinDirC,144);                                      //,Ei onaa %:lla eikä ilman, pitää käyttää
if Sysutils.DirectoryExists  ({'%WinDir%}{'C:\Windows=OK} WinDirC +'\SysWOW64') //<GetWin.. fnc :ta.  SysWOW64 =W7.
   then  tstS := tstS +'  Vista/W7 ON.'    //<%WinDir% = C:\Windows mutta vasta W7:ssä, ei vielä XP:ssä ja se
   else  tstS := tstS +'  Vista/W7 eioo.'; // OK koskei SysWOW64 :kään, joten päätelmä:  EiW7=oikein.
tstS := tstS +'  ' +WinDirC;
FreeMem(WinDirC, 144);
                                                                                  // joten XP:llä oikea tieto.
//Reg := TRegistry.Create(KEY_WRITE OR $0100); //where KEY_WOW64_64KEY = $0100. That will give you the expected result.
//if (KEY_WRITE OR $0100)                                     // 0100000000000000110
{if KEY_WRITE + $0100>1                                       //          0100000000
   then tstS := 'KEY_WRITE OR $0100=TR'                       // -------------------
   else tstS := 'KEY_WRITE OR $0100=FA';}                     // 0100000000100000110 =131334 d = Kylläkin AND´illä.
    //if myRegSettings.KeyExists (TestiKeyNimi)    //<Ei onaa ennen OpenKey´tä.
      if myRegSettings.OpenKey (TestiKeyNimi,TRUE) //< TR =TstKeyS (alidirri) tehdään jos sitä eioo.
      then begin
         so := TestiKeyNimi;
         o := Pos (UpperCase(TstKeyS), UpperCase(so));      //<,,Delataan KEY´stä äsken lisätty alidirri:
            if (o>1) and (so[o-1]='\')  then o := o -1;     //     "SOFTWARE\Nola\Settings\A_TestiKey"
            Delete (so,o,Length(so));                       //  => "SOFTWARE\Nola\Settings

         myRegSettings.CloseKey;  //<Oltava, muuten seur. OpenKey ei onaa, TODETTU kantapään kautta.################
         if myRegSettings.OpenKey (so,false)                   //<FA koska äsken jo tehtiin.
{,+=XP}  then begin
            if myRegSettings.KeyExists (TstKeyS)
{+}            then kasvaInf ('1a TstKEY on =OK.')          //<Tuli tähän OK: Eka OpenKey tekiDIRrin.
               else kasvaInf ('1b TstKEY eioo =eiok.');
            if myRegSettings.ValueExists(TstKeyS)
            then kasvaInf ('2  TstKEY löytyi =OK.')
            else if myRegSettings.DeleteValue(TstKeyS)
                 then kasvaInf ('3a TstKEY nyt poistettu =OK.')
{+}              else kasvaInf ('3b TstKEY ei poistunut =eiok.');
            if myRegSettings.KeyExists (TstKeyS)
{+}              then kasvaInf ('4a TstKEY poisttu mutta onVielä =eiok.')
                 else kasvaInf ('4b TstKEY poisttu eikäooEnää =OK.');

            if myRegSettings.DeleteKey (TstKeyS)        //<<<< TÄMÄ POISTI ao. KEY´n.###############################
{+}              then kasvaInf ('5a KEY nyt poistettu =OK.')
                 else kasvaInf ('5b KEY ei poistunut =eiok.');
            if myRegSettings.KeyExists (TstKeyS)        //<<<< TÄMÄ POISTI ao. KEY´n.###############################
                 then kasvaInf ('6a KEY on =eiOK.')
{+}              else kasvaInf ('6b KEY eioo =OK.');
         end//if .OpenKey() ..
         else begin
            kasvaInf ('8 Ei ollut KEY´tä = ei ollut kirjoitusoikeutta.');
            erS := '8 Kirjoitusoikeus Registry´yn puuttuu.';  end;
      end//if .OpenKey() ..
      else begin
         myRegSettings.SetStringValue (Settings_Used, TestiKeyNimi,TestiArvo);
         if NOT myRegSettings.KeyExists (TestiKeyNimi)  then begin
            kasvaInf ('9 Ei ollut KEY´tä = ei ollut kirjoitusoikeutta.');
            erS := '9 Kirjoitusoikeus Registry´yn puuttuu.';  end;
      end;//else
      beep;
      if tstW7ajo  then begin
         if IsDebuggerPresent  then MessageDlg(inf, mtInformation,[mbOk], 0);    //<,+11.0.2
//,KOE, poistettava jakeluversiosta.
         if (erS<>'') or (tstS<>'')  then MessageDlg(erS +'  ' +tstS, mtInformation,[mbOk], 0);
         if NOT IsDebuggerPresent  then MessageDlg('tstW7ajo on TRUE, testikäyttö edelleen päällä; seuraa '+
            'turhia koeajoilmoituksia!', mtInformation,[mbOk], 0);  end;
------------------------------------------------------------------------------------------------------------------------''-12.0.0=12å8*)
(*§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§*)
   end;//ChkRegistryKirjOikeus_Inform

begin//Create.....................................
  inherited;

    JohdotHeaderPohja.Color :=     EDV_POHJA_COLOR;
    JohdotColHeaderPohja.Color :=  EDV_POHJA_COLOR;
    JohdotDataPohja.Color :=       EDV_POHJA_COLOR;
    JohdotDataWnd.Color :=         EDV_POHJA_COLOR;
    JohdotColHeaderWnd.Color :=    EDV_POHJA_COLOR;
    JohdotHeaderWnd.Color :=       EDV_POHJA_COLOR;
    JohdotDataPanel.Color :=       EDV_POHJA_COLOR;
    JohdotHeaderPanel.Color :=     EDV_POHJA_COLOR;
    JohdotColHeaderPanel.Color :=  EDV_POHJA_COLOR;
    JohdotColHeaderHeader.Color := EDV_POHJA_COLOR;

{   JohdotHeaderPohja.Color :=     clAqua;
    JohdotColHeaderPohja.Color :=  clFuchsia;
    JohdotDataPohja.Color :=       clGray;
    JohdotDataWnd.Color :=         clGreen;
    JohdotColHeaderWnd.Color :=    clLime;
    JohdotHeaderWnd.Color :=       clLtGray;
    JohdotDataPanel.Color :=       clYellow;
    JohdotHeaderPanel.Color :=     clBlue;
    JohdotColHeaderPanel.Color :=  clOlive;
    JohdotColHeaderHeader.Color := clTeal;//}

  lastVClick := False;
  lastHClick := False;

  { Luodaan johdot}
  Johdot := TJohdot.Create(self, JohdotHeaderPanel, JohdotColHeaderPanel,
                           JohdotDataPanel,
                           FirstCablePanel,
                           JohdotDataWnd,
                           JohdotVScroll, JohdotHScroll,
                           OpenButton, HideButton);

  SetTexts;

  JohdotColHeaderPanel.Top :=  0;
  JohdotColHeaderPanel.Left := 0;

  JohdotHeaderPanel.Top :=  0;
  JohdotHeaderPanel.Left := 0;

  JohdotDataPanel.Top :=  0;
  JohdotDataPanel.Left := 0;

  HeaderOpen := TRUE;

  ChkRegistryKirjOikeus_Inform;
  UpdateValues;
end;//Create

///////////////////////////////////////////////////////////////////////////////
destructor TEdvNewFrm.Destroy;
begin
     Johdot.Destroy;
     inherited;
end;

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.SetTexts;
begin
     inherited;
     if (Johdot <> nil) then
        johdot.SetTexts;
end;

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.UpdateValues;     VAR s :string;  muutos :boolean;      begin
if demo(21)
   then if 66<6  then ;
if EXT_Demo             //<  LisYliDemo_ (lvEXTended) and (edv.YLE.SorceCount.arvoInt>1);
   then if 66<6  then ;

    if NOT SalaSallii (lvEXTended) //and
    then if EXT_Demo  then //and
    if alustettu  then begin //alust.: Ettei PaaValFrm´in latauksessa vielä näkyisi.  +8.0.0
       s := '(Upd:) Verkkorakenteessa rinnakkaisliittymiä, mikä edellyttää EXTended -käyttöoikeus'+
             'laajuutta. Laskentatulokset esitetään peitearvoina Xxx tmv, rajoitetusti todellisina '+
             'arvoina.';
       if InfoDlgFrm<>NIL                   //<,InfoDlg ei ehkä ole vielä luotu: "Acces violation.. +8.0.0 §LUO§
          then InfoDlg    (s, mtCustom, 'OK','','','',  '' ,'','','')
          else MessageDlg (s, mtInformation, [mbOk], 0);
    end;
//  if (Edv.onArvot = TRUE) then  //<Oli näin, ilmeisesti DEVELOPER2 ohjeen mukaan. KoeKoe ????           //,>0 :-11.0.1
    muutos := EdvNewFrm.Visible and MoFrm.Visible and eriEdv; //and (a_getIntg (9,mo.moty.Vrk) >0); //<,+6.0.3
                                  //<'EriEdv ennen Update´a, koska Update sijoittaa edvE := edv. Edv..Visib PAKKO.!
  //edvE := edv;                  //<Oli kommentoitu vex, jolloin PvitaBtn.Enabled ei pysynyt tahdissa. Nyt OK
    if Edv.onLaskettu = TRUE  then begin
       FrmOtsikko;                //<DEVELOPER1
       self.WriteEdv(Edv);        //<Tästä TEdvNewFrm.WriteEdv jne.  //AsTapa§  @:01  141.1:  Tämä piirtää Verkkokuvaajan.
                   DrawUpsFileen('1.PRC updVal/self.Wr');
    end;
    edvE := edv;                  //<Vasta Edv.onLaskettu jälkeen jotta IfEqual...:n oma testi onnistuu. 9.0.1
                   DrawUpsFileen('2.PRC updVal takas');
    if muutos then begin                                                                            //<,,+6.0.3
       s := 'Edeltävä verkko muuttunut, moottorilähtöjen käsittelyosa suljetaan. Avaa moottorilähtöjen '+
            'käsittelyosa käsin päävalikosta ja tarkista kosketusjännitesarakkeet!';
       if InfoDlgFrm<>NIL                   //<,InfoDlg ei ehkä ole vielä luotu: "Acces violation.. +8.0.0 §LUO§
          then InfoDlg    (s, mtCustom, 'OK','','','',  '' ,'','','')
          else MessageDlg (s, mtInformation, [mbOk], 0);

       MoFrm.Hide;
       MoJoOllut := false;  end; //<Muuten ei päivitä MoFrm´in rivien arvoja uudelleen avattaaessa.

    AsetusOkBtnSulkiSyoFrmin := false;   //<+10.0.4§  Vain tässä =vasta kun kuvaajan päivittäminen on määrätty.
end;//UpdateValues                       //           := TR OnClose´ssa ja AsetusFrm´issa.

///////////////////////////////////////////////////////////////////////////////
procedure  TEdvNewFrm.WriteYLE(var value: EdvTiedotType);
begin
     if (Johdot <> nil) then begin
        johdot.WriteYLE(value);       //AsTapa§ ???  @:03  OHJAUTUU
        if ChkBxAv.Checked  then syoAktv := false //<Oli ruksattu =AVUSTE_ON (vapauttaa) //TUTKITAAN esim.tul-
                            else syoAktv := true; //<Ei ruksattu  =AVUSTE_VEX            //taessa SyottoFrmsta}
        johdot.resize;
     end;
     //else
     //    FEdvTiedot := value;

    if (EdvNewFrm.Visible) then //<,,DEVELOPER1 23.10.00 Siirretty Johdot.PAS :sta.  Oli Error:  Cannot focus
     begin                       //  disabled or invisible ...  (kun tehtiin uutta johto-osaa = "Lisää"-btn).
          EdvNewFrm.Show;      //<Tultaessa PaaValista, eioo vielä näkyvissää =muuten error, TODETTU
          EdvNewFrm.SetFocus;  //<Muuten Progrs.Hide jälkeen focus palaa PaaValiin=TULEE PÄÄLLE, TODETTU
     end;//}
end;

///////////////////////////////////////////////////////////////////////////////
procedure  TEdvNewFrm.WriteEdv(var value: EdvYHTtype);
begin
   if Edv.OnLaskettu  then begin
     if (Johdot <> nil) then
     begin
      johdot.WriteNjL(value.NjL);
      WriteYLE(value.YLE);    //AsTapa§  @:02
      johdot.WriteEdka(value.edka);
      johdot.WriteSorc(value.Sorc);
      johdot.resize;
     end;
   end;
end;

{##################################################################################################}
{$R *.DFM}

{##################################################################################################}

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.JohtoPanelResize(Sender: TObject);
begin
end;

///////////////////////////////////////////////////////////////////////////////
{ Piirretään johdot }
procedure TEdvNewFrm.JohdotHeaderPanelResize(Sender: TObject);
begin
     JohdotHeaderPanel.Top :=  0;
     JohdotHeaderWnd.Height := JohdotHeaderPanel.Height;
end;

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.JohdotHeaderWndResize(Sender: TObject);
begin
     JohdotHeaderWnd.Top :=      0;
     JohdotHeaderPohja.Height := JohdotHeaderWnd.Height;
end;

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.JohdotColHeaderPanelResize(Sender: TObject);
begin
     JohdotColHeaderPanel.Left := 0;
     JohdotColHeaderWnd.Width :=  JohdotColHeaderPanel.Width;
end;

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.JohdotColHeaderWndResize(Sender: TObject);
begin
     JohdotColHeaderWnd.Top :=  0;
     JohdotColHeaderWnd.Left := 0;

     if (HeaderOpen = True) then
     begin
          JohdotColHeaderPohja.Width := JohdotColHeaderWnd.Width;
          JohdotColHeaderHeader.Width := JohdotColHeaderWnd.Width;
     end;
end;

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.JohdotColHeaderPohjaResize(Sender: TObject);
begin
     JohdotColHeaderWnd.Height := JohdotDataWnd.Height;
end;

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.JohdotDataPohjaResize(Sender: TObject);
begin
     JohdotVScroll.Top :=    0;
     JohdotVScroll.Left :=   JohdotDataPohja.Width - JohdotVScroll.Width;
     JohdotVScroll.Height := JohdotDataPohja.Height - JohdotHScroll.Height;

     JohdotHScroll.Top :=    JohdotDataPohja.Height - JohdotHScroll.Height;
     JohdotHScroll.Left :=   0;
     JohdotHScroll.Width :=  JohdotDataPohja.Width - JohdotVScroll.Width;

     JohdotDataWnd.Top :=    0;
     JohdotDataWnd.Left :=   0;
     JohdotDataWnd.Height := JohdotDataPohja.Height - JohdotHScroll.Height;
     JohdotDataWnd.Width :=  JohdotDataPohja.Width  - JohdotVScroll.Width;

     JohdotHeaderWnd.Width :=  JohdotDataWnd.Width;

     JohdotColHeaderWnd.Height := JohdotDataWnd.Height;

     if johdot <> nil then
        Johdot.CheckScrollBars;

end;

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.JohdotHScrollScroll(Sender: TObject;
  ScrollCode: TScrollCode; var ScrollPos: Integer);
var
   left: integer;
begin
     if ScrollCode = scLineUp then
         left := johdot.PrevJohtoLeft
     else if ScrollCode = scLineDown then
         left := johdot.NextJohtoLeft
     else
         left := ScrollPos;

   //if (lastHClick = False) and (ScrollCode <> scEndScroll) then
     begin
          JohdotDataPanel.Left :=   - Left;
          JohdotHeaderPanel.Left := - Left;

          JohdotHScroll.Position := left;

          Johdot.CheckScrollBars;
     end;

     // if (JohdotHScroll.Position > johdot[1].width) then
     if (JohdotHScroll.Position > 0) then
        FirstCablePanel.visible := False
     else
         FirstCablePanel.Visible := True;

     if ScrollCode = scLineUp then
        lastHClick := True
     else if ScrollCode = scLineDown then
          lastHClick := True
     else
         lastHClick := False;
end;//JohdotHScrollScroll

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.JohdotVScrollScroll(Sender: TObject;
  ScrollCode: TScrollCode; var ScrollPos: Integer);
var
   top: integer;
begin

     if ScrollCode = scLineUp then
         top := johdot.PrevLineTop
     else if ScrollCode = scLineDown then
         top := johdot.NextLineTop
     else
         top := ScrollPos;

   //if (lastVClick = False)  then
     begin
          if (top > JohdotVScroll.Max) then
             top := JohdotVScroll.Max;

          if top > 0 then
          begin
               JohdotDataPanel.Top :=      - top;
               JohdotColHeaderPanel.Top := - top;
          end
          else
          begin
               JohdotDataPanel.Top :=      top;
               JohdotColHeaderPanel.Top := top;
          end;

          JohdotVScroll.Position := top;

          Johdot.CheckScrollBars;
     end;

     if ScrollCode = scLineUp then
        lastVClick := True
     else if ScrollCode = scLineDown then
          lastVClick := True
     else
         lastVClick := False;
end;//JohdotVScrollScroll

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.TulostaAvust; //<,,,+3.0.0 = Avustetulostus oli kokonaan vex
// procedure TEdvNewFrm.TulostaBtnClick(Sender: TObject);  //<Object Inspectorissa LINES p.o. TYHJÄ,
      const marg=200;                                      //'muuten aRich NÄKYY lomakkeella,TODETTU
      var   i,RivPit :integer;  s,s1,s2,s3,s4,s5,s6 :string;  alpSyoAktv,alpSyoAvOn :boolean;
  procedure LF;                        begin  aRich.AddText ('<br>');  end;
  procedure lisaaKpl (ss :string);     begin  if ss<>''  then begin
                                                 ss := ss+'<br>';  aRich.AddText (ss);  LF;  end; end;
begin
//     TulostaEdv;  //<DEVELOPER2
//IF PaaValFrm.PrinterSetupDialog1.Execute  then begin  //<OK
//IF PaaValFrm.PrintDialog1.Execute  then begin         //<OK
//IF PrintDlgNola.Execute (modeNj, self)  then begin
    TulostaBtn.Enabled := False;
    Screen.Cursor := crHourGlass;                       //<Ilman SCREENiä vipattaa!!!
    alpSyoAktv := SyoAktv;                              //< +3.0.0
    alpSyoAvOn := SyoAvOn;                              //< +3.0.0
    try
         with aRich  do begin
           WordWrap := true;
           Lines.Clear;                                //<Pakko (???) tyhjätä, jää muuten osa alpsta
           RivPit := Printer.PageWidth;
           PageRect := Rect(marg,0, RivPit,Printer.PageHeight);  //=2326,3389 =oaX,Y
           RivPit := RivPit-marg;
           Alignment := taLeftJustify;                 //<Ei riittänyt Obj.Inspectorista asettaen<<<
         end;//with aRich                              //'=Tämäkään eiOK. Lisättävä 1.rvlle '<left>'
         syoAktv := false;                             //<,Jotta avuste_mahista ####################
         syoAvOn := true;
         aRich.Font.Size :=  10;                  //<,Jo tässä, jotta WHILE-silmukka laskisi oikein.
         aRich.Font.Style := [fsBold];
         aRich.AddText ('<left>');                //<Muutetaan vasensuoraksi #######################
                                //,,OLTAVA TÄSSÄ [fsBold] in jälkeen jotta tila laskettaisiin oikein
         s1 := otsikko (RivPit,'NOLAn KÄYTTÖOIKEUS- JA YLEISET TIEDOT: ',aRich.Font);
         s2 := otsikko (RivPit,'EDELTÄVÄN VERKON KÄSITTELYOSAN YLEISET OHJEET SEKÄ SELITYKSET: ',aRich.Font);
         s3 := otsikko (RivPit,'EDELTÄVÄN VERKON RIVIKOHTAISET SELITYKSET: ',aRich.Font);
         s4 := otsikko (RivPit,'LIITTYMÄTIETOJEN SYÖTTÖAVUSTEET: ',aRich.Font);
         s5 := otsikko (RivPit,'JOHTOTIETOJEN SYÖTTÖAVUSTEET: ',aRich.Font);
         s6 := otsikko (RivPit,'ED. VERKON JÄNNITEALEMATIETOJEN SYÖTTÖAVUSTEET: ',aRich.Font);
         aRich.Font.Size :=  8;                        //<,Vex, jotta <..> workkisi, muuten ei onaa,
         aRich.Font.Style := [];                       //<' TODETTU ################################
                           //,,Lisätään mjonot aRichiin ############################################
         lisaaKpl ('<b><f n="" s="10">'+ s1 +'</f></b>');  LF;                //< LF=TyhjäRiviVäliin
         lisaaKpl (avuste (0, 99,0, 1));                                      //< CmBx, Rv,SyoOsa, tulost

         lisaaKpl ('<b><f n="" s="10">'+ s2 +'</f></b>');  LF;                //< LF=TyhjäRiviVäliin
         lisaaKpl (avuste (0, 0,0, 1)); //}

         lisaaKpl ('<b><f n="" s="10">'+ s3 +'</f></b>');  LF;
         for i := 1 to {1}34  do begin
           s := avuste (0, i,0, 1);
           lisaaKpl (s);  end;

         lisaaKpl ('<b><f n="" s="10">'+ s4 +'</f></b>');  LF;
         for i := 1 to {1}4  do begin
           s := avuste (0, i,1, 1);
           lisaaKpl (s);  end;

         lisaaKpl ('<b><f n="" s="10">'+ s5 +'</f></b>');  LF;
         for i := 1 to {1}10  do begin
           s := avuste (0, i,2, 1);
           lisaaKpl (s);  end;

         lisaaKpl ('<b><f n="" s="10">'+ s6 +'</f></b>');  LF;
         for i := 1 to {1}3  do begin
           s := avuste (0, i,3, 1);
           lisaaKpl (s);  end;

         aRich.Print('');  //#######################################################################
    finally
      Screen.Cursor := crDefault;
      TulostaBtn.Enabled := true;
      SyoAktv := alpSyoAktv;         //< +3.0.0
      SyoAvOn := alpSyoAvOn;         //< +3.0.0
      SyottoAvFrm.Hide;              //< +3.0.0 Poistetaan tulostuksesta näkyviin jäänyt vika avuste
    end;//finally
end;//(TulostaBtnClic)TulostaAvust

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.TulostaBtnClick(Sender: TObject);
begin
   NormBtn;
   AvuChkSft (10);                //< +2.0.5  10 =Vapauttaa avusteen
    TulostaBtn.Enabled := False;
                                  //<<Tästä eteenpäin PrintDlgNola on ohitettu ja käytetty Delphi/RichEdit´in Printtiä.
   if (johdot <> nil) then
    begin
          Printer.Orientation := poLandscape; //<+6.0.0 DEVELOPER1 Oletuksesksi Landscape
          PrintDlgNola.MinPage := 1;
          PrintDlgNola.MaxPage := johdot.GetJohtoCount;
          if (PrintDlgNola.FromPage = 0) then PrintDlgNola.FromPage:= PrintDlgNola.MinPage;
          if (PrintDlgNola.ToPage = 0)   then PrintDlgNola.ToPage :=  PrintDlgNola.MaxPage;
    end
    else
    begin
          PrintDlgNola.MinPage := 0;
          PrintDlgNola.MaxPage := 0;
          PrintDlgNola.FromPage := 0;
          PrintDlgNola.ToPage := 0;
    end;

    if (PrintDlgNola.Execute(modeEdv, self) = TRUE) then //DEVELOPER2 6.12.1998
    begin
         Printer.Orientation := poLandscape; //<+120.6
         case printDlgNola.PrintRange of
            rangeHelpPages: TulostaAvust;   //< DEVELOPER1 +3.0.0 oli ";" = Avustetulostus oli kokonaan vex
            rangeAllPages:  TulostaEdv;
            rangePageNUms:  TulostaEdv;
         end;
    end;
    TulostaBtn.Enabled := True;          //<Tämä oli kahdesti ~59~ lähtien 120.6 asti (nyt korjasin).
end;

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.TulostaEdv;
var
   headerMetafile, myMetaFile, middleMetaFile: TMetaFile;
   headerCanvas, middleCanvas, firstCableCanvas: TMetaFileCanvas;  //<Never used
   destRect: TRect;
   mult:   real;
   leftMargin, topMargin: integer;
   x, middleTop, ekajohto, vikajohto : integer;
   johto: TJohto;
   lahto: Boolean;
   prevMMHeight: integer;
   prevMMWidth: integer;
   adate, atime: TDateTime;
begin
{     alpColor := HeaderPanel.Color;
     HeaderPanel.Color :=          cl3DLight;
     KuvausVpan.Color :=           cl3DLight;
   //FooterPanel.Color :=          cl3DLight;
     JohdotColHeaderPanel.Color := cl3DLight;
     ExtraPanel.Color :=           cl3DLight;
     LahtoPanel.Color :=           cl3DLight;}

      Screen.Cursor := crHourGlass;
      MyMetafile := TMetafile.Create;

      adate := date;
      atime := time;

      { Marginaali }
      if (Printer.Orientation = poPortrait) then
      begin
           leftMargin := PRINT_MARGINAL;
           topMargin := 0;
      end
      else
      begin
           leftMargin := 0;
           topMargin :=  PRINT_MARGINAL;
      end;

      destrect.left := leftMargin;
      destrect.top :=  topMargin;

      printer.Title := ExtractFileName(EdvFilen);

      printer.BeginDoc;

      { Luodaan otsikko }
      destrect.top := topMargin;

      mult := printer.canvas.font.PixelsPerInch / font.PixelsPerInch * (PrintDlgNola.Zoom / 100);

      destrect.top := destrect.top + PrintHeader(self, printer.canvas, printer.PageWidth, leftMargin, topMargin, //<,Tällä rvllä Err, myöhemminkin.
                     EdvFilen, 1, aDate, aTime, PrintDlgNola.Zoom, mult, PrintDlgNola.PrintHeader);

      destrect.top := destrect.top + PrintTiedot(printer.canvas, printer.PageWidth, leftMargin, destrect.top, mult, PRINT_BG_COLOR);

      { Luodaan header }
      headerMetafile := TMetafile.Create;
      headerCanvas :=   TMetafileCanvas.Create(headermetafile, 0);

      PrintControl(JohdotColHeaderPanel, 0,0, headerCanvas,
                   PRINT_BG_COLOR, true, printer.PageWidth);

      headerCanvas.Destroy;

      HeaderMetafile.MMHeight := Trunc(mult * HeaderMetafile.MMHeight+ 0.5);
      HeaderMetafile.MMWidth :=  Trunc(mult * HeaderMetafile.MMWidth+ 0.5);{
      HeaderMetafile.MMHeight := mmH1500(Trunc(mult * HeaderMetafile.MMHeight+ 0.5)); //<,fKESKEN 120.6
      HeaderMetafile.MMWidth :=  mmW2000(Trunc(mult * HeaderMetafile.MMWidth+ 0.5));}

      { Luodaan välijohto }
      middleMetafile := TMetafile.Create;
      middleCanvas :=   TMetafileCanvas.Create(middlemetafile, 0);
      middleCanvas.CopyRect(Rect(0,0,EDV_JOHTO_BORDER,johdot.headerimage.height),
                            johdot.headerimage.canvas,
                            Rect(0,0,EDV_JOHTO_BORDER,johdot.headerimage.height));
      middleCanvas.Destroy;

     middleMetafile.MMHeight := Trunc(mult * middleMetafile.MMHeight + 0.5);
      middleMetafile.MMWidth :=  Trunc(mult * middleMetafile.MMWidth + 0.5);{
      middleMetafile.MMHeight := mmH1500(Trunc(mult * middleMetafile.MMHeight+ 0.5)); //<,fKESKEN
      middleMetafile.MMWidth :=  mmW2000(Trunc(mult * middleMetafile.MMWidth + 0.5));}

      middleTop := Trunc(mult * (johdot.headerimage.top)+ 0.5);

      { Piirretään header }
      if (PrintDlgNola.HeaderAfterNewPage = True) then
      begin
         Printer.canvas.Draw(leftMargin,
                             destRect.top + Trunc(mult * (FirstCablePanel.height { + lahtoPanel.height })+ 0.5),
                             HeaderMetafile);

         destRect.left := destRect.left + Trunc(mult * JohdotColHeaderPanel.width + 0.5);
      end
      else
         destRect.left := destRect.left + Trunc(mult*(EDV_JOHTO_BORDER + EDV_MUUNTAJA_WIDTH) + 0.5);

      { Katsotaan mitkä johto-osat tulostetaan }
      if (PrintDlgNola.PrintRange = rangeAllPages) then
      begin
           lahto :=     TRUE;
           ekajohto :=  1;
           vikaJohto := johdot.GetJohtoCount;
      end
      else
      begin
           lahto :=     PrintDlgNola.TailInRangePrint;
           ekajohto :=  PrintDlgNola.FromPage;
           vikaJohto := PrintDlgNola.ToPage;
      end;

      { Piirretään ensimmäinen liityntäjohto, jos tulostus aloitetaan ensimmäisestä johto-osasta }
      if (ekajohto = 1) then
      begin
        firstCableCanvas := TMetafileCanvas.Create(mymetafile, 0);
        PrintControl(FirstCablePanel, 0,0, firstCableCanvas, 0, false, printer.PageWidth);
        firstCableCanvas.Destroy;

       myMetafile.MMHeight := Trunc(mult * myMetafile.MMHeight);
        myMetafile.MMWidth :=  Trunc(mult * myMetafile.MMWidth);{
      myMetafile.MMHeight := mmH1500(Trunc(mult * myMetafile.MMHeight+ 0.5)); //<,fKESKEN
      myMetafile.MMWidth :=  mmW2000(Trunc(mult * myMetafile.MMWidth+ 0.5));}
        Printer.canvas.Draw(destRect.left - Trunc(mult* FirstCablePanel.width + 0.5),
                            destrect.top, myMetafile);
      end;

      { Tulostetaan johto-osat }
      prevMMHeight := myMetafile.MMHeight;
      prevMMWidth := myMetafile.MMWidth;

      for x:= ekaJohto - 1 to vikaJohto + 1 do
      begin
           if (x > vikaJohto) then
           begin
              //if (lahto = TRUE) then                       //< -6.0.0 DEVELOPER1 Tulosti aina katkoviivalähtöjohdon
                if lahto and                                 //<,+6.0.0 DEVELOPER1 Nyt tulostaa katkoviivalähdön vain
                  ( NOT PrintDlgNola.EdvRangeBtn.Checked  OR //   jos TulKAIKKI (NOT Checked) tai valitulla alueella.
                        PrintDlgNola.EdvRangeBtn.Checked and (x<=vikaJohto) )
                then
                   johto := johdot.GetJohto(johdot.GetJohtoCount + 1)
                else //DEVELOPER1}
                   johto := nil;
           end
           else
               johto := johdot.GetJohto(x);

           if johto <> nil then
           begin
                myMetafile.MMHeight := prevMMHeight;
                myMetafile.MMWidth :=  prevMMWidth;

                johto.DrawToMetaFile(myMetafile, PrintDlgNola.OpenClosed,
                                     PRINT_BG_COLOR, printer.PageWidth);

                { Palutetaan dimensiot ennalleen }
                prevMMHeight := myMetafile.MMHeight;
                prevMMWidth :=  myMetafile.MMWidth;

               myMetafile.MMHeight := Trunc(mult * myMetafile.MMHeight + 0.5);
                myMetafile.MMWidth :=  Trunc(mult * myMetafile.MMWidth+ 0.5);
               { myMetafile.MMHeight := mmH1500(Trunc(mult * myMetafile.MMHeight + 0.5)); //<,fKESKEN
                myMetafile.MMWidth :=  mmW2000(Trunc(mult * myMetafile.MMWidth+ 0.5));    }

                if (DestRect.Left + Trunc(mult * (johto.width) + 0.5) > printer.PageWidth) and
                   (Trunc(mult * (johto.width) + 0.5) < printer.PageWidth) then
                begin
                     if (DestRect.Top + Trunc(mult * (2*(johto.Height + johto.headerHeight) + EDV_JOHTO_VBORDER) + 0.5) > printer.PageHeight) and
                        (Trunc(mult * (johto.Height + johto.headerHeight + EDV_JOHTO_VBORDER) + 0.5) < printer.pageHeight) then
                     begin
                           // Aloitetaan uusi sivu
                           printer.NewPage;

                           // Piirtoalueen sijoitetaan paperin vasemmalle ylös
                           destrect.left := Trunc(leftMargin + mult * JohdotColHeaderPanel.width + 0.5);
                           destrect.top :=  topMargin + PrintHeader(self, printer.canvas, printer.PageWidth, leftMargin, topMargin,
                                                                 ExtractFileName(fileName), printer.PageNumber, adate, atime, PrintDlgNola.Zoom, mult, PrintDlgNola.PrintHeader);

                           if (PrintDlgNola.HeaderAfterNewPage = True) then
                              Printer.canvas.Draw(leftMargin,
                                    Trunc(destrect.top + mult * (FirstCablePanel.height) + 0.5), HeaderMetafile)
                           else
                               destrect.left := leftMargin;
                     end
                     else
                     begin
                           // Aloitetaan uusi rivi samalla sivulla, jolloin
                           // siirrytään paperin vasempaan laitaan yhtä johto-osa riviä alemmaksi
                           destrect.left := Trunc(leftMargin + mult * JohdotColHeaderPanel.width + 0.5);
                           destRect.top := DestRect.Top + Trunc(mult * (johto.Height + johto.headerHeight + EDV_JOHTO_VBORDER) + 0.5);

                           if (PrintDlgNola.HeaderAfterNewLine = True) then
                               Printer.canvas.Draw(leftMargin,
                                                   DestRect.top + Trunc(mult * FirstCablePanel.height + 0.5),
                                                   HeaderMetafile)
                           else
                               destrect.left := leftMargin + Trunc(mult*(EDV_JOHTO_BORDER + EDV_MUUNTAJA_WIDTH) + 0.5);
                     end;
                end;

                Printer.canvas.Draw(destrect.left{10}, destrect.top{10}, myMetafile); //<(koe vex) fKESKEN

                if (x < johdot.GetJohtoCount + 1) then
                begin { Välijohto}
                                      Printer.canvas.Draw(destrect.left + Pyor(mult * (johto.width)),
                                          destrect.top  + middleTop,  middleMetafile);
                end;

                if (johto.Open = True) then
                   destrect.left := destrect.left + Trunc(mult * (johto.width + EDV_JOHTO_BORDER) + 0.5)
                else
                   destrect.left := destrect.left + Trunc(mult * (johto.width) + 1 + 0.5);
           end
      end;

      Printer.EndDoc;

      middleMetaFile.destroy;
      myMetafile.destroy;
      headerMetafile.Destroy;

      Screen.Cursor := crDefault;

{     HeaderPanel.Color :=          alpColor;
     KuvausVpan.Color :=           alpColor;
   //FooterPanel.Color :=          alpColor;
     JohdotColHeaderPanel.Color := alpColor;
     ExtraPanel.Color :=           alpColor;
     LahtoPanel.Color :=           alpColor;}
end;//TulostaEdv

///////////////////////////////////////////////////////////////////////////////
function  TEdvNewFrm.PrintTiedot(canvas: TCanvas; width: integer; left, top: integer; zoom: Real; bgColor: TColor): integer;
CONST MaxArr=32;
var
   otsikkoMetaFile: TMetafile;
   otsikkoCanvas:   TMetaFileCanvas;
   panel: TPanel;
   aika, PRaika{+8.0.0}, sulake, cu, un, Kuvaus, pituus, osat, PEN_PE{+6.0.3}: TLabelNola;
   sel :array [-4..MaxArr] of TLabelNola; //< +6.0.3
   kuvausEd: TLabel;
   suurin,ai{+10.0.3} :integer;   sa :string{+10.0.3};

   procedure TulSelit; //<Selitysosan tulostaminen arkin yläpaneliin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, +6.0.3
         VAR y0,dy, no,rv, x1,x2,x3,x4, hh,w1,w2,w3,w4 :integer;      begin
      //Image.Canvas.TextOut (x,y, '...');  =OK, mutta jälki karkeaa.
      y0 := Kuvaus.Top +Kuvaus.Height +2;  dy := 12; //< dy=12 =4 mm ###############################
      w1 := 30;   w2 := 80;   w3 := 180;        w4 := Panel.Width; //<Vaikka menee yli
      hh := 12;   x1 := 2;    x2 := x1+w1 +4;   x3 := x2+w2 +4;    x4 := x3+w3 +4;

      for no := -4 to MaxArr  do begin
         sel [no] := TLabelNola.Create(panel);
         sel [no].parent :=            panel;
         with sel [no]  do begin //<,,,,,,,,, with sel [no].Font, .Top, ... .Width tms.,,,,,,,,,,,,,,,,,,,,,,,,,,,
            Font.Style := [];
            Font.Size := 8;
            Height :=    hh;
            if no < 1
            then begin
               Font.Style := [{fsBold}]; //< = sel [no].Font.Style  <= Hoidetaan tageilla.
               case no of                                //,,y0 =Ylin rivi,  y0+dy =seur. rivi
               -4 :begin Left := x1;  Width := w2;  Top := y0;     Caption := '<b><u>SELITYKSET:</u></b>';  end;
               -3 :begin Left := x1;  Width := w1;  Top := y0+dy;  Caption := '<b><u>Rivi:</u></b>';        end;
               -2 :begin Left := x2;  Width := w2;  Top := y0+dy;  Caption := '<b><u>Riviotsikko:</u></b>'; end;
               -1 :begin Left := x3;  Width := w3;  Top := y0+dy;  Caption := '<b><u>Esim.:</u></b>';       end;
                0 :begin Left := x4;  Width := w4;  Top := y0+dy;  Caption := '<b><u>Selitys:</u></b>';     end;end//case
            end
            else begin
               rv := no DIV 4;
                     if no MOD 4 <> 0  then rv := rv +1;
               Top := y0 + (rv+1)*dy +4;                 //< rv+1  koska "SELITYKSET:" + otsikkorivit yläpuolella.
                          {Alkiojärjestys: -4            ="SELITYKSET:" -rivi
                                           -3 -2 -1  0   =Otsikkorivi
                                            1  2  3  4
                                            5  6  7  8   jne.}
               case no of                                                          //,Tässä varattu 9 :lle riville.
                  1,5, 9,13,17,21,25,29,33 :begin  Left := x1;  Width := w1;  end; //< Ainakin 33 jo yli tarpeen.
                  2,6,10,14,18,22,26,30,34 :begin  Left := x2;  Width := w2;  end;
                  3,7,11,15,19,23,27,31,35 :begin  Left := x3;  Width := w3;  end;
               else                         begin  Left := x4;  Width := w4;  end; end;//case
               case no of
{Rv 1}            1 :Caption := '(1)';
                  2 :   Caption := 'Liittymätiedot';
                  3 :      Caption := 'Muunt. 800 kVA srj3 (aleKuorPh)...';
                  4 :         Caption := 'SJ-, PJ- tai UPS -liittymäkuvaus. <b><u>HUOMAA SJ -liittyjällä '+
                                       //'muuntajatyyppivalinta mahd. ao. erityistarkastelua varten</u>:</b>';//-6.0.4
                                         'muuntajatyyppivalinta mahd. ao. Ik1v/Ik3v -tarkastelua varten</u>:</b>';
{Rv 2}         5,6,7 : ;
                  8 :         Caption := '   1=norm.häviöt  2=alennettu tyhjäkäyntihäv.  3=alenn. kuormitushäv.  '+
{Rv 3,}                                  '8=maxIk3v  9=minIk1v.  Liittymän imped.tiedot (Un :ssä).';
{RivNo}           9 :Caption := '6';
{Symboli tms.}   10 :   Caption := 'Ik1v';
{Esim.}          11 :      Caption := '19.5/16.23 kA';
{Selitys}        12 :         Caption := 'Ik1v johto-osan alussa kiskostossa /max.impedanssipisteessä (yleensä '+
                                         'lopussa, välillä jos kaapeleita >2).';
{Rv 4}           13 :Caption := '7 - 9';
                 14 :   Caption := 'Ik3...';
                 15 :      Caption := '(33.3) 48.86 kA';
                 16 :         Caption := 'Ik3th =Terminen, Ik3d =dynaaminen Ik3v johdon alussa kiskostossa. '+
                                         'Sulkeissa <b>ed.johdon OFAA-OikoSul</b> -SULAKKEEN RAJOITTAMA arvo.';
{Rv 5}           17 :Caption := '10';
                 18 :   Caption := 'Max.sulakk.';
                 19 :      Caption := 'ofa 200A : <10 ms (15.7 / 28.35 kA)';
                 20 :         Caption := 'Tarkasteltu OFAA-sulakekoko : Poiskytkentäaika (10 ms - 100 s). <b>Sulkeissa ed. '+
                                         'johto-osan OFAAn rajoittama (Ik3th/Ik3d).</b>';
{Rv 6}           21 :Caption := '11';
                 22 :   Caption := 'Suojausehdot ...';
                 23 :      Caption := '(5.0 s) : 2.08 s   1250 A.';
                 24 :         Caption := 'Sähkölaitoksen (SÄL) max.sulakekoko, edessä toteutuva poiskytk.aika, '+
                                         'KULuttajalle esim. 5s=630 A <b>\</b> .4s=400 A'; //9.0.1
{Rv 7}           25 :Caption := '12-15';
                 26 :   Caption := 'Oikos..Yliv..';
                 27 :      Caption := 'Yliv.AsA : <10 ms  (181) 200 A.';
                 28 :         Caption := 'Johdon ominaisuuksien muk. max.sulakekoot eri suojaus- ja '+
                                         'as.tavoilla. Poiskytk.aika kuten ed.   (181) = sallittu kuorma.';
{Rv 8}           29 :Caption := '22-..';
                 30 :   Caption := 'Pistor.Dz..';
                 31 :      Caption := '119.6m/96.7m';
                 32 :         Caption := 'Max. ryhmäjohtojen pituudet eri suojalaitteilla (Dz -sulake tai B,C,D '+
                                         'tyypin johdonsuojakatkaisijoilla ja johdoilla 16A(2.5mm²) /10A(1.5mm²).';
               else  Caption := IntToStr (no); //<Ei kylläkään tule näkyviin, jos Panel.Heigth ei riitä.
               end;//case
            end;//if no IN .. else
         end;//with
      end;
   end;//TulSelit}

begin//PrintTiedot.........................................
     { Tehdään otsikko }
     panel := TPanel.Create(nil);
     panel.visible := False;
     panel.parent :=  self;
     panel.Height :=  200;
     panel.width :=   Trunc((width - left) / zoom);
     panel.BevelInner := bvNone;
     panel.BevelOuter := bvNone;
     panel.BorderStyle := bsSingle;
     panel.Ctl3D :=       False;
     panel.Color :=       bgColor;
     panel.caption :=     '';

     sulake := TLabelNola.Create(panel);
     sulake.parent := panel;

     aika := TLabelNola.Create(panel);
     aika.parent := panel;

     PRaika := TLabelNola.Create(panel);  //< +8.0.0
     PRaika.parent := panel;

     cu := TLabelNola.Create(panel);
     cu.parent := panel;

     un := TLabelNola.Create(panel);
     un.parent := panel;

     PEN_PE := TLabelNola.Create(panel);  //<, +6.0.3
     PEN_PE.parent := panel;

     kuvaus := TLabelNola.Create(panel);
     kuvaus.parent := panel;

     pituus := TLabelNola.Create(panel);
     pituus.parent := panel;

     osat := TLabelNola.Create(panel);
     osat.parent := panel;

     kuvausEd := TLabel.Create(panel);
     kuvausEd.parent := panel;
     kuvausEd.Autosize := FALSE;

     aika.top :=   2;
     PRaika.top := aika.top;
     sulake.top := aika.top;
     un.top :=     aika.top;
     cu.top :=     aika.top;
     PEN_PE.Top := 2;
     pituus.top := aika.top;
     osat.top :=   aika.top;

     aika.Left :=   PoiskRadVal.Left;
     PRaika.Left := PRradVal.Left -30;             //<      +8.0.0
     sulake.left := 170;//SulakRadVal.Left -35;    //< -10  +6.0.3  -8.0.0

     un.Left :=     270;//sulake.left + sulake.Width +10;//UnLabel.left; <,,-8.0.0
     cu.left :=     320;//un.left + un.Width +10;//CuLabel.left;
     PEN_PE.Left := 390;//UnLabel.Left;
   //PEN_PE.Left := cu.Left +cu.Width +15 +CuLabel.left +CuLabel.Width;
   //PEN_PE.Left := cu.Left +{cu.Width +}15 +{CuLabel.left +}CuLabel.Width;
     osat.left :=   740;//CuLabel.left  + CuLabel.left - UnLabel.left +200; //< +200      +6.0.3 -8.0.0
     pituus.Left := osat.left + 100;                                  //< 150=>100  +6.0.3

     aika.caption := 'Poiskytk: ';                                    //< 8.0.0
     if (PoiskRadVal.ItemIndex = 0)
        then aika.caption := aika.caption +fPoiskAikaRajaS +'s'
        else aika.caption := aika.caption +'5.0s';

     PRaika.caption := 'PistorAika: ';
     if (PRradVal.ItemIndex = 0)                                      //<,,+8.0.0
      //then PRaika.caption := PRaika.caption +'0.4 s'
        then PRaika.caption := PRaika.caption +fRmrkt0 (fPoiskAikaRaja,1,1) +' s' //<+8.0.8
        else PRaika.caption := PRaika.caption +'0.2 s';
//AsTapa´lle vois määritellä myös, mutta koska se näkyy jo panelissa, ei erillistä LABEL´iä tarvita 8.0.11.
     if (SulakRadVal.ItemIndex = 0)
        then sulake.caption := SulakRadVal.Caption + ': ' + 'IEC'
        else sulake.caption := SulakRadVal.Caption + ': ' + 'OFAA';
// aikaL=2 PoisL=2 PRaikaL=82 sulL=170 UnL=270 cuL=320 aikaW=68 PoisW=107 PRaikaW=78 sulW=88 unW=3 cuW=3
{KuvausEdit.Text := ' aikaL='+IntToStr(aika.Left)  +' PoisL='+IntToStr(PoiskRadVal.Left)  +' PRaikaL='+IntToStr(PRaika.Left) +
                   ' sulL='+IntToStr(sulake.left) +' UnL='+IntToStr(un.left)             +' cuL='+IntToStr(cu.left) +
                   ' aikaW='+IntToStr(aika.Width) +' PoisW='+IntToStr(PoiskRadVal.Width) +' PRaikaW='+IntToStr(PRaika.Width) +
                   ' sulW='+IntToStr(sulake.Width) +' unW='+IntToStr(un.Width)           +' cuW='+IntToStr(cu.Width);}

     un.caption :=     UnLabel.Caption + UnCmBx.text;
     cu.caption :=     CuLabel.Caption + cUCmBx.text;
   //PEN_PE.Caption := PEN_PE_inf.Caption;                              //< +6.0.3  -10.0.3  (0.01xx + j0.01xx)
     sa := edv.YLE.PEN_PE.arvoStr;                                      //<,,+10.0.3  => 1 amcmk4½ 120 20 80 => 141.1: "..axmk4 300"
     ai := Pos ('(L=',sa);
     if ai>0  then Delete (sa,ai,99);                                   //<Delataan lopusta "(L=ekviv.)
     PEN_PE.Caption := 'PEN+PE yhdist.= ' +sa +' (kpl typ mm² pit °C)'; //<''+10.0.3
     pituus.font :=    YhtPit.font;
     pituus.caption := YhtPit.caption;
     osat.font :=      JOsia.font;
     osat.caption :=   JOsia.caption;

     suurin := 0;

     if (aika.height > suurin)    then suurin := aika.top + aika.height;
     if (sulake.height > suurin)  then suurin := sulake.top + sulake.height;
     if (un.height > suurin)      then suurin := un.top + un.height;
     if (cu.height > suurin)      then suurin := cu.top + cu.height;

     kuvaus.top :=       suurin + 2;
     kuvaus.left :=      aika.left +4;                    //< +4  +6.0.3
     kuvaus.caption :=   KuvausVpan.caption;
     kuvausEd.left :=    kuvaus.left + kuvaus.width + 10;
     kuvausEd.Caption := KuvausEdit.text;
     kuvausEd.Top :=     kuvaus.top;
     kuvausEd.width:=    panel.width - kuvausEd.left - 1;
     kuvausEd.Height :=  kuvausEdit.height - 5;
     kuvausEd.color :=   clWhite;
     kuvausEd.repaint;
   //panel.height := suurin + 2 + kuvausEd.height + 1;
     panel.height := suurin + 2 + kuvausEd.height + 128; //< +1 => +108,  12=riviH = 4 mm.          +6.0.3
   //###############################################'''määrää SELITYSosan mahtumisen ###############

     { Tulostetaan otsikko }
     otsikkoMetafile := TMetafile.Create;
     otsikkoCanvas :=   TMetafileCanvas.Create(otsikkometafile, 0);

     TulSelit; //<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< +6.0.3

     panel.PaintTo(otsikkoCanvas.handle, 0,0);
     otsikkoCanvas.free;

    otsikkoMetafile.MMHeight := Trunc(zoom * otsikkoMetafile.MMHeight + 0.5); //fKESKEN
     otsikkoMetafile.MMWidth :=  Trunc(zoom * otsikkoMetafile.MMWidth + 0.5);{
     otsikkoMetafile.MMHeight := mmH1500(Trunc(zoom * otsikkoMetafile.MMHeight+ 0.5));
     otsikkoMetafile.MMWidth  := mmW2000(Trunc(zoom * otsikkoMetafile.MMWidth+ 0.5));}

     canvas.Draw(left, top, otsikkoMetafile);                                    //<Tässä INVALID_FLOATING_OPERATION.
     {result := PrintPanel(self, HeaderPanel, zoom,
                    left, top, Trunc((width - left) / zoom), HeaderPanel.Height,
                    canvas);          }

     otsikkoMetafile.free;
     panel.free;

     result := Trunc(zoom * (panel.height) + 0.5)
end;//PrintTiedot

//##################################################################################################
//##################################################################################################
///////////////////////////////////////////////////////////////////////////////

procedure TEdvNewFrm.LisaaBtnClick(Sender: TObject);      LABEL 1;                       //Uusittu 8.0.0
      var  johtoja,sorcja,v,n,srcMax :integer;  s,sa,sv :string;  mahtuuLii,mahtuuJoh,neg :boolean;       begin
//avuste (0{CmBx},1{Rv},1{SyoOsa},0{Tulost}); //< =CmBx,Rv,SyoOsa,Tulost
//avuste (0{CmBx},0{Rv},0{SyoOsa},0{Tulost}); //< =CmBx,Rv,SyoOsa,Tulost   Rinnakk yms.=OK.

                                             //¿DefsFileenZ('EdvNew/LisaaBtn:  1');
                                             YFileen('¿EdvNew/LisaaBtn:  1');
   NormBtn;
   AvuChkSft (10);                //< +2.0.5  10 =Vapauttaa avusteen
   Screen.Cursor := crHourglass;
                                             //¿DefsFileenZ('EdvNew/LisaaBtn:  2');
                                             YFileen('¿EdvNew/LisaaBtn:  2');
   PvitaMuutokset;                //<Ekax pvitetään juuri muutetut MUUT asiat
                                             //¿DefsFileenZ('EdvNew/LisaaBtn:  3');
                                             YFileen('¿EdvNew/LisaaBtn:  3');
     sorcja := {a_getIntg(102102,}  edv.YLE.SorceCount.ArvoInt;
     johtoja := {a_getIntg(102101,} edv.YLE.JohtoOsia.ArvoInt;
     mahtuuLii := sorcja<edLmaxKpl;
     mahtuuJoh := johtoja<edMaxKpl;

   if NOT mahtuuLii AND  NOT mahtuuJoh
   then InfoDlg_ ('Kuvaaja on täysi, et voi lisätä <b>rinnakkaisliittymiä</b> (max=' +IntToStr (EdLmaxKpl) +
                  ') etkä verkon <b>johto-osia</b> (max '+IntToStr (EdMaxKpl) +'). Johto-osia voit lisätä, '+
                  'kun siirrät viimeisen palstan  <b>VIHREÄLLÄ esitetyt arvot uudeksi PJ-liittymäksi!',
                  mtInformation, 'OK','','','',  '','','','',
                  TRUE{KopioInfo},FALSE{ArvoBxkin},'',s)
   else begin
1:    s := 'Valitse ';
      if mahtuuJoh  then begin
         s := s +'<b>verkon JOHTO-OSA (1';
         if johtoja=0
            then s := s +')'
            else s := s +' ... ' +IntToStr(johtoja+1) +')'; //<''Jos ei johtoja, tuli (1 ... 1). +8.0.5
      end;                                                  //'''Valitse verkon JOHTO-OSA (1 ... N)
      if mahtuuJoh  AND mahtuuLii  then
         s := s +' tai ';

      s := s +'<b>LIITTYMÄT (01 ... 0';
      if sorcja < edLmaxKpl                                 //< edLmaxKpl =5 kpl
         then v := sorcja+1
         else v := edLmaxKpl;
      srcMax := v;
      s := s +IntToStr(v) +')</b>';

      //,,Pudotusvalikkoon:,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
      sv := '';
      for n := johtoja+1 DownTo 1  do sv := sv +';' +IntToStr(n);
      sv := sv +';- - - - Liittymä:';

      for n := v DownTo 1  do begin                         //<,,LIITTYMÄve:t
          sv := sv +';0' +IntToStr(n);                      //<Tiedoksi pud.valikkoon, että rinnakkais-
         {if n>1  then }sv := sv +  '   (EXT)';             // liittymille oltava lvEXTended.  n>1 = -8.0.10
      end;

      s := s +'.  Jos lisäät liittymän, se on rinnakkainen aikaisempien liittymien kanssa.<br>'+
           '   Jos antamasi liittymä- tai johto-osanumero on jo kuvaajassa, <b>siirtyvät seuraavat oikealle ja '+
           'valitsemasi sijoitetaan tähän väliin.</b> Rinnakkaisliittymien käsittely edellyttää EXTended -laajuutta, '+
           'muuten ohjelma toimii esittelyversiona.<br>'+
           'NOLA ei hyväksy UPSeja kytkettäväksi rinnakkain.<br>'+
           'Rinnakkaisliittymät jäykistävät verkkoa myös viereisten liittymien navoissa, mutta ne huomioidaan '+
           'vain 3v-tapauksissa (vrt. kojeistovaatimukset).<br>';
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                                                  //¿DefsFileenZ('EdvNew/LisaaBtn:  4');
                                                  YFileen('¿EdvNew/LisaaBtn:  4');
 v := InfoDlg_ (s, mtInformation, 'OK','Peru','','',  '','','','',
                     TRUE{CutInfo},TRUE{Bxkin},sv,s);
      if v=1  then begin //< v = 1, 2 tai 9 (9 jos poistuttu X :llä)
                          {v := -1*(sorcja+1);  i := -1;
                           if SokI (s,n)  and (n IN [v..i, 1..johtoja+1]) //<Ei onaa}
                                                  //¿DefsFileenZ('EdvNew/LisaaBtn:  5');
                                                  YFileen('¿EdvNew/LisaaBtn:  5');
         s := Trim (s);
       //if NOT SokI(s,n)  then begin                            //<Error
         if Pos('- -',s) >0  then begin                          //<,,120.5n/6:  Valintaa: "- - - Liittymä" ei hyväksytä.
            Y_piip;  GOTO 1;  end;

         if (s<>'') and (CharInSet(s[1], ['0','-']))
            then neg := true                                     //<,Tunnistetaan, halutaanko LIITTYMÄ vai VERKON JOHTO.
            else neg := false;
         while (s<>'') and CharInSet(s[1], ['0','-'])  do        //<Muokataan pelkäksi kokonaisluvuksi, liiat mrkt vex.
            Delete (s,1,1);
         if neg  then s := '-' +s;                               //<Takaisin etumerkki jos LIITTYMÄän.

         if SokI (s,n)  and (Abs(n)>1)  and (SyottoFrm.RadGrp.ItemIndex=3{UPS})  and neg{+8.0.14} //<,+8.0.10
         then InfoDlg_ ('UPS´eja ei voi kytkeä rinnan (NOLA ei hyväksy)!',
                         mtInformation, 'OK','','','',  '','','','',
                         TRUE{KopioInfo},FALSE{ArvoBxkin},'',s)
         else if SokI (s,n) and
            (n>0) and (n IN [1..johtoja+1])  OR  (n<0) and (Abs(n) IN [1..srcMax{sorcja+1}]) //<srcMax =+8.0.6
         then begin
            //EXT_Demo  and alustettu
                                                  //¿DefsFileenZ('EdvNew/LisaaBtn:  6');
                                                  YFileen('¿EdvNew/LisaaBtn:  6');
            if (n<-1) and LisYliDemo_ (lvExtended) and NOT fKaikkiOikeudet_1x  then begin //<fKaikkiOikeudet_1x=+12.0.0
               sa := '(Src+:) Rinnakkaisliittymän käsittely edellyttää EXTended -laajuutta';
               if Demo(22) and LisAsennettu
               then sa := sa +', nyt voimassa: ' +LisLaajToStr (fVoimassaLaajTest,0) +sa + '.'
               else sa := sa +'.  Sinulla ei ole voimassa olevaa EXTended -käyttöoikeutta.';

               sa := sa +' Ohjelmaosa toimii rinnakkaisliittymien osalta esittelyversiona.';
               InfoDlg_ (sa, mtInformation, 'OK','','','',  '','','','', TRUE{CutInfo},FALSE{Bxkin},s,s);
            end;
            if n<0
               then syoKut := 6  //<Liittymätiedot  LISÄYS
               else syoKut := 7; //<Johto-osatiedot LISÄYS
            edi := n;            //<Vielä tässä negatiivinen jos sorc.
                                                  //¿DefsFileenZ('EdvNew/LisaaBtn:  7');
                                                  YFileen('¿EdvNew/LisaaBtn:  7');
            editSyoFrm;
                                                  //¿DefsFileenZ('EdvNew/LisaaBtn:  8');
                                                  YFileen('¿EdvNew/LisaaBtn:  8');
            PvitaEdvFrm;
                                                  //¿DefsFileenZ('EdvNew/LisaaBtn:  9');  end
                                                  YFileen('¿EdvNew/LisaaBtn:  9');  end
         else begin
                                                  //¿DefsFileenZ('EdvNew/LisaaBtn:  10');
                                                  YFileen('¿EdvNew/LisaaBtn:  10');
            s := Trim(s);
            if (s<>'') and (s[1]='-')  then
               s[1] := '0';              //<Poistetaan etumerkki ja tilalle '0'.
            InfoDlg_ ('Virheellinen arvo:  ' +s, mtError, 'OK','','','',  '','','','',
                      TRUE{CutInfo},FALSE{Bxkin},sv,s);
                                                  //¿DefsFileenZ('EdvNew/LisaaBtn:  -11');
                                                  YFileen('¿EdvNew/LisaaBtn:  -11');
            GOTO 1;
         end;
      end;
   end;
   Screen.Cursor := crDefault;
end;//LisaaBtnClick

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.PohjaClick(Sender: TObject); //TÄHÄN EIkä AvuChkSft_iin VOI LAITTAA BREAKPOINTIA, JOS HALUAA
begin                                             //DblClck:IIN BreakPointin @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
     PvitaMuutokset;
   //Caption := Caption +'+Sigl'; //< +2.0.1
     AvuChkSft (11);      //< -2.0.3  +2.0.5  11 =Lukitsee
end;

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.PohjaDblClick(Sender: TObject);  //<,Ei voida poistaa koska on ohjelmallinen!!!
begin                    //JOS TÄHÄN tai AvuChkSft_iin BREAKPOINT, POHJAClck:IIN EI SAA LAITTAA =PYSÄHTYY NIISSÄ.
     PvitaMuutokset;     //DblClick:llä PohjaClick TAPAHTUU AINA EKAX JA SEN JÄLK. VASTA PohjaDblClick
   //Caption := Caption +'+Dopl '; //< +2.0.1          //,Jos haluaa debugata AvuChkSft_ta, BreakPnt TÄHÄN
     AvuChkSft (10);      //<10 = vapauttaa avusteen   // ja Breakin JÄLKEEN AvuChkSft_IIN @@@@@@@@@@@@@@@@@@@@@@
end;

///////////////////////////////////////////////////////////////////////////////
procedure FrmOtsikko;      var filn :string;  ns,nj,i :integer;  yhtL :real;      begin
   filn := EdvFilen;                                    //<EdvFilen sai arvon LueTalEdvFile_ssa<<<<<
   if filn=''  then filn := '(Oletusarvot)';            //<,,-120.5i
   EdvNewFrm.Caption := PROGRAM_VERSIO_STRING +':  Verkkolaskenta / Edeltävä verkko:   '+ filn;
         ns := {a_getIntg (2,} edv.YLE.SorceCount.ArvoInt;        //<,Liittymiä +8.0.6
         nj := {a_getIntg (2,} edv.YLE.JohtoOsia.ArvoInt;
    //JOsia.Top := 15;
   EdvNewFrm.JOsia.Caption :=  'Liittymiä:  ' +IntToStr (ns) +' kpl  Johto-osia:  '+fImrkt0 (nj,1) +' kpl';
     {JOsia.Font.Color :=  clBlue;}
         yhtL := 0;
         for i := 1 to nj  do yhtL := yhtL +a_getReaa (3,edv.edka[i].pituus);
    //JOsia.Top := 28;
   EdvNewFrm.YhtPit.Caption := FONT_SIGMA +' L = '+fRmrkt0 (yhtL,1,1) +' m';
     {YhtPit.Font.Color := JOsia.Font.Color;  }
    //if ApuLbl.Caption<>'ApuLbl'  then               //<Vex, koska 'ApuLbl' näkyi AINA  -8.0.5
   EdvNewFrm.ApuLbl.Caption := '';                        //<'+6.2.2  Muuten tyhjällä verkkokuvaajalla näkyy "ApuLbl"
 //end;//with
end;

{,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,}
///////////////////////////////////////////////////////////////////////////////
procedure sijBx(BxNo :integer);   var tmpItems :TStringList;  i{,u} :Integer; //< 1=Un  2=cU  3=Res..mm²
begin                 //,,,,,,,TEKEE ITEM-LISTAN: 'Oletus;Item[0];Item[1]... ###########################
    case BxNo of
    1 :with EdvNewFrm.UnCmBx  do begin
           tmpItems := f_Items(BxItems(BxNo,0));      //<Tehdään BXITEMS:stä ITEM-lista TmpITEMS
           EdvNewFrm.UnCmBx.Items.Assign(tmpItems);   //<ASSIGN =ei tartte ekax Clear
           tmpItems.Free; //<####### VASTA TÄSSÄ SAA TUHOTA. MUUTEN OSOITIN HÄVIÄÄ LIIAN AIKAISIN #######
          Text := Items.Strings[0];                   //<Oletusikkunaan arvo ###########################
          i := 2;                            //,EiOnaa: if Text=Str[0],koska Text onKoko"rimpsu",TODETTU
          if Items.Strings[0]=Items.Strings[1]  then begin
             while i<Items.Count  do begin            //<Siirret "ylemmäksi", koska [0]=strOletus (=Text)
               Items.Strings[i-1] := Items.Strings[i];//'ja [1]:ssä oli sama, joten [0] joutaa vex. Näin,
               i := i+1;                              //'vaikka listassa oleva SAMA varjostuukin, mutta
             end;//while                              //'varjostus häviää, jos oletusarvo pyyhitään.
             Items.Delete(Items.Count-1);             //<Muuten  vikan rivn sisältö näkyy kahdella rivllä
          end;{if Strings..}          //Y_Koe (2,'0='+Strings[0]+'   1='+Strings[1]+'   2='+Strings[2]);
       end;//with
    2 :with EdvNewFrm.cUCmBx  do begin
           tmpItems := f_Items(BxItems(BxNo,0));      //<Tehdään BXITEMS:stä ITEM-lista TmpITEMS
           EdvNewFrm.cUCmBx.Items.Assign(tmpItems);   //<ASSIGN =ei tartte ekax Clear
           tmpItems.Free; //<####### VASTA TÄSSÄ SAA TUHOTA. MUUTEN OSOITIN HÄVIÄÄ LIIAN AIKAISIN #######
          Text := Items.Strings[0];                  //<Oletusikkunaan arvo ############################
          i := 2;                            //,EiOnaa: if Text=Str[0],koska Text onKoko"rimpsu",TODETTU
          if Items.Strings[0]=Items.Strings[1]  then begin
            while i<Items.Count  do begin            //<Siirret "ylemmäksi", koska [0]=strOletus (=Text)
              Items.Strings[i-1] := Items.Strings[i];//'ja [1]:ssä oli sama, joten [0] joutaa vex. Näin,
              i := i+1;                              //'vaikka listassa oleva SAMA varjostuukin, mutta
            end;                                     //'varjostus häviää, jos oletusarvo pyyhitään.
          Items.Delete(Items.Count-1);               //<Muuten  vikan rivn sisältö näkyy kahdella rivllä
          end;{if Strings..}          //Y_Koe (2,'0='+Strings[0]+'   1='+Strings[1]+'   2='+Strings[2]);
          EdvNewFrm.UnCmBx.DropDownCount := 30;
       end;//with ..Bx
    3 :with EdvNewFrm.PrRjMm2Bx  do             //<,,+120.5........................................
       if Items.Count=0  then begin
        //Items.Clear;                          //,,Valinta sijoitettu: ks. PRC TEdvNewFrm.PrRjMm2BxSelect
          Items.Add('16A 2.5/10A 1.5 mm²');
          Items.Add('10A 2.5/1.5 mm²');

          Items.Add('6A 2.5/1.5 mm²');          //<,,+130.0:  6A..2A
          Items.Add('4A 2.5/1.5 mm²');
          Items.Add('2A 2.5/1.5 mm²');

          Items.Add('4mm² 16A/10A ');
          Items.Add('6mm² 16A/10A ');
          Items.Add('10mm² 16A/10A ');
          Items.Add('16mm² 16A/10A ');                     //,,,,,,,,-130.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,
        (*i := {a_getIntg(96,}edv.YLE.PrRjMm2.ArvoInt;     //< 1 =2.5/1.5 mm² ... 16 mm²
          u := PrRjMm2_toIndx(i);
          EdvNewFrm.PrRjMm2Bx.ItemIndex := u; *)
          if EdvNewFrm.PrRjMm2Bx.ItemIndex <0  then        //<ObjInsp´in jäljiltä -1.
             EdvNewFrm.PrRjMm2Bx.ItemIndex := 0;           //<+130.0
          EdvNewFrm.PrRjMm2Bx.Text := Items[ItemIndex];
       end;//with
    end;//case
end;//sijBx;

///////////////////////////////////////////////////////////////////////////////
procedure sijBoxitNew;      begin;
  sijBx(1);     //<,Un ja cU -boxeihin arvot + itemit ##############################################
  sijBx(2);
  sijBx(3);  end;

(*-----------------------------------------
procedure napitOnEi (able,os :integer);   begin  {able 1/0=on/ei   os=kutsuvan os
                                          os= 1=OhjeNap  2=PRC Rsel, joiden toiminnan}
  with EdvNewFrm  do                      {ajaksi muut painikkeet suljetaan}
  if able=0                                     //<Nappitoimintamahis vex
  then begin  OkBtn.Enabled := false;
              SuljeBtn.Enabled := false;
            //TulostusBtn.Enabled := false;
              PalautaBtn.Enabled := false;
              LueBtn.Enabled := false;
              DetaljitBtn.Enabled := false;
              TalletaBtn.Enabled := false;
              LisaaBtn.Enabled := false;
              if os<>1  then OhjeBtn.Enabled := false;
              PoiskRadVal.Enabled := false;
              SulakRadVal.Enabled := false;   end
  else begin  OkBtn.Enabled := true;      //,,Kaikki Btnit 'päälle'
              SuljeBtn.Enabled := true;
            //TulostusBtn.Enabled := true;
              PalautaBtn.Enabled := true;
              LueBtn.Enabled := true;
              DetaljitBtn.Enabled := true;
              TalletaBtn.Enabled := true;
              LisaaBtn.Enabled := true;
              OhjeBtn.Enabled := true;
              PoiskRadVal.Enabled := true;
              SulakRadVal.Enabled := true;   end;  end;-----------------------*)

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.OkBtnClick(Sender: TObject);      begin
   NormBtn;
   AvuChkSft (10);          //< +2.0.5  10 =Vapauttaa avusteen
   PvitaMuutokset;
   EditNjFrm;
end;

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.SuljeBtnClick(Sender: TObject);      begin
   NormBtn;
   AvuChkSft (10);          //< +2.0.5  10 =Vapauttaa avusteen
   PvitaMuutokset;
   Close;                   //< 3.0.3  Muut FrmCloset siirretty FrmOnClose :en #####################
end;//SuljeBtnClic

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.LueBtnClick(Sender: TObject);      begin
   NormBtn;
   AvuChkSft (10);          //< +2.0.5  10 =Vapauttaa avusteen
   SyottoAvFrm.Hide;
   PvitaMuutokset;
//WBeep([50,100,0,200,50,100,0,200,50,100]); //Ei worki.
   {if}LueTalEdvFile (LueTR,KysTR,EdvFilen)  {then begin
      NjFrm.Close;                           //'<, 1414: Siirtty FileLstN.PAS´siin, koska ei palatakaan näköjään takaisin.
      NjTulFrm.Close;                        //<Siellä NJtulAuki := false ##############
      PvitaEdvFrm;
   end;}
end;//LueBtnClic

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.TalletaBtnClick(Sender: TObject);      begin
   NormBtn;
   AvuChkSft (10);        //< +2.0.5  10 =Vapauttaa avusteen
   SyottoAvFrm.Hide;
   PvitaMuutokset;
   if not arvoOKe (1,0) or  not arvoOKe (2,0)            //<Puuttuva Un, cU tai arvot ristiriitaisia
   then HerjaInfo ('Puuttuva Un, cU tai arvot ristiriitaisia.')
   else if LueTalEdvFile (LueFA,KysTR,EdvFilen) then begin    //<Sieltä herja, jos kirjoitus ei onaa
   FrmOtsikko;                                                //<+1414d. Oettu vex onActivate´sta.
        if EdvFilen='-1324RR'  THEN ;                         //<+1414d
          {NjFrm.Close;                                       //<,-1414: EdRvn kutsusta EI PALATA ENÄÄ NÄIHIN, siirtty FileLst.INC´iin.
           NjTulFrm.Close;                                    //<Siellä NJtulAuki := false #####
           FrmOtsikko;  }end;
end;//TalletaBtnClic

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.DetaljitBtnClick(Sender: TObject);      begin
   NormBtn;
   AvuChkSft (10);                  //< +2.0.5  10 =Vapauttaa avusteen
   DetaljitBtn.Enabled := false;
   PvitaMuutokset;

   with DetEvFrm  do begin          //,Merkkinä, onko jo 'LADATTU' #################################
      if NOT DetEvAuki  then begin  //< := FALSE PRC:ssä DetEv.OnClose, := TRUE  ks. n. 5r alempana
         Screen.Cursor := crHourGlass;                   //<Ilman SCREENiä vipattaa!!!
         asetaProgres ('Tekstitietoja valmistellaan',1 + {a_getIntg (1,} edv.YLE.JohtoOsia.ArvoInt);
         tul_eritEdv;     //<Ohan kulku ks. DetEv-1.INC loppu.      'Esittää TUL_ERIT:n edistymisen.
         DetEvFrm.Visible := true;  //<Nyt vasta Frm näkyviin ettei näy Edv:n latauksen aikana. Oli    <+DetEdvFrm jotta Find..Vis := .. onaisi.
         Show{Modal};               //'asetettu ObjInsp :ssa FALSEksi ##############################
         aRich.Enabled := false;    //<,,Näkymä aRICHIn alkuun vain kun eka aukaisu ################
         aRich.SelStart := 0;
         aRich.SelLength := 0;
         aRich.Enabled := true;
      end;
      aRich.SetFocus;
      DetEvAuki := true;            //<Merkiksi: On jo 'LADATTU' ###################################
   end;
   Screen.Cursor := crDefault;
end;

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.OhjeBtnClick(Sender: TObject);      begin //n++
   PvitaMuutokset;
   TabNo := 0;                     //<0="Pähkinänkuoressa"  +8.0.5
   if apuaOn
   then begin
      OhjeVex;
      AvuChkSft (10);  end         //< Sama muihin Frmeihin  10=Vapauttaa  11=Lukitsee
   else begin
      AvuChkSft (10);              //< 10 =Vapauttaa
      avust (0);
      apuaOn := true;
      AvuChkSft (11);              //< 11 =Lukitsee
      OhjeBtn.Font.Size := 10;
      OhjeBtn.Font.Style := [];  end;
end;//OhjeBtnClic

//====================================== Yläpaneli =================================================
///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.PoiskRadValClick(Sender: TObject);      begin
   NormBtn;
   if NOT alkuaset  then      //<Estää Frmn avauksessa sijoitusten aiheuttaman eventin #############
      AvuChkSft (11);         //< +2.0.5  Lukitaan
   if PoiskRadVal.ItemIndex=0
      then a_putReaa (6, fPoiskAikaRaja, Edv.YLE.PoisAika) //< Un -> Uv :n mukaan +2.0.5
      else a_putReaa (7,              5, Edv.YLE.PoisAika);
   if NOT alkuaset            //<Estää Frmn avauksessa sijoitusten aiheuttaman eventin #############
   then asetaPvBtn;
end;

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.PRradValClick(Sender: TObject); //+8.0.0
begin
  inherited;
   NormBtn;
   if NOT alkuaset  then      //<Estää Frmn avauksessa sijoitusten aiheuttaman eventin #############
      AvuChkSft (11);
   if PRradVal.ItemIndex=0
    //then a_putReaa (8, 0.4, Edv.YLE.PRaika)
      then a_putReaa (8, fPoiskAikaRaja,Edv.YLE.PRaika) //<+8.0.8
      else a_putReaa (9, 0.2, Edv.YLE.PRaika);
   if NOT alkuaset            //<Estää Frmn avauksessa sijoitusten aiheuttaman eventin #############
   then asetaPvBtn;
end;

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.SulakRadValClick(Sender: TObject);      begin
   NormBtn;
   if NOT alkuaset  then      //<Estää Frmn avauksessa sijoitusten aiheuttaman eventin #############
      AvuChkSft (11);         //< +2.0.5  Lukitaan
   if SulakRadVal.ItemIndex=0
   then begin a_putBool (10, TRUE, Edv.YLE.IecOfa);      //<Sij jotta ajantas.
              suCse := su_IECg;  end
   else begin a_putBool (11, FALSE,Edv.YLE.IecOfa);
              suCse := su_OFAg;  end;
   if NOT alkuaset  then      //<Estää Frmn avauksessa sijoitusten aiheuttaman eventin #############
      asetaPvBtn;
end;

procedure TEdvNewFrm.BxAsTChange(Sender: TObject);      VAR su :string;      begin //+8.0.11,  130.2e
   inherited;
   su := AnsiUpperCase (Trim (BxAsT.Text));
   if su<>''
   then begin
      su := su[1];
      if (Length(su)>=1) and NOT (CharInSet(su[1], ['A','C','D'])) //<1414d: +Length(su)>=1
      then begin
         su := 'A';
         BxAsT.Text := su;
         Wbeep([500,300, 0,500, 2000,300]);
         BxAsT.SetFocus;  end
      else begin
         asetaPvBtn;  end;
   end
   else BxAsT.SetFocus;
   Edv.YLE.AsTapa.arvoStr := su;
  {BxAsT.Items.Clear;              //<,,Ei voi, Text häviää kokonaan, todettu.
   BxAsT.Items.Add (su);
   BxAsT.Items.Add ('A');
   BxAsT.Items.Add ('C');
   BxAsT.Items.Add ('D');}

// BxAsT.ItemIndex := 0;           //<Ei voi nyt sij. 0 josta seuraisi, että AINA valinta olisi "A", todettu.!!!!!
   BxAsT.Text := su;               //<,Oltava vikana, todettu, muuten kenttä jää tyhjäksi.
  {BxAsT.SelStart := 0;
   BxAsT.SelLength := 0;}
// BxAsT.SelectAll;
// BxAsT.Update;
// KuvausEdit.Text := su +'&' +BxAsT.Text;
end;

procedure TEdvNewFrm.BxAsTExit(Sender: TObject);      {VAR su :string;      }begin //+130.2e uk muutssa havaittu: ei palaudu takas muutoksessa.
   inherited;
{   su := AnsiUpperCase (Trim (BxAsT.Text));
   if su<>''  then begin
      su := su[1];
      if NOT (CharInSet(su[1], ['A','C','D']))
      then BxAsT.SetFocus
      else begin
         //if su=alpAsT
      end;
   end;}
end;

procedure TEdvNewFrm.BxTZpeChange(Sender: TObject);      VAR su :string;      begin//+9.0.1
   inherited;
   su := AnsiUpperCase (Trim (BxTZpe.Text));
 //Edv.YLE.ZpeBx.arvoBoo := false;
   a_putBool (12,false, Edv.YLE.ZpeBx);
   if su<>''
   then begin
      if Pos ('Z',su) >0
         then begin su := 'Lzpe';
                  //Edv.YLE.ZpeBx.arvoBoo := true;
                    a_putBool (12,true, Edv.YLE.ZpeBx);
         end; end
   else su := 'Ltim';
   asetaPvBtn;
   BxTZpe.Text := su;              //<,Oltava vikana, todettu, muuten kenttä jää tyhjäksi.
end;

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.UnCmBxChange(Sender: TObject);      VAR su :string;  i,ui :integer;  esto :boolean;      begin //130.2e :Oli tyhjä.
   inherited;
   su := Trim(UnCmBx.Text);  ui := 0;  esto := false;
   if su<>''
   then begin
      for i := 1 to Length(su)  do
      if NOT CharInSet(su[i], ['0'..'9']) and (su[1]<>'0')  //<Ei saa alkaa 0´lla. 130.2e:  CharIn..
      then begin //Delete(su,i,1);                          //<,Parempi että vain huomautetaan, korjaus jää käyttäjälle.
                 //cUCmBx.SetFocus;
                 esto := true;
                 Wbeep([500,300, {0,10,} 2000,300]);
                 Break;
      end;//for i
      if NOT esto and  NOT SokI(su,ui) and (ui>=100)  then begin
         esto := true;
         Wbeep([500,300, {0,10,} 2000,300]);
      end;
      if NOT esto  then begin
         asetaPvBtn;
         UnCmBx.Text := su;
         Edv.YLE.Un.arvoInt := ui;
      end;
   end;
end;

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.UnCmBxExit(Sender: TObject);       begin //< Un
   AvuChkSft (10);            //< +2.0.5  10 =Vapauttaa avusteen
   if arvoOK (1,0)  then asetaPvBtn
                    else UnCmBx.SetFocus;
{  sijBx(1);  }end;  //<Syötetty arvo näkyviin

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.cUCmBxChange(Sender: TObject);     VAR su :string;  i :integer;  ur :real;  esto :boolean;      begin
   inherited;                                                                                       //'130.2e:  Myös cUCmBxChange´lle malli UnCmBxChange´sta.
 //esto := false;
   su := Trim(cUCmBx.Text);
   ur := 0;  esto := false;
   if su<>''
   then begin
      for i := 1 to Length(su)  do
      if NOT CharInSet(su[i],['0'..'9',',','.'])  then begin
         //Delete(su,i,1);                   //<,Parempi että vain huomautetaan, korjaus jää käyttäjälle.
         //cUCmBx.SetFocus;
         esto := true;
         Wbeep([500,300, {0,10,} 2000,300])
      end;//for i..if NOT
      if NOT esto and SokR(su,ur)  then begin
         asetaPvBtn;
         Edv.YLE.cU.arvoRea := ur;
      end;
   end;
end;

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.UkBxChange(Sender: TObject);       VAR s :string;  j,k :integer;  {esto :boolean;}      begin//+130.2e
   inherited;
   s := Trim(UkBx.Text);  //esto := false;
   j := Pos('UK ON', AnsiUpperCase(s));
   k := Pos('UK OFF',AnsiUpperCase(s));
   if (j+k=0)  then begin
      s := fRmrkt0(alpLaakPmu,1,1);
      UkBx.Text := s;
   end;
   AvuChkSft (10);          //< +2.0.5  10 =Vapauttaa avusteen
   asetaPvBtn;
end;

procedure TEdvNewFrm.UkBxKeyPress(Sender: TObject; var Key: Char);      begin //+130.2e.
   inherited;
   if (key=#13) and arvoOK (3,0)
      then begin  //PvitaEdvFrm;
                  //sijBx(2);       //<Syötetty arvo näkyviin
                  UkBx.SetFocus;  end
      else UkBx.SetFocus;
end;

/////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.cUCmBxExit(Sender: TObject);       begin //< cU
   AvuChkSft (10)  ;          //< +2.0.5  10 =Vapauttaa avusteen
   if arvoOK (2,0)  then asetaPvBtn
                    else cUCmBx.SetFocus;
{  sijBx(2);  }end;  //<Syötetty arvo näkyviin

procedure TEdvNewFrm.LaakMBxChange(Sender: TObject);     VAR su :string;  i :integer;  ur :real;  esto :boolean;      begin
   inherited;                                                                            //'130.2e:  Myös cUCmBxChange´lle malli UnCmBxChange´sta.
   esto := false;
   su := Trim(LaakMBx.Text);
   if su<>''
   then begin
      for i := 1 to Length(su)  do
      if NOT CharInSet(su[i],['0'..'9',',','.'])  then begin
         //Delete(su,i,1);                   //<,Parempi että vain huomautetaan, korjaus jää käyttäjälle.
         //cUCmBx.SetFocus;
         esto := true;
         Wbeep([500,300, {0,10,} 2000,300])
      end;//for i..if NOT
      if NOT esto   then
      if SokR(su,ur)  then begin
         beep;
         Edv.YLE.LaakPmu.arvoRea := ur;
         asetaPvBtn;
         if ur<0  then ;
(*
su := RtoS_e5(3.5);
su := '3.5';
StoSok_e5(su);
  if su<>''  then ;
su := '3,5';
StoSok_e5(su);
  if su<>''  then ;
ur := StrToFloatQ('3.5');
  if ur<0  then ;
ur := StrToFloatQ('3,5');
  if ur<0  then ;
su := fMrkvia(3.5,5);
  if su<>''  then ;
su := fMrkvia(3.5,2);
  if su<>''  then ;
su := fMrkvia(3,5);        //<???
  if su<>''  then ;
su := fRmrkt0(3.5,1,1);
  if su<>''  then ;
{su := fRmrkt0(3,5,1,1);    //<???
  if su<>''  then ;}
su := RtoS(3.5,1,1);
  if su<>''  then ;
{su := RtoS(3,5,1,1);       //<???
  if su<>''  then ;}
su := sRmrkt0vex(3.5000,1,1);
  if su<>''  then ;
SokR('3.5000',ur);
  if ur<0  then ; //*)

      end;
   end;//if su..
end;

procedure TEdvNewFrm.LaakMBxExit(Sender: TObject);      {begin //}VAR s :string;  r :real;      begin//+130.2e
  inherited;
 s := Trim(LaakMBx.Text);
  SokR(s,r);
  if r=7.5  then begin
     ShowMessage('Älä turhaan pyydä 7,5 muuntajakoon laskentaa; se tulee jo automaattisesti "/" :n jälkeiselle palstalle.' +Chr(10) +Chr(13) +
                 'Ks. rivin 31 avuste.');
     LaakMBx.Text := '3,5';
  end;
   AvuChkSft (10)  ;          //< +2.0.5  10 =Vapauttaa avusteen
   if arvoOK (3,0)  then asetaPvBtn
                    else LaakMBx.SetFocus;
end;

procedure TEdvNewFrm.LaakMBxKeyPress(Sender: TObject; var Key: Char);
begin
  inherited;
   if (key=#13) and arvoOK (3,0)
      then begin  //PvitaEdvFrm;
                  sijBx(2);       //<Syötetty arvo näkyviin
                  LaakMBx.SetFocus;  end
      else LaakMBx.SetFocus;
end;

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.UnCmBxKeyPress(Sender: TObject; var Key: Char);      begin
   if (key=#13) and arvoOK (1,0)
      then begin  //PvitaEdvFrm;
                  sijBx(1);       //<Syötetty arvo näkyviin
                  cUCmBx.SetFocus;  end
      else UnCmBx.SetFocus;
end;

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.cUCmBxKeyPress(Sender: TObject; var Key: Char);      begin
   if (key=#13) and arvoOK (2,0)
      then begin  //PvitaEdvFrm;
                  sijBx(2);       //<Syötetty arvo näkyviin
                  UnCmBx.SetFocus;
                  {SelectNext(ComBx1, true,true);}  end
      else cUCmBx.SetFocus;
end;

//==================================================================================================
///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.HeaderDblClick(Sender: TObject);
begin
   PvitaMuutokset;
   //sender := sender;

     if (HeaderOpen = True) then
     begin
        prevHeaderWidth := JohdotColHeaderPohja.width;
        JohdotColHeaderPohja.width := johdot.HeaderGrid.colWidths[0] + 1;
        JohdotColHeaderHeader.width:= JohdotColHeaderPohja.width;
        HeaderOpen := False;
     end
     else
     begin
        JohdotColHeaderPohja.width :=  prevHeaderWidth;
        JohdotColHeaderHeader.width := JohdotColHeaderPohja.width;
        HeaderOpen := True;
     end;
end;

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.HeaderClick(Sender: TObject);
begin
   PvitaMuutokset;
   //sender := sender;
end;

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.PvitaBtnClick(Sender: TObject);      begin
   avuChkSft (10);       //<+2.0.5  Vapauttaa
 //laskeEdvArvotOK (1);  //<+9.0.1  Lisätty Ltim,Lzpe -valinnan päivityksen takia. 130.2e: vex, on PvitaEdvFrm´ssa.
   PvitaEdvFrm;
 //EdvNewFrm.SetTexts;   //<+8.0.11  Hyväksyy, mutta mitään uutta ei näy.
end;

procedure TEdvNewFrm.PrRjMm2BxChange(Sender: TObject);
begin
  inherited;
  beep;
end;

procedure TEdvNewFrm.PrRjMm2BxEnter(Sender: TObject);      begin //+120.5
  inherited;
   NormBtn;
   AvuChkSft (11);              //< +2.0.5  Lukitaan
   SyottoAvFrm.Hide;
end;

procedure TEdvNewFrm.PrRjMm2BxSelect(Sender: TObject);      begin //+120.5:  Tapahtuu, kun jokin itemi on valittu pudVal´sta.
  inherited;
   //asetaPvBtn;                              //<Turha.
  {case PrRjMm2Bx.ItemIndex of //<,,-130.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
      0 :a_putIntg (13,-1, Edv.YLE.PrRjMm2);  //< 0 = '16A2.5/10A1.5 mm²'  -1 muutettava 0´ksi.
      1 :a_putIntg (14, 2, Edv.YLE.PrRjMm2);  //< 1 = '10A 2.5/1.5 mm²'
                                              //<     '6A  2.5/1.5 mm²'
                                              //<     '4A  2.5/1.5 mm²'
                                              //<     '2A  2.5/1.5 mm²'
      2 :a_putIntg (15, 4, Edv.YLE.PrRjMm2);  //< 2 = '4 mm² 16A/10A'
      3 :a_putIntg (16, 6, Edv.YLE.PrRjMm2);  //< 4 = '6 mm² 16A/10A'
      4 :a_putIntg (16,10, Edv.YLE.PrRjMm2);  //< 5 = '10 mm² 16A/10A'
      5 :a_putIntg (16,16, Edv.YLE.PrRjMm2);  //< 6 = '16 mm² 16A/10A'
   end;}
   PrRjIndx := PrRjMm2Bx.ItemIndex;           //<+130.0
 //PrRjMm2Bx.Font.Style := [fsItalic];        //<OK.
   if PrRjMm2Bx.ItemIndex <>0
   then begin
      PrRjMm2Bx.Font.Color := clFuchsia;
      PrRjMm2Bx.Font.Style := [{fsBold}];  end
   else begin
      PrRjMm2Bx.Font.Color := clBlack;
      PrRjMm2Bx.Font.Style := [];
   end;
   PrRjMm2Bx.Text := PrRjMm2Bx.Items[PrRjIndx];// =sama: [PrRjMm2Bx.ItemIndex];
   OkBtn.SetFocus;
   {EdvNewFrm.}SetTexts;                       //<Muuten vain alussa tekstit, nyt eri väritys +uusia tekstejä paneelissa.
   PvitaEdvFrm;
end;//PrRjMm2BxSelect

//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
///////////////////////////////////////////////////////////////////////////////
procedure PvitaMuutokset;      begin
  {if EdvNewFrm.PvitaBtn.Enabled  then }PvitaEdvFrm; //<-9.0.1  Oli turhaa, eihän Clickiä tule jos UnEnabled.
   FrmOtsikko;                                      //<+1414d. otettu vex onActivite´sta.
end;

///////////////////////////////////////////////////////////////////////////////
procedure PvitaEdvFrm;      {var i :integer;  {ar :real;   }

   procedure nayPRaika_AsTapa;      VAR o,u :integer;  s32,s33,s0, s :string;  
                                        boo :boolean;      begin //+8.0.0  +8.0.11
      s := EdvNewFrm.Johdot.HeaderGrid.Cells [1,17]; //<f n="" s="" c="16711935">Pistor.     Dz 0.2s 16/10A[m] <right>(125/97)
      s := TagVex (s);                               //<Ettei peräkkäisissä pvityksissä kumuloituisi.
      o := Pos ('0.',s);
      if o>0 then begin        //<Löytyi
         u := Pos ('(',s);
         if u>0  then
            Delete (s,u,Length(s));                  //<Delataan loppuosa (110/82) tms.
         Delete (s,o+2,1);                           //<o+2 Del -osoite alkaen.
         s := s +'<right>';
         if EdvNewFrm.PRradVal.ItemIndex=0           //< 0.4 s
         then begin
            if fPoiskAikaRaja>0.3                              //<,,+8.0.8
            then begin
               Insert ('4',s,o+2);
               s := EDV_COLOR_FONT_HEADER +s +'(125/97)';  end //<130.2e:  Oli (110/82) onkohan tässä tämä oikein????? KESKEN KESKEN
            else begin
               Insert ('3',s,o+2);
               s := EDV_COLOR_FONT_HEADER +s +'(125/97)';  end;
         end
         else begin
            Insert ('2',s,o+2);
            Insert ('</f>',s,o+4);                   //<  0.2s => 0.2s</f>
            Insert (COLOR_FUCHSIA,s,o);              //<Ei voi insertoida aikaisemmin, menee osoite sekaisin.
            s := EDV_COLOR_FONT_HEADER +s +'(125/97)';
         end;
         EdvNewFrm.Johdot.HeaderGrid.Cells [1,17] := s;
      end;
      //if myLicense.lisenssilaajuus=lvLT
      boo := SalaSallii (lvLT);                      //<SalaSallii, jos SalaEdi´llä > lvLT  <,,+8.0.0
      if LisYliDemo_ (lvLT) and NOT boo and NOT fKaikkiOikeudet_1x //[2..4] sulkee vex lvLT´n eli 1.  +12.0.0: fKaikki..
         then begin EdvNewFrm.PRradVal.Enabled := false; //,LT-versioon PRajaksi 0.4 s, myös FileEv.INC´ssä
                  //a_putReaa (4, 0.4, Edv.YLE.PRaika);
                    a_putReaa (4, fPoiskAikaRaja, Edv.YLE.PRaika);                               //<+8.0.8
                    EdvNewFrm.PRradVal.ItemIndex := 0;   end
         else begin EdvNewFrm.PRradVal.Enabled := true;  end;

      //,,Rivn 32,33 AsTap´avalinnan editointi:  "Nousujohto (0.4s<>säl)  asAsul/[mm²]" => asC... tmv.,,,,,+8.0.11
      //  Kopioitu TextBaseTexts´istä ja niistä poistettu tagi <right>:
      //       (EDV_HEADERS + '-row-27',  'Nousujohto <right>(0.4s<>säl)  asAsul/[mm²]'
      //       (EDV_HEADERS + '-row-28',  'Nousujohto <right>(5s<>säl)  asAsul/[mm²]',,,,,,,,,,,,,,,,,,,,,,,,,,,,,

      s32 := EDV_COLOR_FONT_HEADER +'Nousujohto <right>(0,4s<>säl)  as';
      s33 := EDV_COLOR_FONT_HEADER +'Nousujohto <right>(5s<>säl)  as';
      s0 :=  'sul/[mm²]';

      s := s32 +'<b>' +Edv.YLE.AsTapa.arvoStr +'</b>' +s0; //<Tai so := EdvNewFrm.BxAsT.Text;
      EdvNewFrm.Johdot.HeaderGrid.Cells [1,26] := s;       //<"Nousujohto (0,4s<>säl)  asAsul/[mm²]" => asC... tms.

      s := s33 +'<b>' +Edv.YLE.AsTapa.arvoStr +'</b>' +s0;
      EdvNewFrm.Johdot.HeaderGrid.Cells [1,27] := s;
    //EdvNewFrm.KuvausEdit.Text := s;                      //''''''''''''''''''''''''''''''''''''''''''''''+8.0.11
   end;//nayPRaika_AsTapa

   {procedure YFileen(si :string);      begin//+120.5n
      DefsFileenZ(si);  end;//1414f: ??????????????????????? 1414f´ssä muutettu KAIKKI DefsFileenZ YFileen´ksi.}

begin//PvitaEdvFrm;
Tics ('EdvNew/PvitaEdvFrm 1');
   Screen.Cursor := crHourGlass;                       //<Ilman SCREENiä vipattaa!!!
   DetEvFrm.Close;
   DetEvAuki := false;
   NjTulFrm.Close;
   PvBtnOff;
   if eri_cU_Un  then begin
      EiOkInfo ('PJ-liittymätietojen suojausehtoihin vaikuttavia parametreja muutettu. Joudut '+
               'tarkistamaan myös liittymän Ik1v, Ik3v sekä eRs (verkkokuvaajan 0 -painike)!');
      syoKut := 1;
      editSyoFrm;  end;//if eri_..
if edv.YLE.JohtoOsia.ArvoInt > edv.YLE.SorceCount.arvoInt  then ; //<120.5  Arvoseurantaan.
   Screen.Cursor := crHourGlass;                  //<Ilman SCREENiä vipattaa!!!

   //,,,,,,,,,,,,,,Laskee EdvpalstaTypen mukaiset arvot, jotta on, mitä editoida EdvNewFrm:ssa,,,,,,
   LaskeEdvArvotOK (1); //<Käyttää edv + sij. OnLaskettu := TRUE; #### Nola6d.INC ################## 130.2e: Siirretty Aseta..´n jälestä eteen (2rv).
   AsetaEdvFrm;
                                        YFileen('PvitEdv 1');
{DEVELOPER2 BEGIN }
   edvNewFrm.Enabled := false;
// edvNewFrm.Refresh;                   //<Pakottaa EdvFrm :n valmiiksi ennen muita eventejä !!!!!!! -3.0.2
                                        YFileen('PvitEdv 2');
   edvNewFrm.Update;                    //<Pakottaa EdvFrm :n valmiiksi ennen muita eventejä !!!!!!! +3.0.2 EiVaik
                                        YFileen('PvitEdv 3');
   edvNewFrm.UpdateValues;                //<Asettaa ALKUASET ennen + jälkeen kutsun #################
                                        YFileen('PvitEdv 4');
   if (edvNewFrm.WindowState = wsMinimized) then edvNewFrm.WindowState := wsNormal;
                                        YFileen('PvitEdv 5');
   edvNewFrm.Visible := True;
   edvNewFrm.Refresh;                   //<Pakottaa EdvFrm :n valmiiksi ennen muita eventejä !!!!!!! -2.0.2 -6.2.2
 //edvNewFrm.Update;                    //<Pakottaa EdvFrm :n valmiiksi ennen muita eventejä !!!!!!! +6.2.2 'Error
   edvNewFrm.Enabled := true;           //<Vasta nyt voidaan sorkkia kuvaa hiirellä <<<<<<<<<<<<<<<< -2.0.2
{DEVELOPER2 END }
                                        YFileen('PvitEdv 6');
 nayPRaika_AsTapa;                                                                             //< +8.0.0  8.0.11
// edvNewFrm.Refresh;                   //<Pakottaa EdvFrm :n valmiiksi ennen muita eventejä !!!!!!! +2.0.2
                                        YFileen('PvitEdv 7');
   EdvNewFrm.Update;
// edvNewFrm.Enabled := true;           //<Vasta nyt voidaan sorkkia kuvaa hiirellä <<<<<<<<<<<<<<<< +2.0.2
 //EdvNewFrm.SetFocus;                  //<Muuten esim. LUE + LISAA aiheuttaa PAAVALn tulon päälle!!
//!EdvNewFrm.Focused;                   //<Muuten esim. LUE + LISAA aiheuttaa PAAVALn tulon päälle!!
  {EdvNewFrm.PvitaBtn.Visible := false; //,,######################################################,,}
//@edvf := edv;            //<Pysyy ajan tasalla, kun PvitaEdvFrm :ssa pvityksen jälk edvf := edv
   Screen.Cursor := crDefault;
   LaskeeOdFrm.Close;      //'<Vaikka LaskeeOdFrm.Closessa on myös ... := crDefault
                                        YFileen('PvitEdv 9');
Tics ('EdvNew/PvitaEdvFrm 9');
end;//PvitaEdvFrm          //''###################################################################''

///////////////////////////////////////////////////////////////////////////////
procedure AsetaEdvFrm;      var sa :string;  {ar :real;}      begin
  alkuaset := true;
  FrmOtsikko;                         //< +3.0.1
  with EdvNewFrm  do begin          //<,,,Eivät estä eventiä, joten ALKUASET hoitaa sen ############
    //PoiskRadVal.Enabled := false; //<,Ettei sijoitus käynnistä eventiä #### 'ks.ao. eventit ######
    //SulakRadVal.Enabled := false;
    //PoiskRadVal.Visible := false;   //<,Ettei sijoitus käynnistä eventiä ####
    //SulakRadVal.Visible := false;
    //PoiskRadVal.Invalidate;         //<,Ettei sijoitus käynnistä eventiä ####
    //SulakRadVal.Invalidate;         //<,Ettei sijoitus käynnistä eventiä ####
    if a_getReaa (10, Edv.YLE.PoisAika) < 1  then PoiskRadVal.ItemIndex := 0
                                             else PoiskRadVal.ItemIndex := 1;
    if a_getReaa (11, Edv.YLE.PRaika) > 0.25 then PRradVal.ItemIndex := 0     //<,+8.0.0
                                             else PRradVal.ItemIndex := 1;
    if a_getBool (12, Edv.YLE.IecOfa)  then SulakRadVal.ItemIndex := 0
                                       else SulakRadVal.ItemIndex := 1;
    if {a_getIntg (13,} Edv.YLE.JohtoOsia.ArvoInt<edmaxkpl  then LisaaBtn.Visible := true
                                                            else LisaaBtn.Visible := false;
    sa := Edv.YLE.AsTapa.arvoStr;                                             //<,,+8.0.11
    EdvNewFrm.BxAsT.Text := AnsiUpperCase (sa);
       EdvNewFrm.BxAsT.Items.Clear;
      {EdvNewFrm.BxAsT.Items.Add (sa);           //,,Jos eioo vielä listassa.}
      {if EdvNewFrm.BxAsT.Items.IndexOf ('A') <0  then }EdvNewFrm.BxAsT.Items.Add ('A');
      {if EdvNewFrm.BxAsT.Items.IndexOf ('C') <0  then }EdvNewFrm.BxAsT.Items.Add ('C');
      {if EdvNewFrm.BxAsT.Items.IndexOf ('D') <0  then }EdvNewFrm.BxAsT.Items.Add ('D');
    //PoiskRadVal.Enabled := true;
    //SulakRadVal.Enabled := true;
    //PoiskRadVal.Visible := true;
    //SulakRadVal.Visible := true;
    if Edv.YLE.ZpeBx.arvoBoo       //<,,+9.0.1
       then sa := 'Lzpe'
       else sa := 'Ltim';
    EdvNewFrm.BxTZpe.Text := sa;
    sijBoxitNew;  //<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    UnCmBx.Visible := true;
    cUCmBx.Visible := true;
    PoiskRadVal.Visible := true;
    PRradVal.Visible :=    true;                              //<+8.0.0
    SulakRadVal.Visible := true;
   alpTZ :=      EdvNewFrm.BxTZpe.Text;
   alpPoiskIx := EdvNewFrm.PoiskRadVal.ItemIndex;
   alpPRaik :=   EdvNewFrm.PRradVal.ItemIndex;
   alpIecIx :=   EdvNewFrm.SulakRadVal.ItemIndex;
   alpAsT :=     AnsiUpperCase (Trim (EdvNewFrm.BxAsT.Text)); //<+8.0.11
   alpUn :=      a_getIntg (2,edv.Yle.Un);
   alpCU :=      a_getReaa (3,edv.Yle.cU);
   alpResMm2S :=  EdvNewFrm.PrRjMm2Bx.Text;      //<+120.5 Ei käytetty muualla.
   sa := fPoiskAikaRajaS +'s'; //< +2.0.5
   PoiskRadVal.Items[0] := sa; //< +2.0.5

  {alpLaakPmu := a_getReaa (4,edv.Yle.LaakPmu);  //<+130.2e  <,Nämä siirretty IsEqualEdvPalstaType´n loppuun, jotta testi menisi oikein, tässä hävittäisi tiedon.
   alpSuk :=     Trim (EdvNewFrm.UkBx.Text);     //<+130.2e

   SokR(EdvNewFrm.LaakMBx.Text,ar);              //<,,+130.2e  Ei saa muuttua liian aikaisin.
   edv.Yle.LaakPmu.ArvoRea := ar;
   alpLaakPmu := ar;}
  end; {with}
  alkuaset := false;
end;//AsetaEdvFrm

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.FormActivate(Sender: TObject);      begin
 //FrmOtsikko;                                 //<-1414d: Oli levotonta; aina hiiren osuessa johonkin alueella, tämä eventti heräsi.
   DetaljitBtn.Enabled := true;
{  if ChkBxAv.Checked  then syoAktv := false   //<Oli ruksattu = AVUSTE_ON (vapauttaa) //TUTKITAAN esim.HII-
                       else syoAktv := true;   //<Ei ruksattu  = AVUSTE_VEX            //REN TULLESSA Nj:stä}
{6+ if syoAktv  then ChkBxAv.Checked := false
               else ChkBxAv.Checked := true;}
   UnLabel.Hint := UnCmBx.Hint;
   cULabel.Hint := cUCmBx.Hint;
{  if EdvVeja  then EdvNewFrm.PalautaBtn.Enabled := true
               else EdvNewFrm.PalautaBtn.Enabled := false;}
// Y_Piipit (50);
end;

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.FormShow(Sender: TObject);      {VAR i :integer;  }{s :string;}begin
{    HeaderPanel.Color :=                cl3DLight;
     KuvausVpan.Color :=                  cl3DLight;
   //FooterPanel.Color :=                 cl3DLight;
     JohdotColHeaderPanel.Color :=        cl3DLight;
   //ExtraPanel.Color :=                  cl3DLight;
   //LahtoPanel.Color :=                  cl3DLight;
    JohdotHeaderPohja.Color :=            cl3DLight;
    JohdotDataPohja.Color :=              cl3DLight;
    JohdotDataWnd.Color :=                cl3DLight;
    JohdotHeaderWnd.Color :=              cl3DLight;
    JohdotDataPanel.Color :=              cl3DLight;
    JohdotHeaderPanel.Color :=            cl3DLight;
  //Johto0DataWnd.Color :=                cl3DLight;
  //Johto0HeaderPanel.Color :=            cl3DLight;
  //Johto0DataPanel.Color :=              cl3DLight;
    JohdotColHeaderHeader.Color :=        cl3DLight;
  //LahtoPanel.Color :=                   cl3DLight;
  //LahtoEtuPanel.Color :=                cl3DLight;
  //LahtoDataPanel.Color :=               cl3DLight;
    JohdotColHeaderPohja.Color :=         cl3DLight;
    JohdotColHeaderWnd.Color :=           cl3DLight;
    JohdotColHeaderPanel.Color :=         cl3DLight;
  //ExtraPanel.Color :=                   cl3DLight;
  //LahtoHeaderPanel.Color :=             cl3DLight;
    KuvausPan.Color :=                    cl3DLight;
    KuvausVpan.Color :=                   cl3DLight;
    KuvausOpan.Color :=                   cl3DLight;//}
       {JohdotColHeaderPohja.Color :=     cl3DLight;
        LahtoEtuPanel.Color :=            cl3DLight;
        JohdotColHeaderHeader.Color :=    cl3DLight;}
       {johdot.HeaderGrid.ParentColor :=     false;
        johdot.HeaderGrid.Color :=        cl3DLight;}
  {if syoAktv  then ChkBxAv.Checked := false
               else ChkBxAv.Checked := true;  //< -2.0.5}
   AvuChkSft (0);                             //< +2.0.5
   OdotaFrm.Close;
   if IsDebuggerPresent  then                 //<+12.0.0:  Capt´ssa selitettiin EiOk´n Beeppi.
      PaaValFrm.Caption := 'Nola / Päävalinta';
   if demoLisAs  then begin
      OhjeEfect_ON;                           //< +2.0.5
      avuste(0, 0,0, 0);                      //< +2.0.5  Avust () ei käy, koska FrmEiNäy ja sisFocus -> Error
      OhjeEfect2_ON;  end;                    //<Lukitsee avusteen 5 sek :ksi
   LaakMBx.Text := fRmrkt0(Edv.Yle.LaakPmu.ArvoRea,1,1); //<+130.2e: Voi olla jo jossain muuallakin.

 //NayMemory;                                 //<PaaValFrm.Captionissa
   FormResize(Sender);                        //<Asettaa KuvausEdit.Width :n Frm :n mukaan. Tuntuisi toimivan ilmankin.

 //ukBx.TextEditStyle := TextEditStyles.DisableTextEditor; //<+130.2e. Ei onaa poistaa tekstisyöttö.
 ///KuvausEdit.Font := 'Symbol';}  //<f n="Symbol">W</f>
 (*KuvausEdit.Text := '<f n="Symbol">'{</f>'}; <Ei onaa SymboliFonteiksi.
   for i := 32 to 85  do
      KuvausEdit.Text := KuvausEdit.Text +Chr(i);*)
   FrmOtsikko;                                      //<+1414d.
   if isDebuggerPresent and (fKESKENsumS<>'')  then                            //<,+141.1  Tässä koska nyt vasta EdvNewFrm.OnShow ja esim. Johto.PAS vasta
      InputBox('Jossain on kesken HUOMATUSKOHTIA', 'etsi:', 'fKESKENsumS :='); //          nyt käyty läpi ja fKESK.. sijoitukset tiedossa.
end;//FormShow

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.ChkBxAvMouseDown(Sender: TObject; Button: TMouseButton;  Shift: TShiftState; X, Y: Integer);
begin                            //'=TapahtuuKunKlikattu ChkBxAv :ta, CB -ARVO EI VIELÄ EHTINYT MUUTTUA, TODETTU.
  inherited;                     //,,Vaihdetaan cbUnChecked, muuten eventti vaihtaa Grayed -> Checked -> UnCheckd
   NormBtn;                      //< +2.0.5  Korvaa apuaOn := false :n -2.0.5
                 //==Jos tässä sij. cb -arvo, menee ChkBxAvClick -eventiin, eli ei voi lisätä muuta: Menee ENDiin
   if ChkBxAv.State IN [cbGrayed,cbChecked]            //<Pakotet. cbGrayed t. cbChecked -> cbUnChecked
      then Gray_Chkd := true                           //<,Ei voi asettaa suoraan STATEa: aiheuttaa
      else Gray_Chkd := false;                         //  eventin, TODETTU.########################
end;

///////////////////////////////////////////////////////////////////////////////                                                     //,,AvCloseOK on aina päällä, FA vain AvuChkSf :stä
procedure TEdvNewFrm.ChkBxAvClick(Sender: TObject);   begin//,,CheckedArvo onJo ehtínyt vaihtua Clickin jälk, TODETTU
   if AvCloseOK  then begin                            //<Vain ekalla kerralla läpi, 2.krt tullaan AvuChkSf :stä
      if Gray_Chkd  then begin
         ChkBxAv.State := cbUnChecked;                 //<Vain ChkBxAvMouseDown :sta. Aiheuttaa EVENTIN @@@@@@@@@
{2.0.5+} syoAktv := false;  end;        //<Koska SYOAKTV+SYOAVONin perusteella Grayed/Chkd/UnChkd AvuChkSft :ssa
      if ChkBxAv.State=cbUnChecked
{2.0.5+} then begin syoAvOn := false;   //<, SYOAVON asetus VAIN TÄSSÄ + StrGrDblClick :ssä #####################
                    SyottoAvFrm.Hide;  end
{2.0.5+} else       syoAvOn := true;                   //<Kattaa cbGrayed + cbChecked
      AvuChkSft (0);  end;
   Gray_Chkd := false;                                 //<Vain ChkBxAvMouseDown :ssa @@@@@@@@@@@@@@@@@@@@@@@@@@@@
end;//ChkBxAvClick

//==================================================================================================
///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.FormKeyDown(Sender: TObject; var Key: Word;  Shift: TShiftState);      begin
  inherited;
   if key=112  then begin                //<112 = F1. HUOM: MoFrm.KeyPreview p.o. TRUE #############
      if ChkBxAv.Checked  then ChkBxAv.Checked := false
                          else ChkBxAv.Checked := true;
      AvuChkSft (0);  end;               //<Päivitetään muihinkin lomakkeisiin <<<<<<<<<<<<<<<<<<<<<
end;

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.KuvausEditChange(Sender: TObject);      begin
   a_putStrg (13, KuvausEdit.Text, edv.YLE.Kuvaus);
end;

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.FormClose(Sender: TObject; var Action: TCloseAction);      begin
  inherited;
//SyottoAvFrm.Close;
  SyottoAvFrm.Hide;
//MootNj := false;                   //< -4.0.0  Nyt vain tiedostoluvun yhteydessä MootNj := FA !!!!!!!!!!!!!!!!!!
   AsetusOkBtnSulkiSyoFrmin := true; //<+10.0.4  Ks. Syotto.PAS OnCloseForm.
   SyottoFrm.Close;                  //<,,+3.0.3  Siirretty OnSuljeBtnClickistä ##################################
   NjFrm.Close;
   DetEvFrm.Close;
   LaskeeOdFrm.Close;       //<Tämä vasta tässä. Jos ekana, jossain on päällekutsu, eikä muuten häviä.
end;

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.HeaderPanelMouseMove(Sender: TObject;  Shift: TShiftState; X, Y: Integer);      begin
  inherited;
  if EdvNewFrm.Active  then                                                                      //<+6.0.1
  if NOT syoAktv  then SyottoAvFrm.Hide;
end;

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.FooterPanelMouseMove(Sender: TObject;  Shift: TShiftState; X, Y: Integer);      begin
  inherited;
  if EdvNewFrm.Active  then begin                                                                       //<+6.0.1
     if NOT syoAktv  then SyottoAvFrm.Hide;
   //FrmOtsikko;     //<+120.5i -1414
  end;
end;

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.KuvausEditMouseMove(Sender: TObject;  Shift: TShiftState; X, Y: Integer);       begin
  inherited;
  if EdvNewFrm.Active  then                                                                      //<+6.0.1
  if NOT syoAktv  then SyottoAvFrm.Hide;
end;

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.Bx1_nEnter(Sender: TObject);      begin //n++ ~   //130.2e:  Myös ukBx´lle
  inherited;
   NormBtn;
   AvuChkSft (11);              //< +2.0.5  Lukitaan
   SyottoAvFrm.Hide;
end;

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.KayraBtnClick(Sender: TObject);      begin
   inherited;
   NormBtn;
   AvuChkSft (10);            //< +2.0.5  10 =Vapauttaa avusteen
   KayraBtn.Enabled := false;
   if Sender<>UkBx            //<+130.2e uk.
      then IkFrm.ShowModal;
end;

///////////////////////////////////////////////////////////////////////////////
procedure TEdvNewFrm.FormResize(Sender: TObject);      begin
  inherited;
   KuvausEdit.Width := EdvNewFrm.Width -KuvausVpan.Left -KuvausVpan.Width -11;// -KuvausEdit.Left -11;  -130.2o
 //Caption := Ints(Height); //<11.0.0a
end;

///////////////////////////////////////////////////////////////////////////////

initialization
   alkuaset := false;
   Jrow := 0;
   Gray_Chkd := false; //< +1.1.3
   //avuRv := 0;
end.
