{
* Copyright (c) 2020, Reijo Pursiainen, Hannu Pursiainen
* All rights reserved.
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*
*     * Redistributions of source code must retain the above copyright
*       notice, this list of conditions and the following disclaimer.
*     * Redistributions in binary form must reproduce the above copyright
*       notice, this list of conditions and the following disclaimer in the
*       documentation and/or other materials provided with the distribution.
*     * Neither the name of Reijo Pursiainen, Hannu Pursiainen nor the
*       names of its contributors may be used to endorse or promote products
*       derived from this software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY REIJO PURSIAINEN, HANNU PURSIAINEN AND
* CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
* BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
* A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REIJO PURSIAINEN,
* HANNU PURSIAINEN AND CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
* LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
* SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
}

///////////////////////////////////////////////////////////////////////////////
{15å3:  LicensePanel Enabled oli FA, nyt TR, takas FA (ObjInsp).
 Tämä Asetus.PAS on DEVELOPER2 verssio, johon currDir korvattu actPath´illa.
 Asetus u12.PAS´ssa ollut InfoEditClick jätetty pois (Delphi kysyi Rmove refer..)
}

///////////////////////////////////////////////////////////////////////////////
//
// FileName:  Asetus.pas
// Location:  src\Main
// Abstract:  Asetukset lomake
//
///////////////////////////////////////////////////////////////////////////////
//
// Following fields are automatically generated by the version control system:
//
// $Revision: 1.6 $
//     $Date: 2005/10/15 08:58:30 $
//
///////////////////////////////////////////////////////////////////////////////
//
// Change Log. Old log entries can be removed by deleting them.
// $Log: Asetus.pas,v $
// Revision 1.6  2005/10/15 08:58:30  DEVELOPER2
// Verkkolisenssi tarkistetaan ja varataan aina kun asetusikkuna avataan
//
// Revision 1.5  2005/10/09 14:06:35  DEVELOPER2
// Reijolta 26.9.2005
//                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   $I '..\GlobINC\NolaTyp.INC'}                           //<¤DEVELOPER1
// 
// 11    22.09.04 20:47 DEVELOPER2
// Lisätty Demo-tab ja DemoLisenssiLaajuus kokeilua varten.
// 
// 10    28.03.04 14:42 DEVELOPER2
// LicensePanelNola
// - Vanhat komponent korvattu LicensePanelNola-komponentilla
// 
// 9     20.03.04 10:19 DEVELOPER2
// Lisenssin laajuus tukea lisätty.
// 
// 8     14.03.04 16:08 DEVELOPER2
// Nimeäminen muutettu lisenssi.rtf mukaiseksi.
// 
// 7     25.02.04 20:24 DEVELOPER2
// Reijolta 24.2.2004
// 
// 6     26.10.03 21:15 DEVELOPER2
// - File Log
// - Lisenssin installointi tarkistetaan isLicenseInstalled propertyllä
// 
// 5     5.10.03 19:17 DEVELOPER2
// - EditBox korvattu ComboBoxilla 
// - OpenDialog muutettu sellaiseksi, että sillä pystyy avaamaan tiedostoja
// 
// 4     5.10.03 17:14 DEVELOPER2
// Verkkolisenssin hakemisto käyttäjän määriteltävissä
//
// 3     5.10.03 17:06 DEVELOPER2
// Verkkolisenssin hakemisto käyttäjän määriteltävissä
//

//DEVELOPER2, etsi:  2.0.x  =Lisättävä alkuasetustarkistukset voimassa olevan lisenssin mukaan
unit Asetus;
//AsetusFrm-VerifioBtn-Hint=Annetaan varmistekoodi, jolla valittu lisenssi toimii.

interface

uses
  Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs,
  StdCtrls, ComCtrls, Mask, licenseFuncs, RichEditNola{, FileCtrl}, NolaForms,
  ExtCtrls, LabelNola, Log, LicensePanelNola;

type
  TAsetusFrm = class(TFormNola)
    OkBtn: TButton;
    CancelBtn: TButton;
    AsetusPageControl: TPageControl;
    YleinenSheet: TTabSheet;
    LisenssiSheet: TTabSheet;
    KieliLbl: TLabel;
    KieliCombo: TComboBox;
    StatusLbl: TLabel;
    StatusEdit: TEdit;
    InfoEdit: TRichEditNola;
    HaltijaLbl: TLabel;
    HaltijaEdit: TEdit;
    VerkkoHakemistoLabel: TLabelNola;
    VerkkoHakemistoButton: TButton;
    VerkkoHakemistoDialog: TOpenDialog;
    VerkkoHakemistoCombo: TComboBox;
    SalaEdi: TEdit;
    SiirraBtn: TButton;
    PoistaBtn: TButton;
    VerifioBtn: TButton;
    TilausBtn: TButton;
    LicensePanel: TLicensePanelNola;
    DemoSheet: TTabSheet;
    DemoLicensePanel: TLicensePanelNola;
    SalaStrLbl: TLabelNola;
    procedure OkBtnClick(Sender: TObject);
    procedure CancelBtnClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure VerifioBtnClick(Sender: TObject);
    procedure PoistaBtnClick(Sender: TObject);
    procedure SiirraBtnClick(Sender: TObject);
    procedure TilausBtnClick(Sender: TObject);
    procedure VerkkoHakemistoButtonClick(Sender: TObject);
    procedure AddDirectoryToComboBox(const directory: string);
    procedure VerkkoHakemistoComboChange(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure SalaEdiChange(Sender: TObject);
    procedure VerkkoHakemistoComboExit(Sender: TObject);
    procedure VerkkoHakemistoLabelMouseDown(Sender: TObject; Button: TMouseButton; Shift: TShiftState; X, Y: Integer);
    procedure CancelBtnMouseUp(Sender: TObject; Button: TMouseButton; Shift: TShiftState; X, Y: Integer);
  private
    { Private declarations }
    FChangedLicense: Boolean;
    FchangedDirectory: Boolean;
    FdemoLisenssiLaajuus: LicenseScope;

    procedure WriteChangedLicense(value: Boolean);
    function  ReadChangedLicense: boolean;

    procedure CheckLicenseStatus;
    procedure SetLicense;         //120.6:  Never used. Tulee Undeclared.. jos poistaa, todettu. 1412: Never used.

  public
    { Public declarations }
    haltija: string;

    constructor Create(AOwner: TComponent); override;
    function  Execute: Boolean;

    property  ChangedLicense: Boolean read ReadChangedLicense write WriteChangedLicense;

    // Kertoo Demo tabissa olevan lisenssin tyypin
    property  DemoLisenssiLaajuus: LicenseScope read FdemoLisenssiLaajuus;

  end;

var
  AsetusFrm: TAsetusFrm;
  alpSalaTxt     :string;        //<+8.0.0
  alpDemoLaaj    :LicenseScope;
  DemoLaajMuutos :boolean;       //<+8.0.7   §DemoL§  Globaaliksi tässä, tarve Johto.PAS´sa / Huomautus +10.0.4
  alpKaikkiOikeudet_1x :boolean; //<+10.0.4  Glob =Tarve myös Johto.PAS´sissa.

implementation

uses
    defs, globals, settings, textbase, LicenseDlg, LicenseMoveDlg, LicenseMove2, textBasetexts,
    TilLom, Y_, ZS_, EdvNew, Moot, Z_PaaVal, S_PaaVal, PaaVal,      //<Valtaosa vain Closen takia !!!!!!!!!!!!!!!
    InfoDlgUnit{,Johdot{Clean};

{$R *.DFM}

VAR alpEdvVisible  :boolean;     //<+10.0.4  Local =Käyttö vain tässä PAS´sissa.

constructor TAsetusFrm.Create(AOwner: TComponent);
begin
  inherited;

  haltijaEdit.text := myRegSettings.AutoGetStringValue(ASETUS_HALTIJA, '');
  haltija := haltijaEdit.text;

  // Lisätään oletus hakemisto
  AddDirectoryToComboBox(IncludeTrailingPathDelimiter(actPath{currDir}) + LICENSE_DEFAULT_PATH); //£"1
  // Listään nykyinen käytetty hakemisto
{$IFNDEF NOLALIS}
  AddDirectoryToComboBox(myLicense.GetVerkkoLisenssiHakemisto);

  // Asetetaan DemoLisenssi samaksi kuin olemassa oleva lisenssi
  DemoLicensePanel.SetLicense(myLicense.lisenssiKoodiRec);
  FdemoLisenssiLaajuus := DemoLicensePanel.GetLicense().laajuus;
{$ENDIF NOLALIS}
end;

function TAsetusFrm.Execute: Boolean;
var
   retval: integer;
   edellinenVerkkoHakemisto: string;
begin
 //result := false;                                                        //..might be undefined.
   retval := mrOK;  if retval=mrOK  then ;                                 //..,never used.
   edellinenVerkkoHakemisto := '';  if edellinenVerkkoHakemisto=''  then ;

{$IFNDEF NOLALIS}
     SetTexts;

     { Yleiset }
     mytextbase.GetDomains(KieliCombo.items);
     kieliCombo.ItemIndex := KieliCombo.items.indexof(language);
     myRegSettings.SetStringValue(SETTINGS_USED, LANGUAGE_ID, kieliCombo.Text);

     CheckLicenseStatus;

     // Tallennetaan vanhat asetukset
     edellinenVerkkoHakemisto := myLicense.GetVerkkoLisenssiHakemisto;

     // Asetetaan valittu hakemisto comboboxiin
     VerkkoHakemistoCombo.itemIndex := VerkkoHakemistoCombo.Items.IndexOf(myLicense.GetVerkkoLisenssiHakemisto);

     retval := self.ShowModal;

     if (retVal = mrOK) then
     begin
          if (changedLicense = TRUE) then
               LicenseConfirmDlg.Execute(LicensePanel.getLicenseStr(TRUE));

          if (language <> KieliCombo.text) then
          begin
               language := KieliCombo.text;
               myRegSettings.SetStringValue(SETTINGS_USED, LANGUAGE_ID, language);
               GlobalSetTexts;
          end;

          if (haltija <> haltijaEdit.text) then
          begin
             myRegSettings.SetStringValue(SETTINGS_USED, ASETUS_HALTIJA, haltijaEdit.text);
             haltija := haltijaEdit.text;
          end;

        result := True;
     end
     else
     begin
         result := False;

         // Palauta vanhat asetukset.
         myLicense.setVerkkoLisenssiHakemisto(edellinenVerkkoHakemisto, false);
         haltijaEdit.text := myRegSettings.GetStringValue(SETTINGS_USED, ASETUS_HALTIJA);
     end;

      SetLicense;
{$ENDIF NOLALIS}
end;//Execute

procedure TAsetusFrm.SetLicense;
begin
{$IFNDEF NOLALIS}
     LicensePanel.SetLicense(myLicense.lisenssiKoodiRec);
{$ENDIF NOLALIS}
end;

procedure  TAsetusFrm.CheckLicenseStatus;
begin
{$IFNDEF NOLALIS}
     {myLicense.ValidateLicense; // Luetaan verkkolisenssi ja tarkistetaan se

     PoistaBtn.enabled := FALSE;
     SiirraBtn.enabled := FALSE;

    if (mylicense.IsLicenseInstalled) then
        PoistaBtn.enabled := TRUE;

     if (myLicense.ok = TRUE) then
     begin
        StatusEdit.Font.Color := clBlack;

        if (mylicense.paikallinenLisenssi = TRUE) then
        begin
             PoistaBtn.enabled := TRUE;
             SiirraBtn.enabled := TRUE;
        end;
     end
     else
     begin
         StatusEdit.Font.Color := clRed;
     end;

     if (myLicense.OikeusOk) then
     begin
          LicensePanel.Enabled := True;
     end
     else
     begin
          LicensePanel.Enabled := False;
     end;

     if (mylicense.paikallinenLisenssi = False)   then
     begin
          // Katsotaan onko lisenssi kunnossa. Jos se ei ole niin mahdollistetaan
          // lisenssin muuttaminen.
          if (myLicense.ok) then
            LicensePanel.Enabled := False
          else
            LicensePanel.Enabled := True
     end
     else
     begin
          LicensePanel.Enabled := True;
     end;

     if (statusEdit.Text <> myLicense.statusText) then
     begin
        myLog.WriteMessage(lmgInfo, '', 'Lisenssin status: ' + myLicense.statusText);
        StatusEdit.Text := myLicense.statusText;
     end;

     InfoEdit.Text := myLicense.infoText;

     SetLicense;}
{$ENDIF NOLALIS}
end;//CheckLicenseStatus

procedure TAsetusFrm.WriteChangedLicense(value: Boolean);
begin
     FChangedLicense := Value;
end;

function  TAsetusFrm.ReadChangedLicense: boolean;
begin
     result := FChangedLicense or LicensePanel.ischanged;
end;

procedure suljeAoFormit;      begin
   EdvNewFrm.Close;
   MoFrm.Close;
   Z_PaaValFrm.Close;
   S_PaaValFrm.Close;
   ZS_Frm.Close;
   EdvJoOllut := false;
   MoJoOllut :=  false;
end;

procedure TAsetusFrm.OkBtnClick(Sender: TObject);
begin
     modalResult := mrOk;
   if fKaikkiOikeudet_1x <> alpKaikkiOikeudet_1x  then begin
      AsetusOkBtnSulkiSyoFrmin := true;    //<'+10.0.4§ Tässä ENNEN FrmCloseja =SyottoFrmClose´a. Ks. Syotto.PAS .
      suljeAoFormit;  end;                 //PvitaEdvFrm -kutsu ei onaa tässä, suljeAoFrm´it sijoittaa edv := edvo
                                           //ja tulee LUKUinteg ym. virheilmoituksia, koska EdvNewFrm´issa
   ChkLaajuusLbl;                          //AsetusOkBtnSulkiSyoFrmin := false, KOKLATTU =TODETTU.
end;

procedure TAsetusFrm.CancelBtnClick(Sender: TObject);
begin
   ModalResult := mrCancel;
end;

procedure TAsetusFrm.CancelBtnMouseUp(Sender: TObject; Button: TMouseButton; Shift: TShiftState; X, Y: Integer);
begin
  inherited;
   ModalResult := mrCancel; //CancelBtnClik korvattu tässä. 15å3u
end;

function fLblOts :string;      begin
   result := 'Esim: afs3hh -2rmvv.   (Raj +) Laaj: ';  end;

procedure TAsetusFrm.FormShow(Sender: TObject);
begin
   ChangedLicense :=    False;
   FchangedDirectory := False;
   if IsDebuggerPresent                       //<,,+8.0.0
   then begin
      SalaStrLbl.Visible := true;                                //,Näyttää mahd. ed. kerralla asetetun sisällön.
      SalaStrLbl.Caption := fLblOts+ SalaEdi.Text +'</b>';  end
   else begin
      SalaStrLbl.Visible := false;
      SalaStrLbl.Caption := '';  end;

   alpSalaTxt :=  SalaEdi.Text;                //<+8.0.0   Testataan FrmClose´ssa.
   alpDemoLaaj := DemoLisenssiLaajuus;         //<+8.0.7   §DemoL§
   alpKaikkiOikeudet_1x := fKaikkiOikeudet_1x; //<+10.0.4  ks. OkBtnClick
   alpEdvVisible := EdvNewFrm.Visible;
//Sender: TObject; Button: TMouseButton; Shift: TShiftState;  X,Y: Integer);  Haamuteksti poistuu LT,PRO jne alta kun painasee Alt -painiketta(ainakin).
   //VK_MENU =Alt -painike 15å3u
   //VerkkoHakemistoLabelMouseDown(Self,mbLeft,[ssAlt], 0,0);
   //CancelBtnMouseUp(Self,mbLeft,[ssAlt], 0,0);
   //mouse_event(VK_MENU{MOUSEEVENTF_LEFTDOWN}, 0,0, 0,0);
   //InfoEdit.Perform (EM_SCROLLCARET,0,0);     //<+3.0.0 Vie CURSORIN NÄKYVIIN, ks. Help/Windows sdk/Index/EM_
   //LicensePanel.SetFocus;
   //VerkkoHakemistoCombo.SetFocus;
  {LicensePanel.Visible := false;
   LicensePanel.Update;//Refresh;
   LicensePanel.Visible := true;
   LicensePanel.Repaint;//Update;
  {LicensePanel.Visible := false;
   LicensePanel.Refresh;
   LicensePanel.Visible := true;
   LicensePanel.Refresh;
 { LicensePanel.Visible := false;
   LicensePanel.Refresh;
   LicensePanel.Visible := true;
   LicensePanel.Refresh;}
end;

procedure TAsetusFrm.SalaEdiChange(Sender: TObject); //+8.0.0

   function RajLaaj :string;      VAR s{,sa} :string;  {ra,la :integer;      }begin
{     s := Trim (SalaEdi.Text);   sa := '';
      while (s<>'') and (s[1]<>' ')  do
         sa := sa +s[1];  Delete (s,1,1);   //<'Päättymätön silmukka, = ei onaa.

      if NOT SokI (sa,ra)
         then ra := -1;

      s := Trim (s);   sa := '';
      while (s<>'') and (s[1]<>' ')  do
         sa := sa +s[1];  Delete (s,1,1);

      if NOT SokI (sa,la)
         then la := -1;

      if la<0  then la := ra;
      case la of  1 :sa := 'LT';
                  2 :sa := 'PRO';
                  3 :sa := 'EXT';
                  4 :sa := 'GLOB';  end;}

    //s := '<b>' +SalaEdi.Text +'</b>';// +'(<b>' +sa +')</b>';
      s :=        SalaEdi.Text;//+'</b>';// +'(<b>' +sa +')</b>';
      result := s;
   end;

begin
   inherited;
   if IsDebuggerPresent  then
    //SalaStrLbl.Caption := '(Raj +) Laaj:<b> '+ SalaEdi.Text +'</b>';
      SalaStrLbl.Caption := fLblOts +RajLaaj;
end;

procedure TAsetusFrm.VerifioBtnClick(Sender: TObject);
begin
{$IFNDEF NOLALIS}
     if (LicenseConfirmDlg.Execute(LicensePanel.GetLicenseStr(TRUE)) = TRUE) then
     begin
        // Asetetaan DemoLisenssi samaksi kuin olemassa oleva lisenssi
        DemoLicensePanel.SetLicense(myLicense.lisenssiKoodiRec);       //<,+7.0.2 DEVELOPER1
        FdemoLisenssiLaajuus := DemoLicensePanel.GetLicense().laajuus;

        changedLicense := FALSE;
        CheckLicenseStatus;
     end;
{$ENDIF NOLALIS}
end;

procedure TAsetusFrm.PoistaBtnClick(Sender: TObject);
begin
{$IFNDEF NOLALIS}
  inherited;

  Beep;
 {if (MessageDlg(myTextBase.Get(LICENSE_REMOVE_CONFIRM),
                 mtConfirmation, [mbCancel, mbOK], 0) = mrOK) then}
  if InfoDlg (myTextBase.Get(LICENSE_REMOVE_CONFIRM), mtCustom, 'OK','Peru','','',  '','','','') = 1 //<+6.2.2
  then begin
       myLog.WriteMessage(lmgInfo, '', 'Poista lisenssi valittiin' + myLicense.statusText);

       if (mylicense.RemoveLicense = FALSE) then
         {MessageDlg(myTextBase.Get(LICENSE_REMOVE_ERROR),
                 mtError, [mbOK], 0);}
          InfoDlg (myTextBase.Get(LICENSE_REMOVE_ERROR),  mtError,  'OK','','','',  '','','','');

       CheckLicenseStatus;
  end;
{$ENDIF NOLALIS}
end;

procedure TAsetusFrm.SiirraBtnClick(Sender: TObject);
begin
  inherited;

  if (LicenseMoveFrm.Execute = mrOK) then
  begin
       LicenseMove2Frm.Execute(LicenseMoveFrm.tunniste);
       CheckLicenseStatus;
  end;
end;

procedure TAsetusFrm.TilausBtnClick(Sender: TObject);      begin
  inherited;
  TilLomFrm.Show;
end;

procedure TAsetusFrm.VerkkoHakemistoButtonClick(Sender: TObject);
var
  bAskFromUser: boolean;
  currentDirectory: string;
begin
   bAskFromUser := false;   if bAskFromUser  then ;        //<..,never used.
   currentDirectory := '';  if currentDirectory=''  then ;

{$IFNDEF NOLALIS}
  inherited;

  // Otetaan talteen nykyinen hakemisto
  currentDirectory := GetCurrentDir;

  // Asetetaan tämän hetkinen hakemisto valmiiksi;
  VerkkoHakemistoDialog.InitialDir := myLicense.GetVerkkoLisenssiHakemisto;
  SetCurrentDir(myLicense.GetVerkkoLisenssiHakemisto);

  bAskFromUser := true;

  // Kysytään hakemistoa käyttäjältä kunnes saadaan hyväksytty hakemisto
  while (bAskFromUser) do
  begin
    bAskFromUser := false;
    if (VerkkoHakemistoDialog.execute) then
    begin
      // Käyttäjä valitsi tiedoston ja valitsi ok
      if (not myLicense.setVerkkoLisenssiHakemisto(ExtractFilePath(VerkkoHakemistoDialog.FileName), true)) then
      begin
        // Valinta oli viallinen, joten kysytään uudestaan
        bAskFromUser := true;
      end
      else
      begin
        // Lisätään hakemisto valittavissa oleviin
        AddDirectoryToComboBox(myLicense.GetVerkkoLisenssiHakemisto);
      end;
      VerkkoHakemistoCombo.itemIndex := VerkkoHakemistoCombo.Items.IndexOf(myLicense.GetVerkkoLisenssiHakemisto);
    end;
  end;

  // Palautetaan aikaisempi hakemisto
  SetCurrentDir(currentDirectory);

  CheckLicenseStatus;
{$ENDIF NOLALIS}
end;

procedure TAsetusFrm.AddDirectoryToComboBox(const directory: string);
begin
  // Lisätään directory combo boxiin, jos sitä ei siellä ole jo
  if (VerkkoHakemistoCombo.Items.indexof(directory) = -1) then
    VerkkoHakemistoCombo.Items.Add(directory);
end;

procedure TAsetusFrm.VerkkoHakemistoComboChange(Sender: TObject);
begin
{$IFNDEF NOLALIS}
  inherited;

  // Käyttäjä valitsi tiedoston
  if (myLicense.setVerkkoLisenssiHakemisto(VerkkoHakemistoCombo.Items[VerkkoHakemistoCombo.ItemIndex], true)) then
  begin
    // Lisätään hakemisto valittavissa oleviin
    AddDirectoryToComboBox(myLicense.GetVerkkoLisenssiHakemisto);
  end;

  VerkkoHakemistoCombo.itemIndex := VerkkoHakemistoCombo.Items.IndexOf(myLicense.GetVerkkoLisenssiHakemisto);

  CheckLicenseStatus;
{$ENDIF NOLALIS}
end;

procedure TAsetusFrm.VerkkoHakemistoComboExit(Sender: TObject);      VAR svp :string;      begin //+130.2e:  KESKEN: pitäisi kertoa "..Net.exe tarkistettava...
  inherited;
   svp :=VerkkoHakemistoCombo.Text;
   if (not myLicense.paikallinenLisenssi) then
   begin
     if fDirectoryExists(svp)
        then InputBox('Tiedoksi: Verkkohakemistopolun tarkistus:', 'Annettu hakemistopolku löytyy, OK:',svp)
        else InputBox('Tiedoksi: Verkkohakemistopolun tarkistus:', 'Annettua hakemistopolkua ei löydy, verkkolisenssi ei ehkä toimi:',svp); //<'15å3
   end;
end;

procedure TAsetusFrm.VerkkoHakemistoLabelMouseDown(Sender: TObject; Button: TMouseButton; Shift: TShiftState;  X,Y: Integer);      begin
  inherited;                                               //<130.3:  Haamutekstien poisto LT,PRO,EXT,GLOB´n alta; Häviää kun näppäimistöltä painaa Alt-btn´ia.
   WBeep([0,0]);
end;

procedure TAsetusFrm.FormClose(Sender: TObject; var Action: TCloseAction); //<DEVELOPER1 7.0.2
      VAR kaikki_1x :boolean;      begin
  inherited;
  FdemoLisenssiLaajuus := DemoLicensePanel.GetLicense().laajuus;
   PaaVal.ChkLaajuusLbl;                                                 //,EiSittenkään muita kuin DemoVrtlu, ettei
   DemoLaajMuutos := (alpDemoLaaj <> DemoLisenssiLaajuus); {and          //<,+8.0.7 §?§  'jää jokuDemoKoe korjaamatta.
                     (DemoLisenssiLaajuus <> myLicense.LisenssiLaajuus); //<'Muutos edelliseen DemoLaajuuteen +<>Lisenssi.}
  {if (alpSalaTxt<>SalaEdi.Text)  //<+8.0.0  alpSalaTxt := FrmShow´ssa. Tässä testi, onko Show´n jälkeen muuttunut.
      and (EdvNewFrm.Visible)  OR
      DemoLaajMuutos                                                     //<+8.0.7 §DemoL§}

   kaikki_1x := fKaikkiOikeudet_1x;                                      //<+10.0.4§
   if DemoLaajMuutos  OR                                                 //<+8.0.7 §DemoL§
       (alpKaikkiOikeudet_1x <> kaikki_1x)  and                          //<,+10.0.4§
       (alpEdvVisible        <> EdvNewFrm.Visible)
      then begin //AsetusFrmMuutos := true;
                 PvitaEdvFrm;    //PRC PvitaMuutokset; (Workkii vain jos PvitaBtn.Enabled). EiOnaa OkBtnClik´issä, KOKLATTU.

               //TEdvNewFrm(owner).UpdateValues;                         //<,+8.0.7 §DemoL§
               //TEdvNewFrm(Self).UpdateValues;                          //<,+8.0.7 §DemoL§
               //TJohdot.Clean;
                 //EdvNewFrm.Update;       //<,'Nämä mitkään eivät saa verkkokuvaajaa päivittymään.
                 //EdvNewFrm.UpdateValues;
                 //EdvNewFrm.Invalidate;
                {EdvNewFrm.Close;
                 EdvNewFrm.Show;  }end;
end;

initialization
   alpSalaTxt := '';            //<+8.0.0
   alpDemoLaaj := lvLT;         //<+8.0.7  LT??? §DemoL§

end.
