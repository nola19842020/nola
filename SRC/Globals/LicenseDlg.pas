{
* Copyright (c) 2020, Reijo Pursiainen, Hannu Pursiainen
* All rights reserved.
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*
*     * Redistributions of source code must retain the above copyright
*       notice, this list of conditions and the following disclaimer.
*     * Redistributions in binary form must reproduce the above copyright
*       notice, this list of conditions and the following disclaimer in the
*       documentation and/or other materials provided with the distribution.
*     * Neither the name of Reijo Pursiainen, Hannu Pursiainen nor the
*       names of its contributors may be used to endorse or promote products
*       derived from this software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY REIJO PURSIAINEN, HANNU PURSIAINEN AND
* CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
* BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
* A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REIJO PURSIAINEN,
* HANNU PURSIAINEN AND CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
* LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
* SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
}

///////////////////////////////////////////////////////////////////////////////
//
// FileName:  LicenseDlg.pas
// Location:  src\Globals
// Abstract:  Syötetään lisenssitiedot (Tunniste, koodi ja varmiste)
//
///////////////////////////////////////////////////////////////////////////////
//
// Following fields are automatically generated by the version control system:
//
// $Revision: 1.4 $
//     $Date: 2005/10/09 14:01:50 $
//
///////////////////////////////////////////////////////////////////////////////
//
// Change Log. Old log entries can be removed by deleting them.
// $Log: LicenseDlg.pas,v $
// Revision 1.4  2005/10/09 14:01:50  DEVELOPER2
// Reijolta 26.9.2005
//
// 
// 5     14.03.04 16:06 DEVELOPER2
// Nimeäminen muutettu lisenssi.rtf mukaiseksi.
// 
// 4     7.03.04 12:55 DEVELOPER2
// Alkutunnistetiedot lisätty
// 
unit LicenseDlg;

{Tunniste.Hint=
Määräytyy laiteympäristösä ja valitusta lisenssistä. Annetaan ohjelman toimittajalle avauskoodia varten.
KoodiEdit.Hint=
Määräytyy valitusta lisenssistä. Annetaan ohjelman toimittajalle avauskoodia varten.
Varmiste.Hint=
Ohjelman toimittaja palauttaa (SAMASSA ISTUNNOSSA) yo. rivejä vastaavan koodin, jolla ohjelma käynnistyy.
}

interface

uses Windows, SysUtils, Classes, Graphics, Forms, Controls, StdCtrls, 
  Buttons, ExtCtrls, ComCtrls, RichEditNola, LabelNola, Dialogs, NolaForms{,
  LaskuEditFrm}, System.UITypes;

type
  TLicenseConfirmDlg = class(TFormNola)
    OKBtn: TButton;
    PeruutaBtn: TButton;
    Bevel1: TBevel;
    TunnisteEdit: TEdit;
    KoodiEdit: TEdit;
    VarmisteEdit: TEdit;
    VaroitusGrb: TGroupBox;
    TunnisteLbl: TLabelNola;
    KoodiLbl: TLabelNola;
    VarmisteLbl: TLabelNola;
    VaroitusEdit: TRichEditNola;
    procedure OKBtnClick(Sender: TObject);
    procedure KoodiEditChange(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    function  Execute(koodi: string): Boolean;

  end;

var
  LicenseConfirmDlg: TLicenseConfirmDlg;

implementation

uses
    defs, globals, settings, textbase, license, licenseFuncs, textBaseTexts, PaaVal{vex vai pitäiskö olla RekPaa 08å1x};

{$R *.DFM}

function TLicenseConfirmDlg.Execute(koodi: string): Boolean;
var
   retval: integer;
begin
     SetTexts;

     KoodiEdit.Text :=    koodi;
{$IFNDEF NOLALIS}
     TunnisteEdit.Text := myLicense.GetNewLisenssiTunnusStr;
{$ENDIF NOLALIS}
     VarmisteEdit.text := '';

     varoitusEdit.text := myTextBase.Get(LICENSE_WARNING);

     retval := self.ShowModal;

     if (retVal = mrOK) then
     begin
         // Testataan onko lisenssi kunnossa.
{$IFNDEF NOLALIS}
         mylicense.SetInstalledLisenssiKoodiStr(KoodiEdit.Text);
         mylicense.SetInstalledLisenssiVarmisteStr(varmisteEdit.text);
{$ENDIF NOLALIS}
         ModalResult := idOK;

         result := True;
     end
     else
         result := False;
end;

procedure TLicenseConfirmDlg.OKBtnClick(Sender: TObject);
begin
     ModalResult := idOK;

// DEVELOPER2 2003-10-26 BEGIN
//     if (mylicense.status IN [lsEta,lsTyhja,lsViallinen]) //<,,+ DEVELOPER1 1.1.6
{$IFNDEF NOLALIS}
    if (not mylicense.ok)
// DEVELOPER2 2003-10-26 BEGIN
        then PaaValFrm.AsetNap.Font.Style := [fsBold]
        else PaaValFrm.AsetNap.Font.Style := [];
{$ENDIF NOLALIS}
end;

procedure TLicenseConfirmDlg.KoodiEditChange(Sender: TObject);
begin
     VarmisteEdit.Text := '';
end;

{var
  Present: TDateTime;
  Year, Month, Day, Hour, Min, Sec, MSec: Word;
 begin
  Present:= Now;
  DecodeDate(Present, Year, Month, Day);
  Label1.Caption := 'Today is Day ' + IntToStr(Day) + ' of Month '
    + IntToStr(Month) + ' of Year ' + IntToStr(Year);
  DecodeTime(Present, Hour, Min, Sec, MSec);
  Label2.Caption := 'The time is Minute ' + IntToStr(Min) + ' of Hour '
    + IntToStr(Hour);
end;
procedure TLicenseConfirmDlg.VarmisteEditChange(Sender: TObject);      begin
  inherited;
   if VarmisteEdit.Text = '12345'  then
      TunnisteEdit.Txt :=
end;}

end.
