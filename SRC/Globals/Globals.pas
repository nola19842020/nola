{
* Copyright (c) 2020, Reijo Pursiainen, Hannu Pursiainen
* All rights reserved.
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*
*     * Redistributions of source code must retain the above copyright
*       notice, this list of conditions and the following disclaimer.
*     * Redistributions in binary form must reproduce the above copyright
*       notice, this list of conditions and the following disclaimer in the
*       documentation and/or other materials provided with the distribution.
*     * Neither the name of Reijo Pursiainen, Hannu Pursiainen nor the
*       names of its contributors may be used to endorse or promote products
*       derived from this software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY REIJO PURSIAINEN, HANNU PURSIAINEN AND
* CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
* BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
* A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REIJO PURSIAINEN,
* HANNU PURSIAINEN AND CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
* LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
* SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
}

///////////////////////////////////////////////////////////////////////////////
// "§" -merkitty IFNDEF NOLALIS ohitukset 12.0.05
//""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
///////////////////////////////////////////////////////////////////////////////
//
// FileName:  Globals.pas
// Location:  src\Globals
// Abstract:  Globaalien muuttujien ja objektien alustamiset
//
///////////////////////////////////////////////////////////////////////////////
//
// Following fields are automatically generated by the version control system:
//
// $Revision: 1.4 $
//     $Date: 2005/10/09 14:01:50 $
//
///////////////////////////////////////////////////////////////////////////////
//
// Change Log. Old log entries can be removed by deleting them.
// $Log: Globals.pas,v $
// Revision 1.4  2005/10/09 14:01:50  DEVELOPER2
// Reijolta 26.9.2005
//I '..\GlobINC\NolaTyp.INC'}                           //<¤DEVELOPER1
// 
// 7     25.02.04 20:24 DEVELOPER2
// Reijolta 24.2.2004
// 
// 6     22.11.03 10:57 DEVELOPER2
// Lähtösymbolien luonti ja tuhoaminen lisätty.
//
// 5     26.10.03 21:05 DEVELOPER2
// Log file
// 
// 4     5.10.03 16:57 DEVELOPER2
// Tiedoston alkuosa korjattu
//
// 3     5.10.03 16:55 DEVELOPER2
// Verkkolisenssin hakemisto käyttäjän määriteltävissä

unit Globals;

interface

uses
    forms, Defs, TextBase, Settings, IniFiles, License, Log, Graphics, System.UITypes;{TCanvas/120.45}{, InfoDlgUnit{1414eiOk}//, SysUtils, Classes{TStrLst 12.0.0};
    //GlobInfo{1414};
type
    TNolaDesignInfo = record
         screenWidth:  integer;
         screenHeight: integer;
    end;

{ Globaalit muuttujat }
var
   myTextBase:         TTextBase;
   myRegSettings:      TRegSettings;
   myApplication:      TApplication;     //,Ehtolauseet poistettu 120.4 .
{$IFNDEF NOLALIS}                      //<,Poistettu koemielessa. Ks. myös ..Create rv. 340 12.0.03 ja .05. Palautettu 12.0.06.
   myLicense:          TLicenseManager;
{$ENDIF} //Tämä nyt ALP. OK 120.4x

   myLog:              TLog;
   actPath:            string; //<12.0.0: Oli currDir.
   computerName:       string;
   language:           string;
   demoInfoPrint:      boolean;

   myDesignInfo:         TNolaDesignInfo;

   { Luodaan globaalit olioiden instanssit }
   procedure CreateGlobals;

   { Tuhotaan globaalit olioiden instanssit }
   procedure DestroyGlobals;

   { Asettaa formien tekstit sekä muut globaalit tekstit}
   procedure GlobalSetTexts;

   { Asettaa lokien kirjoituksen }
   procedure InitLogFile;

   { Delphi XE2 sisältää virheen joka aihauttaa virheellisen varoituksen Str()-
     funktiota käytettäessä (http://qc.embarcadero.com/wc/qcmain.aspx?d=83051).
     Varoitus: W1057 Implicit string cast from 'ShortString' to 'string'
     VolaStr[1|2]()-funktio sammuttaa varoitukset Str() funktion käytön ajaksi. } //<''DEVELOPER2
   procedure RtoST {VolaStr1} (arvoR :Real;  tab: integer;  VAR S :String);
   procedure RtoSD {VolaStr2} (arvoR :Real;  tab,des :Integer;  VAR S :String);   //<'Nämä korvattu uusilla FNC/PRC´llä DEVELOPER1}

   { Käynnistää 64-bit sovelluksen, jos yritetään käynnistää 32-bit sovellus 64-bit windowsissa.
     Palauttaa True jos 64-bittinen sovellus on käynnistetty ja nykyinen sovellus pitää sulkea. }
   function Start64Version(exeBaseName: string): boolean;                         //<32/64  64/32  Find -hakua varten.
 //function IsWindows64: Boolean;//<,,+12.0.0  Toimii OK, ei enää tarvetta.

{$I '..\GlobINC\NolaTyp.INC'}                           //<¤DEVELOPER1
{$I '..\GlobINC\NolaVar.INC'}

implementation
                             //<Muutos 12.0.04 DEVELOPER2.
//ø{$IFDEF NOLALIS             //<,,+12.0.07: Lisäsin nyt koska Rounder => Undicleaered id.}
//øuses
//ø  Y_;
//ø{$ELSE}                     //<''+12.0.07: Lisäsin nyt koska Rounder => Undicleaered id.}
//ø{-$IFNDEF NOLALIS}          //<+12.0.07:  Tämä oli DEVELOPER2_U´ssa, mutta puuttui tästä. Minäkö poistin???
uses
  SysUtils,DetEv{120.45 ..KysyJaDelaa..},
  ShellApi, Classes{120.6: StringList},
  Dialogs,
  Controls,
  Printers,
   Apu,                         //<+120.45  Ei enää tarvetta koska Y_.PAS/ fPix.. jo valmis, mutta koska Fmr tulee aina autom, Visible := fa jälempnä.
   RichEditNola,                //<+120.45
  Y_ ,
  Z_A2,
  Z_PaaVal,
  ZS_ ,
  PaaVal ,
  SyottoAv,
  S_PaaVal,
  Herja1,
  Koe,
  Syotto,
  Unit0,
  Unit1,
  EdvNewLask,
  NjVrk,
  EdvNew,
  Johto,
  Johdot,
  PrintDialogNola,
  Odota,
  Asetus,
  CableImages,                  //<DEVELOPER2 2003-11-21
  Windows, AlkuOdot{+120.5},GlobInfo{15å3,1414};
//ø{$ELSE}                      //<,,+12.0.07:  Nämä oli DEVELOPER2_U´ssa, mutta puuttui tästä. Minäkö poistin???,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//øuses
//ø    SysUtils, Windows, ShellApi, Dialogs, Controls;
//ø{$ENDIF}

{procedure NolaStr1(arvo :Real;  tab: integer;  VAR S :String);       <,Nämä korvasin TtoST ja RtoSD´llä alempna.
 procedure NolaStr2(arvo :Real;  tab, des :Integer;  VAR S :String);
                                //<''+12.0.07:  Nämä oli DEVELOPER2_U´ssa, mutta puuttui tästä. Minäkö poistin???''''''''''''''''''''''''''''''''''''''''''''''''''}

//http://forum.codecall.net/topic/60111-how-to-detect-windows-64bit-with-delphi-code/  +12å8=12.0.0
(* Toimii OK, mutta KAIlta kokonaisratkaisu.
function IsWindows64: Boolean;      type  TIsWow64Process = function(AHandle:THandle; var AIsWow64: BOOLean): BOOLean; stdcall;
                                     var  vKernel32Handle: {DWORD}LongWord;
                                          vIsWow64Process: TIsWow64Process;
                                          vIsWow64       : BOOLean;        begin
   Result := False;                                          // 1) assume that we are not running under Windows 64 bit
   vKernel32Handle := LoadLibrary('kernel32.dll');           // 2) Load kernel32.dll library
   if (vKernel32Handle = 0) then Exit;                       // Loading kernel32.dll was failed, just return
   try                                                       // 3) Load windows api IsWow64Process
       @vIsWow64Process := GetProcAddress(vKernel32Handle, 'IsWow64Process');
       if not Assigned(vIsWow64Process) then Exit;           // Loading IsWow64Process was failed, just return
       vIsWow64 := False;                                    // 4) Execute IsWow64Process against our own process
       if (vIsWow64Process(GetCurrentProcess, vIsWow64)) then
           Result := vIsWow64;   // use the returned value
   finally
       FreeLibrary(vKernel32Handle);  // unload the library
   end;
end;*)

(*procedure _DefsFileG(si :string);     {VAR ff :TextFile;  nm :string;     }begin //+120.45  1414: Ei enää käytetty kertaakaan.
nm := IncludeTrailingPathDelimiter (ExtractFilePath (Application.ExeName)); //Incl.. turha, "\" tulee loppuun muutenkin.
   nm := nm +DefsFileenKirjONdn_203{4};                        //<+1201.
   if DirectoryExists (nm)  then begin //end;
      nm := nm +'\$DefsFileen-Glb.txt';                        //<,+1201: Nyt tehdäänkin samaan dirriin mikä on tunnistusDirri.
      AssignFile(ff,nm);
      if FileExists (nm)
         then Append(ff)
         else Rewrite(ff);
   {if fIsoTimEro (TimEd3) then //<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
         Writeln(ff,'============================Defs===== ' +DateTimeToStr(Now)); //+ ' ' + DateTimeToStr(time));}
      Writeln(ff,si);                                         //'Kirjjoitetaan jakoviiva ja aikaleima jos aikaeroa >=4s.
      Flush(ff);
      Close(ff);
   end;
end;//DefsFileG
procedure DefsFileG(si :string);      begin end;//}_DefsFileG(si);  end;
procedure DefsFileGp(si :string);     begin {end;//}_DefsFileG(si);  end;*)

//,,+12.0.01 §§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§
procedure Fileen  (o :integer;  si :string);      begin end; //<BFileen -kutsut helppo muuttaa tyhjiksi muuttamalla BFileen => Fileen´ksi.
procedure BFileen (o :integer;  si :string);      {VAR ff :TextFile;  nm :string;      }begin//o>0 =Kirjoitetaan aikaleima.
 //nm := 'X:\Projektit XE2\NolaKehi\BIN\_Ajot\FileenB.txt'; //'Käytetään Debuggerin korvikkeena koska se ei suostu workkimaan jostain syystä.
  (*nm := '\\Reijo-xp\e\Projektit XE2\NolaKehi\BIN\_Ajot\FileenB.txt';
   AssignFile(ff,nm);
   if FileExists (nm)
      then Append(ff)
      else Rewrite(ff);
   if o>0  then
      Writeln(ff,'==============================B===== ' +DateTimeToStr(Now)); //+ ' ' + DateTimeToStr(time));
   si := 'Globals.PAS/BFileen:  ' +si;                                         //<+12.0.05
   Writeln(ff, si);
   CloseFile(ff);
 //Windows.Beep (1500,200);*)
end;

procedure RtoST (arvoR :Real;  tab: integer;  VAR S :String);      VAR i :integer;      BEGIN//Oli DEVELOPER2: NolaStr1.
               (*{-$WARNINGS OFF}            DEVELOPER1: XP´ssä ei worki oikein.
                  Str(arvo :Tab, S);
                 {$WARNINGS ON}*)
   S := FloatToStr (arvoR);
   i := Length(S);
   for i := i+1 to tab  do S := S +'#'; //<Tehdään S TABin pituiseksi.
END;

procedure RtoSD (arvoR :Real;  tab,des :Integer;  VAR S :String);       VAR i :integer;      BEGIN//<Oli DEVELOPER2: NolaStr2.
               (*{-$WARNINGS OFF}                DEVELOPER1: XP´ssä ei worki oikein.
                  Str(arvo :Tab :Des, S);
                 {-$WARNINGS ON}*)
   S := FloatToStr (arvoR);       //function Rounder(var Value: real;  Decimals: Integer): Double;
   arvoR := Rounder (arvoR,des);
   S := FloatToStr (arvoR);       //<Uudesta luvusta S.
   i := Length(S);
   for i := i+1 to tab  do S := S +'¤'; //<Tehdään S TABin pituiseksi.
END;

procedure CreateGlobals; //==================================================================================================================================
var
   BaseFN :string; //<12.0.0:  TextBaseFile => TextBaseFileN.
   Pn,{Fn,}SQ,sa,su,{s0,}AvusteINC :string;              //<,+12.0.0
  {NOLAr,}boo :boolean;
   k,j :integer;                                         //<+12.0.07
 //¿Dj,Dk :TDateTime;                                    //<+120.6
   name: array [0..MAX_COMPUTERNAME_LENGTH + 1] of char;
{$ifdef VER100}
   // Delphi 3
   size{,krt{12.0.0} :integer;
{$else}
   size: DWORD;
{$endif}
{  procedure KoklaaG;      VAR s :string;      begin   //,,fRmrkt0 (arvo :Real;  tab,des :Integer) :String;
                     s := fRmrkt0 (1.345,6,1);     //= ~~~1.3
      if s='' then;  s := fRmrkt0 (1.345,6,2);     //= ~~1.35
      if s='' then;  s := fRmrkt0 (1.345,6,1);     //= ~~~1.3
      if s='' then;  s := fRmrkt0 (1.345,6,0);     //= ~~~~~1
      if s='' then;  s := fRmrkt0 (1.351,6,0);     //= ~~~~~1
      if s='' then;  s := fRmrkt0 (1.35,6,1);      //= ~~~1.4
      if s='' then;  s := fRmrkt0 (1.344,6,2);     //= ~~1.34
      if s='' then;  s := fRmrkt0 (1.3446,7,2);    //= ~~~1.34
      if s='' then;  s := fRmrkt0 (1.3456,7,2);    //= ~~~1.35
      if s='' then;  s := fRmrkt0 (1.3456,6,2);    //= ~~1.35
      if s='' then;  s := fRmrkt0 (0.000098,1,6);  //= 0.000098   rajR=1  desR=8
      if s='' then;  s := fRmrkt0 (0.000098,1,6);  //= 0.000098
      if s='' then;  s := fRmrkt0 (0.000098,1,7);  //= 0.0000980
      if s='' then;  s := fRmrkt0 (0.000098,1,-7); //= 0.000098
      if s='' then;  s := fRmrkt0 (9.8000,1,4);    //= 9.8000
      if s='' then;  s := fRmrkt0 (9.8000,1,-4);   //= 9.8
      if s='' then;  s := fRmrkt0 (9.85500,1,4);   //= 9.8550
      if s='' then;  s := fRmrkt0 (9.85500,1,2);   //= 9.86
      if s='' then;  s := fRmrkt0 (9.8000,1,-4);   //= 9.8
      if s='' then;
   end;//KoklaaG}

  {FUNCTION fBmrkt(arvB :Boolean) :String;      BEGIN
      if arvB   then result := 'TR'  else result := 'FA';  end;}

   function fFileAika (os,i :integer; pn :string) :TDateTime{Double{120.6 integer};     VAR tm :TDateTime;   begin //Lst :TSringList.Create;  Ei worki täällä.
      result := 0;     //'i on kutsuvan kohdan for-silmukkalaskuri tms.                     //FileAge .. rec :TSearchRec;
    (*if FindFirst(pn,{0}faAnyFile,rec) <>0
         then ShowMessage(Ints(os) +Ints(i) +': Ei löydy tiedostoa:  "' +pn +'" Onko polku VARMASTI oikein?')
         else result := rec.Time;*)
      if NOT fFileExists(pn)                                                                //<,,+120.6 120.5o:  '\\?\'
       //then ShowMessage(Ints(os) +' ' +Ints(i) +': Ei löydy tiedostoa:  "' +pn +'" Onko polku VARMASTI oikein?')
         then InputBox('os: ' +Ints(os) +' i:' +Ints(i) +':  Ei löydy tiedostoa:', 'Onko polku VARMASTI oikein?:', pn)
         else begin fGetAika(pn,tm);          //<,+120.5h
                    result := tm;
         end;
   end;
                                                            //,Muotoilu ja sijoittelu Listoihin täysin uusittu 1414 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<.
   procedure TimeEro_AvusteINCit_vsTextBase_KysyDelaa;      VAR Snew,Sold,su{,sX,sa} :string;  newArr,oldArr :Array of string;  v :word;  //+120.45
                                                                                        //'newArr =Sinne kaikki TextBase.NOL´lia uudemmat fileNimet +ikä.
      function LF :string;        begin result := Chr(10);          end; //<+1414.  Erottuu sorcesta poisotettavaksi, josMessageDle tms. (=ei NotePad)
      function CrLf :string;      begin result := Chr(10)+Chr(13);  end;
                                                   //,,+120.45:  Tarkistaa onko Defs.PAS+ sin VERSSIO ja PVM samat kuin Avuste.INC´ssä.
      procedure ChkAvusteet_vrtTextB_KysyDel;   VAR Lst :Array [1..7] of string;   //Arr :Array [1..6] of string; //<Koekäytösssä pelkät polut vertailuun.
                                                    k,i,j,uusia,vanhoja,LX,pX :integer;  path,ca,SC,sb,fx,fnChk,fnChkNew,Rcmd :string; //fMSpixPit on Y_.PAS´sissa.
                                                    LstF,LstChk :System.Classes.TStringList;  tmB,td :TDateTime;  btns :TMsgDlgButtons; //'Rcmd=+1414
                                                    maxPit :integer;  Lrv :integer{1414};  teeBase :boolean;
                                                 //xForm: TForm;  xLabel: TLabel; //<+1314A
                                                  //RediN :TRichEditNola; //'LX=polun pix, 'tmB=TextBasen ikä,  tmF=filen ikä,  pX=pisin polkuPix.

         function fEiOoVersioPvm_AvusteINCssa :boolean;      VAR verS, sd,sa,sf, pp0,pp1,kk0,kk1, pvm1,pvm2,pvm3,pvm4 :string;  pp,kk,vv,u,k :integer;
                                                                 boV,boP :boolean;      begin
                    //,,Tehdään merkkijonovaihtoehdot ohjelman tekopäiväyksestä tyyliin:  1.2  01.02  1.02 jne. ONKOHAN TURHA, EIKÄ Filen AIKALEIMA RIITÄ?
            verS := Ints(PROGRAM_VERSION_MAJOR) +'.' +Ints(PROGRAM_VERSION_MINOR) +'.' +Ints(PROGRAM_VERSION_RELEASE);
            sd := Trim (PROGRAM_BUILD_DATE);       //11.0.0  "02.03.2009"  "2.03.2009"  "2.3.2009"  "02.3.2009"
            u := Pos('.',sd);                   //<,,Päivät..................................  //sa := ''; ,,Tämä eioo yhtään lyhyempi kuin Pos.. algoritmi.
            sa := Copy(sd,1,u-1);                  //<Luku pisteeseen-1 asti.                  //while (sd<>'') and (sd[1]<>'.')  do begin
            Delete(sd,1,u);                        //<..ja SD´stä delataan "." asti se mukLuk  //   sa := sa +sd[1];  Delete(sd,1,1);  end;
            if (sa<>'') and (sa[1]='0')  then Delete(sa,1,1); //<Delataan ekana oleva "0".     //if sa[1]='0'  then Delete(sa,1,1);
            SokI(sa,pp);                                                                       //SokI(sa,pp);}

            u := Pos('.',sd);                   //<,,Kuukaudet...............................
            sa := Copy(sd,1,u-1);                  //<Luku pisteeseen-1 asti.
            Delete(sd,1,u);                        //<..ja SD´stä delataan "." asti se mukLuk
            if (sa<>'') and (sa[1]='0') then Delete(sa,1,1); //<Delataan ekana oleva "0".
            SokI(sa,kk);
            SokI(sd,vv);                           //<Loppu SD=vuosi.

            pp1 := Ints(pp) +'.';
            pp0 := pp1;
            if pp<10  then pp0 := '0' +pp0;

            kk1 := Ints(kk) +'.';
            kk0 := kk1;
            if kk<10  then kk0 := '0' +kk0;
            while (sd<>'') and CharInSet (sd[1], ['0'..'9']) //<sd = "2014 i" => " i"  :+120.5i: ..Buil_Date´sta otetaan häntä (mahd. jokin kirjain esim." i").
               do Delete(sd,1,1);

            pvm1 := pp0 +kk0 +Ints(vv) +sd;        //<"02.xx.2009" tai "x2.xx.2009"
            pvm2 := pp1 +kk1 +Ints(vv) +sd;        //<"2.xx.2009"  tai "x2.xx.2009"
            pvm3 := pp0 +kk1 +Ints(vv) +sd;        //<"02.xx.2009" tai "x2.xx.2009"
            pvm4 := pp1 +kk0 +Ints(vv) +sd;        //<"2.xx.2009"  tai "2.xx.2009"

            fx := AnsiUpperCase(gAjoPath);         //,\\Reijo-xp\e\Projektit XE2\NolaKehi\SRC\Globals\Defs.PAS
            k := Pos('\NOLAKEHI\',fx);             //           C:\Projektit XE2\NolaKehi\SRC\Globals\Defs.PAS
            if k>0  then
               fx := Copy(path,1,k +Length('\NOLAKEHI\')-1);
            fx := fx +'SRC\GlobINC\Avuste.INC';
                                          //RediN := TRichEditNola.Create(DetEvFrm);             //<,,No parents... EI ONAA.
            boP := false;  boV := false;  //FindText(const SearchStr: string;  StartPos, Length: Integer; Options: TSearchTypes): Integer;
            for u := 1 to 5  do begin     //result := ((RediN.FindText(pvm1,1,3000,[])= -1)  and (RediN.FindText(pvm2,1,3000,[])= -1) and (RediN.FindText(pvm3,1,3000,[])= -1) and
               case u of                  //           (RediN.FindText(pvm4,1,3000,[])= -1)) OR (RediN.FindText (verS,1,3000,[])= -1);
                  1 :sa := pvm1;          //RediN.Free;}
                  2 :sa := pvm2;
                  3 :sa := pvm3;
                  4 :sa := pvm4;
                  5 :sa := verS;                                    //(Pos('2014 i',sa)>0) or (Pos('2014 i',sf)>0)     (Pos('2014 i',sf)>0) //or(Pos('2014 i',sa)>0)
               end;//case                                           //Luettiin LstF´ään Avuste.INC ja LstF´stä tutkitaan 50 rviä, josko löytyy sama pvmLeima.
               if ((u<5) and NOT boP)  OR ((u=5) and NOT boV)  then //<Kunnes VERSIOtiedotkin löytyi tai sillekin luettu 50 rviä.
               for k := {1}0 to 50  do begin
                  sf := LstF[k];                                    //<LstF loadattu pääPrc´n alussa. 120.5i: LstF[u] => LstF[k] =Oli ihan väärin.
                  if Pos(sa,sf)>0  then begin                       //<Pilkkukin pisteen paikalla estää TRUEN, OK.
                     if u<5  then boP := true
                             else boV := true;
                     Break;
                  end;
               end;//for k
            end;//for u
            LstF.Free;
            result := NOT boP  OR  NOT boV;
         end;//fEiOoVersioPvm_AvusteINCssa //#################################################################,,,,,,,,,,,,,,,,,,,,,,,,,,,,#####################
                                           //,Tätä Y_.PAS/FNC fMSpixPit varten eri fonttien pixLeveydet saatu ApuFrm.PAS/PRC NaytaCharPixt´llä (kutsu jälempnä).
                                           //,Jos tarvetta viilata tai jatkokehittää, poista kommenttisulut Nola.DPR / Application.CreateForm(TApuFrm, ApuFrm);
                                           //,1PixMSsanS.TXT =MS Sans Serif,  2PixCourier.TXT =Courier New,  3PixMSserif.TXT =MS Serif,  4Tahoma.TXT =Tahoma.
         function _fMSpixPit (str :string) :integer;      begin result := fMSpixPit(4{Tahoma},str);  end; //<Tällä fontilla (Tahoma) tulee MessageDlgn

         function fStrToLstChk (str :string) :string;    VAR u :integer;  sa :string;   begin
            u := 1;                                        //'Poimii STR´stä CrLf´t vex ja sijoitta kunkin pätkän LstChk´hon. Rivipituudet pi-
            while (str<>'') and (u>0)  do begin            // simmän aikaRvn mukaan kun kutsun PIT>0.
               u := Pos(Chr(10),str); //{$A#$D'},str);
               if u>0  then begin     // $A#$D = 2 mrkiä.  $A=LF=10  $D=CR=13
                  sa := Copy(str,1,u-1);
                  Delete(str,1,u);
                  u := Pos(Chr(13),str);
                  if u=1  then
                     Delete(str,1,u);
                  LstChk.Add(sa);
                  if (Length(sa)>maxPit) and CharInSet (sa[Length(sa)],['0'..'9'])
                     or (maxPit=0)  then maxPit := Length(sa);
               end;
               if u<0  then ;
            end;
            result := str;
         end;
         procedure SaadaChknRvPituudet_MaxPitMukaan;      VAR i,n,j,k :integer;  sa,sx :string;   begin //Säätää LstChk´n rivipituudet maxPit mukaan
            for i := 0 to LstChk.Count-1  do begin                                                      //'=sijoittaa "_"xN pv- ja aikaleimojen eteen
               sa := TrimRight(LstChk[i]);             //<Säilytetään sisennykset.                      // riveille, mitkä loppuu NUMEROON.
               if (sa<>'') and CharInSet (sa[Length(sa)], ['0'..'9'])  then begin  //<,,Etsitään Pv- ja aikaleimausten edeltävän tyhjän loppu.
                                                                                   //   = Parsitaan SA´ta alkunpäin kunnes '0..9' ja edelläpäin 2x" "
// C:\PROJEKTIT XE2\NOLAKEHI\SRC\Globals\TextBaseTexts.pas   11.04.2016 19:08:10
// C:\PROJEKTIT XE2\NOLAKEHI\SRC\Globals\Defs.PAS                   18.06.2016 17:17:06
                  n := Length(sa);                                                 //,Muuten tulee turhaan välejä vikalle rvlle (Omia..).
                  while (n>0) AND CharInSet (sa[n], ['0'..'9','.', ':', ' ']) AND (Pos('Omia ajoja',sa)=0)   do begin //<Omia ajoja Lkm ohitetaan lopusta.
                   //if f1                           AND f2            AND f3             OR
                     if CharInSet(sa[n], ['0'..'9']) AND (sa[n-1]=' ') AND (sa[n-2]=' ')  then begin
                        j := Length(sa);  sx := '';
                        for k := j to MaxPit-3  do //<Jostain syystä -3 korjaa, muuta sen verran liian pitkä, TODETTU.
                           sx := sx +{'µ'}' ';
                        Insert(sx,sa,n-1);
                        LstChk[i] := sa;
                        if sa<>''  then;
                        Break;  end
                     else begin
                        sx := Copy(sa,n,50); //<Debuggerille.
                        n := n-1;
                     end;
                  end;//while
               end;//if Lst..
            end;//for
         end;//SaadaChknRvPituudet_MaxPitMukaan
         function fLength (si :string) :integer;      begin //1414:  Otetaan tagit vex (myös: #$A =CR,LF).
            TagVex(si);
            result := Length(si);
         end;
         procedure KillNotePad;      VAR MyHandle: THandle;   begin //+1414fu.  http://www.tek-tips.com/viewthread.cfm?qid=1274357
            MyHandle:=FindWindow(nil, 'NotePAD.EXE');
            SendMessage(MyHandle, {Winapi.WM_CLOSE}$10, 0, 0);
         end;//KillNotePad
                                                                                                                   // DateTimeSarake vasSuoraksi, koklattu, ero suuri.
      begin//ChkAvusteet_vrtTextB_KysyDel......................     //gAjoPath   = \\Reijo-xp\e\Projektit XE2\NolaKehi\BIN\     TAI
         //#######################################################  //           =           E:\Projektit XE2\NolaKehi\BIN\     TAI
         //#######################################################  //           = ..\Nola\
         //,Ei enää tarvettaa, arvot jo käytössä Y_.PAS/fMSpixPit   //'Testataan että on DEVELOPER1 koneista kyse.###############################################
    { NaytaCharPixt; //<Tämä käytössä VAIN FNC fMSpixPit´in TEKKOON}
         //#######################################################
         //#######################################################

         SetLength (newArr,0);                                //<,Ettei jää koeajojen mahd. uudelle kierrokselle [Yes] poluksi DateTm mukaan. SiirttyLopusta.
         SetLength (oldArr,0);
         path := AnsiUpperCase(gAjoPath);                     //<\\VERKKOLEVY\Nola\__projE\Projektit XE2\NolaKehi\NolaRek ##################################
         if fRePunKehi  then begin //="\NOLAKEHI\" ja w7..    //<+120.45:  Vaikka tänne tullaaan VAIN jos fRePunKehi. KYLLÄKIN ..KehiAjo OHITETTU 1412,
                            //'Vaikutus KOKO PRCn LOPPUUN: 'Testataan että on  =KEHITYSYMPÄRISTÖ OLTAVA (DEVELOPER1) TÄMÄ, vrt.TextBase.NOL###################
            k := Pos('\NOLAKEHI\',path);
            ca := Copy(path,1,k +Length('\NOLAKEHI\')-1);     //,\\Reijo-xp\e\Projektit XE2\NolaKehi\SRC\Globals\Defs.PAS
            Lst[1] := ca +'SRC\Globals\Defs.PAS';             //<Onko siellä muita muutoskohtia kuin VERSIO +Pvm, jotka eivät ole/vaikuta TextBase.NOL´iin,
            Lst[2] := ca +'SRC\GlobINC\Avuste.Inc';           // mutta pvm pitäisi olla huomioitu AVUSTE.INC´ssä muutosselityksien 1. rivillä.
               LstF := TStringList.Create;                    //<,,+120.6: Readln korvattu LstF.LoadFromFile().
               LstF.LoadFromFile(Lst[2]);                     //Käytettu Readln() tilalla jälempnä. Hyvenpi, koska antaa tarkemman Error-tiedon.
            Lst[3] := ca +'SRC\GlobINC\Avuste1.Inc';
            Lst[4] := ca +'SRC\GlobINC\Avuste2.Inc';
            Lst[5] := ca +'SRC\GlobINC\Avuste11.Inc';
            Lst[6] := ca +'SRC\Globals\TextBaseTexts.pas';    //<Tämä lienee määräävä PixPit´ssa (=max pX).
            SC := 'Config\TextBase.NOL';
            Lst[7] := path +SC;                               //<Tätä tutkitaan (TextBase.NOL): Mitkä kaikki ovat uudempia kuin TextBase.NOL, ne newArr´iin.
            if NOT fFileExists(Lst[7])  then begin     //<,,+120.6 NolaRek takia.  120.5o: '\\?\'
               Lst[7] := ca +'BIN\' +SC;
               if NOT fFileExists(Lst[7])  then
               while NOT fFileExists(Lst[7])  do      //<''+120.5o: '\\?\'
                  Lst[7] := InputBox(SC +' -fileä ei löytynyt, anna koko polku','Anna polku:', SC); //<''+120.6
            end;
            //,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Etsitään pisin polku pixeleinä ja TextBase´a UUDEMMAT filet.##################################################
            tmB := fFileAika(1,0, Lst[7]);                    //<tmB =TextBase.NOL´lin age. +X jottei pienet erot häiritse/aiheuta ilmoitusta... eivaikuta.
          //tmB := tmB+0.00001;                               //<0.00001 kasvattaa aikaa +1 sekunti, jos tarvis (nythän debuggeri näyttää:  11.02.2014 8:43:45
            k := Length(Lst);// -1;                           //<k-1 koska TextBase.NOL´lin ikä jo sijoitettiin tmB´hen just edellä vikax, mutta koska
            pX := 0;                                          // sillekin DateTime perään, senkin polkumitta tutkittava.
            su := '';                                         //,k=[7]=TextBase.NOL
            for i := 1 to k  do begin                         //<Sijoitukset tehtiin [1..7], ei 0´sta alkaen, siis eka=1.
               sb := ExtractFileName(Lst[i]);                 //<VAIN Debuggerille.
               if sb=''  then ;
             //su := Lst[i];
               td := fFileAika(2,i, Lst[i]);                          //<,DateTime leima tässä vain DefsFileG´hen.
             //su := su +'  ' +DateTimeToStr(td);                     //+'  ' +Ints(t) +' = '  //<Hirveän iso Int-luku.}

               if i<k  then                                   //<Lst[7] ei sij. kumpaankaan Array´hyn koska se on omanaan otsikossa.
               if (td>tmB)                             //,,,,,,, Onko [i]´n aika (t) ISOMPI(=MYÖHEMPI,UUDEMPI) kuin TextBase.NOL´lin (tmB)##############
               then begin
                  j := Length (newArr);                       // 1.(tässä) vaiheessa newArr´iin pelkkä polku ilman ikäleimaa.
                  SetLength(newArr,j+1);                      // 2.(jälempnä) PolkuPixMitta kaikille sama (aikaleimaan asti).
                  newArr[j] := Lst[i];                        // 3.(jälempnä) Polun perään aikaleima.
               end//is t>tmB
               else begin                              //,,,,,,, TextBase.NOL´lia vanhemmat filet ######################################################
                  j := Length (oldArr);                       // 1.(tässä) vaiheessa oldArr´iin pelkkä polku ilman aikaleimaa.
                  SetLength(oldArr,j+1);                      // 2.(jälempnä) PolkuPixMitta kaikille sama (aikaleimaan asti).
                  oldArr[j] := Lst[i];                        // 3.(jälempnä) Polun perään aikaleima.   Pos('Texts.PAS', Lst[i])>0
               end;
               LX := Length{fMSpixPit}(Lst[i]);               //<LX => pX =Etsitään pisin POLKU pixeinä.
               if (LX>pX)                                     //<Kaikista tutkit onko suurnpi PixPit(pX) ja se talteen.
                  then pX := LX;
            end;//for i
            //##########################################################################################################################################
            //################### EI ENÄÄ:  Pannaan kaikki str´t kahteen pötkööän, Snew ja Sold, jotka pannaan yhteen vasta MessageDlg´ssä.#############
            //################### NYT 1414: Jokainen rivi erikseen sijoitetaan LstChk´hon.##############################################################
            //##########################################################################################################################################
            LstChk := TStringList.Create;
            uusia := Length (newArr);    Snew := '';  Sold := '';  SC := ''; //<Alust: Näihin sijoitetaan KAIKKI txt.
            vanhoja := Length (oldArr);
               SC := '======================= Tämä VAIN "..\NOLAKEHI\.." -koneissa =======================:' +CrLf;
LstChk.Add(SC);
               Lrv := fLength(SC);              //<TagVex: Lrv korvaa nyt _fMSpixPit koska nyt siirryttiin käyttämään Courier New´tä (vakiokokoFonttia).
               LX := Lrv;//_fMSpixPit(SC);
               maxPit := LX;
               su := '^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^';
             //while _fMSpixPit(su)<(LX+5)  do                //<Saattaa jäädä voimaan jos Snew pidempi kuin seurt. pX saattaa olla <> pX edellä.
               while Length(su)<LX-2  do                      //<Tekstipituus samaksi kuin OTSIKKOtxt (SC).
                  su := su +'^';
LstChk.Add(su);
            if uusia>0  then begin //,,,,,,,,,,,,,,On TextBase´n UUSIMISTARVE, tehdään näytölle ikäsarakeSuora luettelo UUDEMMISTA ja VANHOISTA.########
               {System.SysUtils.}//Windows.Beep(100,1000);
               Snew := 'TextBase.NOL ON EHKÄ U U S I T T A V A (vrt. jälemmät filet):     ' +DateTimeToStr(tmB) +CrLf;
LstChk.Add(Snew);
               Snew := 'Uudempia:' +CrLf;
LstChk.Add(Snew);
             //SC := SC +Snew +su +CrLf;                //<Vasta tässä yhteen että SpixPit tulisi oikein.
//,,###### Nroon päättyvät rvt säätyvät lopussa LX´n mukaisiksi Pv- ja aikaleimojen eteen välejä lisäämällä, ks. SaadaChknRvPituudet_MaxPitMukaan.######
(*//zzzzzzzzzzz
               LX := _fMSpixPit(Snew);
               if LX>pX  then pX := LX;                       //<Tämä ei ehkä hyväksi!?!?  -20 korj???
               while _fMSpixPit(Snew)<(pX-25)  do             //<Saattaa jädä voimaan jos Snew pidempi kuin seurt. pX saattaa olla <> pX edellä.
                  Snew := Snew +'!'{.'};                          //<,Kasvatetaan OTRSIKKOA pisteillä kunnes pisinPx.########################################
               Snew := Snew +' ' +DateTimeToStr(tmB) +CrLf;   //<Jostain syystä eteen 4 väliä (muualla 3)???.
               {Snew}SC := SC +Snew +CrLf;                    //<Väirv ennen ekaa NewArr..

             //{Snew}SC := SC +Snew;                          //<Vasta tässä yhteen että SpixPit tulisi oikein.
zzzzzzzzzzz*)

               SC := '';
               for i := 0 to uusia-1  do begin
                  td := fFileAika(3,i, newArr[i]);            //<Ikä jo tässä, jos DateTime.. mukana, fFileAika ilmoittaa virheen, todettu.
                  while _fMSpixPit(newArr[i])<(pX-20)  do     //<, 2.(nyt) PolkuPixMitta kaikille sama (aikaleimaan asti).###############################
                     newArr[i] := newArr[i] +' ';             //<,Kasvatetaan polkuStr kunnes pisinPx.
                  newArr[i] := newArr[i] +'  ' +DateTimeToStr(td);
                  LstChk.Add('  ' +newArr[i] +CrLf);
               end;//for i
LstChk.Add(su);
            end//if uusia>0
            else begin//uusia=0   //<,,,,,,,,,,,,,Ei yhtään TextBase´a UUDEMPAA avuste- tms. fileä.#####################################################
             //SC := 'EI TextBase.NOL´in UUSIMISTARVETTA =  Ok Ok Ok Ok Ok Ok Ok Ok Ok Ok Ok Ok Ok Ok Ok Ok' +CrLf;
               SC := 'EI TextBase.NOL´in UUSIMISTARVETTA =  Ok Ok Ok Ok Ok Ok Ok   ' +DateTimeToStr(tmB) +CrLf;
             //LX := _fMSpixPit(SC);
LstChk.Add(SC);
               SC := '********************************************************';
//,Tähtirivi OK vain kun MessageDlg käytössä, muuten (NotePad´iin lasketaan merkkeinä:
//Tähtirivi:   while _fMSpixPit(su)<(LX-20)  do            //<Saattaa jädä voimaan jos Snew pidempi kuin seurt. pX saattaa olla <> pX edellä.
               while Length(SC)<Length(su){MaxPit}  do SC := SC +'*';
LstChk.Add(SC +CrLf);
            end;//if uusia>0 else
            if vanhoja>0  then begin
             //LstChk.Add({Sold := }'TextBase.NOL=OK =uudempi kuin kaikki AVUSTEfilet.'); //<Saattaa hämätä !?!? 1414.
               LstChk.Add({Sold := }'Seur. AVUSTEfilet vanhempia kuin TextBase.NOL, yht=' +Ints(Length(Lst)-1) +' ei aih. toimenpiteitä =Nämä OK OK.');
               for i := 0 to vanhoja-1  do begin              //,"*" näköjään tarttee korjauksen.
                  td := fFileAika(4,i, oldArr[i]);            //<Ikä jo tässä, jos DateTime.. mukana, fFileAika ilmoittaa virheen, todettu.
                  while _fMSpixPit(oldArr[i])<pX  do          //<, 2.(nyt) PolkuPixMitta kaikille sama (aikaleimaan asti).###############################
                     oldArr[i] := oldArr[i] +' ';             //<,Kasvatetaan polkuStr kunnes pisinPx.
                  oldArr[i] := oldArr[i] +'   ' +DateTimeToStr(td);
                  LstChk.Add('   '+oldArr[i] +CrLf);
               end;//for i
            end;//if vanhoja>0

            LstChk.Add('- TextBase.NOL pitää olla JO käännösvaiheessa kunnossa, ENNEN NOLA...EXE´ä. !!!!!' +CrLf);
            LstChk.Add('- Formien .DFM -tiedostomuutoksia ei ole tarkistettu; OLTAVA JO TextBase´eä tehtäessä!' +CrLf);
            LstChk.Add('- Chk64B_ohitus=' +fBmrkt0(Chk64B_ohitus,2) +', jakeluversiossa po. AINA FA (TR vain 32B debugissa), := NOLA.DPR´ssa.' +CrLf +CrLf);
            if fEiOoVersioPvm_AvusteINCssa
               then SC := '- VersioNro ja/tai VersioPäiväys eivät ole yhteneviä Def.PAS vs. Avuste.INC´ssä, >>> TARKISTA <<<' +CrLf +CrLf
               else SC := '- VersioNro ja Päiväys yhdenmukaiset Defs.PAS vs. Avuste.INC =OK' +CrLf;
LstChk.Add(SC);
            SC := '[' +IntToStr(PROGRAM_VERSION_MAJOR) +'.' +IntToStr(PROGRAM_VERSION_MINOR) +'.' +IntToStr(PROGRAM_VERSION_RELEASE) +' / '+
                  PROGRAM_BUILD_DATE +']:  ';
//LstChk.Add(SC);
            SC := SC +'>>>Omia ajoja ' +Ints(DefsAjoja) +CrLf +CrLf;
LstChk.Add(SC);
LstChk.Add('');
LstChk.Add('>>>>> M U I S T A   P O I S T A A   T Ä M Ä   N O T E P A D -NÄKYMÄ/istunto, muuten kasautuvat.'); //+1414.

//##########################################################################################################################################################
//##########################################################################################################################################################
            sb := '';  SC := '';  btns := [mbNo,mbOK];
            if isDebuggerPresent and fRePunKehi{+1414d}  then begin   //<,,+1414.  Tänne tullaan fRePunAjoJAKELUUN_pakkoTxtBaseChk´sta.
             //KoeWInfoA(1,'Kokeilua 1.');   //<1414. KoeWInfoA(0,'Kokeilua 0.');   //<1414:  Koe =EiOK.
             //GlobInfo.ClobInfoFrm.Show;    //1414: Ei onaa, aina error koska tätä ei saa luoduksi riittävän ajoissa, todettu. Kovattu NotePad´illä.
               fnChk := ExtractFilePath (Application.ExeName);
               fnChk := fnChk +'ChkMahdMuutokset.rtf';                                                                     //,Application.Handle Handl=0
               fnChkNew := ChangeFileExt (fnChk,'-New.rtf'); //<ChkMahdMuutokset.rtf => ChkMahdMuutokset-New.rtf
              if xFileExists(fnChk)                                                 //<,,+1414. Vanhat ekax vex jos on.
                 then DeleteFile(PChar(fnChk));
              if xFileExists(fnChkNew)
                 then DeleteFile(PChar(fnChkNew));
              teeBase := false;
              for i := 0 to LstChk.Count-1  do
              if Pos('U U S I T T A V A',AnsiUpperCase(LstChk[i])) >0  then begin
                 teeBase := true;  Break;  end;

               SaadaChknRvPituudet_MaxPitMukaan;
               if teeBase  then fnChk := fnChkNew;
{>>>>>}        LstChk.SaveToFile(fnChk);

               //WordPad ei osaa käsitellä "C:\Projektit XE2\.." polun väliMERKKIÄ: Tehdään $TmpXE$ -dirri, kopioidaan sinne rtf -file ja haetaan se.
               //,,Ei ole haittaa vaikka kuvio on NotePadillekin, workkii OK.
                 {su := {'C:\$TmpXE$\' ;       1414: Sittenkin ..\BIN -dirriin.
                  ForceDirectories(su);
                  if DirectoryExists(su)       //<Ei näköjään tunnista.
                     then ;
                  su := su +ExtractFileName(fnChk);
                  CopyFile(PChar(fnChk),PChar(su),false);}

             //Rcmd := 'C:\Program Files\Windows NT\Accessories\wordpad.exe'; //}
             //Rcmd := Rcmd +' Font.Size(8)'; //<Ei ainakaan tämä worki.
               Rcmd := 'C:\windows\notepad.exe';  //<WordPad / C:\Projektit /Cannot find this file. / Please verify that ...
   if teeBase then
   ShellApi.ShellExecute(Application.Handle,'open', PChar(Rcmd), PChar({su}fnChk), nil, SW_SHOW); //=OK. SW_SHOW tai SW_SHOWNORMAL.
   //Ei kantsu delata "C:\$TmpXE$\" -dirriä eikä SU -fileä, olkoon tallessa, omassa koneessa ei haittaa.
               if teeBase
               then SC := 'DEVELOPER1´n kone: Tarkastushavainnot: ks. NotePad ohessa.' +CrLf +
                          'TextBase.NOL >>> E I  E H K Ä  O L E  ajantasalla <<<' //+CrLfÄ
               else begin               //,Selvästi muitten [] jälkeen koska toisarvoinen valinta(?)
                    sb := '             [Yes] =Näytä tilannetiedot ((= K U N N O S S A )).' +CrLf; //<Jos TEEBASE, fnChk näytetään kysymättä ja fnChk := fnChkNew.
                    btns := [mbYes,mbNo,mbOK];  end;
            end;//if isDebuggerPresent
            //TMsgDlgBtn = (mbYes, mbNo, mbOK, mbCancel, mbAbort, mbRetry, mbIgnore, mbAll, mbNoToAll, mbYesToAll, mbHelp, mbClose =Delphissä, VOI muuttaa.
            //mtWarning,mtError,mtInformation,mtConfirmation,mtCustom =VAIN MTcUSTOM ON ILMAN PIIPPIÄ, muut PIIPPAA AINA.
            //MessageDlg ('???',mtCustom,[mbOK],0);
            v := MessageDlg (SC +//LF{-1415f} +   //<LF=#$A
                 sb +
                 '     [No] =Vanha TextBase.NOL delataan ja UUSITAAN.!!!!!' +CrLf +
                 '     [OK] =Vanha TextBase.NOL SÄILYTETÄÄN.',{mtCustom}mtInformation{piippaa},btns,0); //<mtInformation = sis. beepin.
 //ShellApi.ShellExecute(Application.Handle,'taskkill.exe /F /im notepad.exe', 'c:\windows\notepad.exe', PChar(fnChk), nil, SW_SHOW); //=OK. SW_SHOW tai SW_SHOWNORMAL.
 //http://www.tek-tips.com/viewthread.cfm?qid=1274357     //'Ei sulje Notepadia.

//MyHandle := FindWindow(nil, {'Calculator'}'Notepad'); //<,,KESKEN KESKEN
//SendMessage(MyHandle, {WM_CLOSE}$0010, 0, 0);
    //TerminateProcess(proc_info.hProcess, 0);
    //CloseHandle(MyHandle{proc_info.hProcess});
{end;}
//SendMessage({ApplicationHandle}MyHandle, {WM_CLOSE}$0010, 0, 0);
//ShowWindow({hWordWindow}MyHandle, {SW_SHOW}$0010);
          (*if xFileExists(fnChkNew)           //<Delattiin alunpana jos oli.
               then {DeleteFile(PChar(fnChk))
               else }wbeep([100,100,100,100]);*)
//##########################################################################################################################################################
//##########################################################################################################################################################
KillNotePad; //+1414fu:  Ei worki, oli ajatus, että NotePadViestin perään heti klikattaessa lisäinfoMessageja se sulkisi NotePad´in, se ei vain onaa.
//,+15å3
            if v=mrYes
            then ShellApi.ShellExecute(Application.Handle,'open', PChar(Rcmd), PChar({su}fnChk), nil, SW_SHOW) //=OK. SW_SHOW tai SW_SHOWNORMAL.
            else if v=mrNo{7} then begin
               //then ShowMessage('Nyt delattaisiin TextBase.NOL !');
               if NOT DeleteFile (PChar(TextBaseFileN))          //< TextBaseFileN=Lst[7].
                  then ShowMessage(TextBaseFileN +' ei poistunut, tutki/delaa käsin!');    //<''-12.0.0  //<Eioo vielä uutta jos äsken delattiin, todettu.
               SC := AnsiUpperCase(Application.ExeName);
               if (Pos('NOLAREK',SC)>0) or (Pos('NOLANET',SC)>0)
               then ShowMessage('Mennään tekemään uusi TextBase.NOL (AlkuOdotFrm ei nyt näy)!')          //<''+120.5g: Tuli Err NolaNet´illa.
               else begin
                  AlkuOdotFrm.LatausLbl.Caption := AlkuOdotFrm.LatausLbl.Caption +'+tekee TextBase´n.';  //<,+120.5 Refresh näköjään välttämätön.
                  AlkuOdotFrm.Refresh;
               end;
            end;//if v=mrNo                            DefsFileenZ('KysyTxtBaseNOLjaDelaa: 9: v='+Ints(v));
         end;//if fRePunKehi =Lähes ALUSTA.
         SetLength (newArr,0);                                   //<,Ettei jää koeajojen mahd. uudelle kierrokselle [Yes] poluksi DateTm mukaan.
         SetLength (oldArr,0);
      //end;//if k>0 +1414: Kuinka onnistui aikaisemmin ilman ENDiä.
      end;//ChkAvusteet_vrtTextB_KysyDel  Oli:?? EtsiUusimmatAvusteet_SetFnc_jaFNimet

   begin//TimeEro_AvusteINCit_vsTextBase_KysyDelaa........................
      ChkAvusteet_vrtTextB_KysyDel;
                                     {v := mrYes;
                                      while v=mrYes  do begin //<,Tässä pääsee koklaamaan vaihtamalla fileitä esim. Avuste11.INC uudempi/vanhempi jne.
                                         v := MessageDlg ('[Yes] =näytä uudelleen' +CrLf + '[No] =jatka NOLAan.',mtInformation,[mbYes,mbNo],0);
                                         if v=mrYes
                                            then ChkAvusteet_vrtTextB_KysyDel;
                                      end;}
   end;//TimeEro_AvusteINCit_vsTextBase_KysyDelaa

(*function  TLicenseManager.TestKirjoitusOikeus(hakemisto: string): boolean;  //License.PAS.
   var name :string;  handle :integer;
begin                     {Katsotaan pystytäänkö kirjoittamaan ..\CONFIG (tai Win) -hakemistoon. WHILE, koska
                           jos muualla tehdään samaa, RANDOM -tarkennin varmistaa, että käsitellään TÄTÄ}
     Sysutils.ForceDirectories(hakemisto);    //<DEVELOPER1 2.0.3:  Pakko olla ennen tiedoston kirjoittamista sinne, TODETTU.

     name := hakemisto + '\' + TEST_FILE;
     while (fFileExists(name) = True) do
     begin
          name := hakemisto + '\' + TEST_FILE + '.' + IntToStr(random(999));
     end;

     handle := FileCreate (name);
     if (handle = -1) then
        result := False
     else
     begin
          FileClose(handle);
          sysutils.DeleteFile(name);
          result := True;
     end;
end;*)


begin//CreateGlobals................................................................................
 //KoklaaG;
   SysUtils.FormatSettings.DecimalSeparator := '.'; {Delphi} //<+12.0.0: http://www.nexusdb.com/forums/showthread.php?t=16311
                                                             // 'Ei hyväksynyt "." korjausta mm. SokR´ssä.
   size := MAX_COMPUTERNAME_LENGTH + 1;                      //'Tämä ekax, asetus myös Setting.pas´sissa, joka ei muuta tätä, OK.
   GetComputerName(name, size);
   computerName := name;

   { Alustaa satunnaisgeneraattorin }
    Randomize;

  { create printer }
{$IFNDEF NOLALIS}
   printer.free;
   SetPrinter(TPrinter.Create);

   edv.OnLaskettu := false;
{$ENDIF}
   myApplication := Application;
                       //¿DefsFileenZ('CreateGlob:  1.');
                       //¿DefsFileenZ('CreateGlob:  2:  gAjoExeN=' +gAjoExeN +CR +' ®® gAjoPath=' +gAjoPath +CR +' ®® gAjoConfPath=' +gAjoConfPath +
                       //¿           CR +' ®® actPath=' +actPath);
                       YFileen('¿CreateGlob');
// NOLAr := Pos('NOLAREK',AnsiUpperCase(gAjoExeN))>0;  //####### Luodaan JÄLEMPNÄ TextBase.NOL VAIN {DEBUGatessa TAI} jos EIOO ####### EI KÄYTETTY.##########
                                                       //####### JA VAIN NOLA.EXE/NOLANET´in ajossa.  TR= onNolaREK -ajo. ############
                     //DefsFileenZ('CreateGlob:  3:  NOLAr=' +fBmrkt0(NOLAr,2));
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//####### Asetukset (Settings) pitää olla ennen ensimmäistä hakua (TextBase..) niihin. Siirretty tähän 12.0.05 N. 40rv alempaa. ######
  myRegSettings := TRegSettings.Create;                // Luodaan asetukset (Registry´n: Settings - default).
  myRegSettings.SetDefaults(Defaults);                 // Asetetaan oletusasetukset//,Voi siis olla NolaRek/..Net´in polku.
                                                       //???Nyt Registry´ssa jo "TarifDataFile:  TarifHinD.NOL" + "TextBase File:  TextBase.NOL" Onko???+120.5g
   if (gAjoPath='') or (gAjoConfPath='')  then         //<,+120.6/5u: NolaNet ei käynyt Defs/... Nyt siirtty tähän (paljon)alempaa TextBaseFileN´n TAKAA.
      EtsiExenJuuri_TeeAjoDir;            //<'120.5g: Nämä siirretty myRegSettings.SetStringValue´n JÄLJESTÄ, OLI PAHA VIRHE, Registryyn meni VÄÄRÄ tieto.
                                          //'################################################################################################################
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
   actPath := gAjoConfPath;     //<AINOA SIJOITUS +12.0.05, EtsiExenJ.. sijoitti tämän juuri edRvllä.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
//=''''''''''''''''''''''''=====120.5g: Siirtty edeltä tähän, PAHA MOKA.==============================================================
//====================================================================================================================================
//====================================================================================================================================
                                                       //sa := SETTINGS_USED +PROGRAM_DIR_ID +actPath =gAjoConfPath;
                                                       //,.._ID='Program directory'.  actPath=gAjoConfPath= ..\Rekisteri\NolaRek.. t. \Nola..\Bin.. µ0
                             //,="Settings"   ,="Program directory"
  myRegSettings.SetStringValue(SETTINGS_USED, PROGRAM_DIR_ID,{actPath}gAjoPath); //<Nyt Registryyn sijoitetaan actPath=>gAjoPath=12.0.07, Siirtty EDELTÄ TÄHÄN.
//==============''''''''''''''================================''''''''================================================================
    {SQ := myRegSettings.AutoGetStringValue(LICENSE_PATH_ID, LICENSE_DEFAULT_PATH);
        if SQ=''  then ;                  //'="NolaLICENSE"  '="License" (:uusi  VANHA:) \\Reijo-xp\e\Projektit XE2\NolaKehi\BIN\Config\License
     SQ := myRegSettings.GetStringValue(SETTINGS_USED, LICENSE_DEFAULT_PATH);
        if SQ=''  then ;                             //'="License"
     SQ := myRegSettings.GetStringValue(SETTINGS_USED, PROGRAM_DIR_ID);
        if SQ=''  then ;              //'="Settings"   '="Program directory"}
//====================================================================================================================================
//====================================================================================================================================
                       //¿DefsFileenZ('CreateGlob: ½ :  SETTINGS_USED=' +SETTINGS_USED +' ®® PROGRAM_DIR_ID=' +PROGRAM_DIR_ID +' ®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®');
                       YFileen('¿CreateGlob: ½');
   BaseFN := myRegSettings.GetStringValue(SETTINGS_USED, TEXTBASE_FILE_ID);         //<12.0.05: NYT myRegSettings ON JO LUOTU (ihan just ed.
                                                       //'TextBase.NOL              //          riveillä ja JUURI TÄTÄ varten.
                       //¿DefsFileenZ('CreateGlob: ½+ :  BaseFN=' +BaseFN);           //,,+12.0.04: Nyt aina ..\BIN\Config\ íin
                                                       //WrKoeF ('gAjoConfPath=' +gAjoConfPath);              //,X:\Projektit XE2\NolaKehi\BIN\Config\TextBase.NOL
                       //¿ShowMsg ('0 Glob: gAjoConfPath=' +gAjoConfPath  +' ## BaseFN=' +BaseFN);               //<120.4xz
   //,§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§
   TextBaseFileN := gAjoConfPath +BaseFN;              //<+12.0.04, 05: Nyt aina ..\BIN\Config\ íin NOLAlla, NolaRek´ille oma.#########
   //'..Conf viittaa AINA Nola- ja NolaNet´in Conf´iin, siinä siis huomioitu, ettei NolaRek.EXE´llä ole Config´ia.###########################################
   //'§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§
                                                       //WrKoeF ('TextBaseFileN=' +TextBaseFileN);  //BFileen (1,myApplication.ExeName); //<,+12.0.01
                                                       //BFileen (0,TextBaseFileN);                                          //,120.4xz
                       //¿ShowMsg ('0+Glob: actPath=' +actPath  +CR +' ##´TextBaseFileN=' +TextBaseFileN +' <<<ONKO Conf\Conf ???' );
{s0 := TextBaseFileN;                                                                    //<Alp talteen, palautetaan kohta, TESTAUSVAIHETTA 120.5
TextBaseFileN := '\\VERKKOLEVY\Nola\__projE\Projektit XE2 1205e\NolaKehi\BIN\Config\Config\Config\TextBase.NOL';}
SQ := '';
k := Pos('\CONFIG\CONFIG\',AnsiUpperCase (TextBaseFileN));
if k>0
then begin
     while k>0  do begin                                                 //,Tätä ei ilmeisesti enää tarvita.
        Delete (TextBaseFileN, k,Length('\Config'));                     // ...\Config\Config\Textbase.nol => ...\Config\Textbase.nol . <<<<<< 120.5/6 MUUTOS
        k := Pos('\CONFIG\CONFIG\',AnsiUpperCase (TextBaseFileN));  end; //'Delataan aina eka "\Config" kunnes vain yksi jäljellä:
     SQ := ' øøøøøøøøøø => Cant open \Config\ x2..';  end                //<,,SQ tässä apuna DefsFileenZ -kirjoittamisessa.
else SQ := ' øøøøøøøøøø => OK OK OK OK OK OK OK OK';
                       //¿DefsFileenZ('CreateGlob:  1 :  BaseFN=' +BaseFN +CR +' ®® TextBaseFileN=' +TextBaseFileN +SQ);
                       YFileen('¿CreateGlob 1:');
                                                           //,,NolaRek´illekin tehdään TextBase.NOL 12.0.05 .###########################
                                                           //,X:\Projektit XE2\Projektit\NolaKehi\BIN\Win32\Debug\Config\TextBase.NOL';
   AvusteINC := gAjoPath;                                  //<,,//<+12.0.08,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
   j := Pos ('\BIN\',AnsiUpperCase(gAjoPath));
   if j>0  then Delete (AvusteINC,j,99);                   //<X:\Projektit XE2\Projektit\NolaKehi\BIN\ => X:\Projektit XE2\Projektit\NolaKehi
   AvusteINC := AvusteINC +'\SRC\GlobINC\Avuste.INC';      //<\\Reijo-xp\e\Projektit XE2\NolaKehi\SRC\GlobINC\Avuste.INC

 //j := fGetAika (AvusteINC);  k := fGetAika (TextBaseFileN);,..koska osaa filejä ei tarvita kuin kehittelyvaiheessa.,Käynnistetty koeajoDir´rissä C:...

   //¿DefsFileenZ('AvusteINCpath: ' +AvusteINC);            //<,+120.5no: Muuten kysyy turhaan jos ajetaan NolaXX.EXE´ä esim. TOIMITUS dirristä, todettu.
   YFileen('¿AvusteINCpath');
(*¿if fRePunKehi and DefsFileeseenONb and fFileExists(AvusteINC{+120.5no})  //<,,Tätä ei tarvita ellei ole tarvits kutsuaDEFSFILEENZ !!!!!!!!!!!!!!!!!!!!
   then begin          //<fReP.. +120.5i: Tuli hyvin erikoisia polkuja, esim. C:\Ohjelmia\Aa\1205i\Nola\\SRC\GlobINC\Avuste.INC
      Dj := fFileAika(8,8,AvusteINC);  Dk := fFileAika(9,9,TextBaseFileN);
                       //¿DefsFileenZ('CreateGlob:  2-:   ®® TextBaseFileN=' +TextBaseFileN +' ??? ' +SQ +CR + //<DefsFileenZ´ssä oma if DefsFileeseenONb
                       //¿' ®® FAge: "'+AvusteINC +'":  Dj= ' +DateTimeToStr(Dj) +CR +' ®® FAge: "' +TextBaseFileN +'":  Dk=' + DateTimeToStr(Dk) +' ®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®');
                       YFileen('¿CreateGlob 2');
                     //DefsFileenZ('CreateGlob: 2** :   ®® IsoAikaEro( j=' +DateTimeToStr(j)+'  , k=' +DateTimeToStr(k)+')=' +fBmrkt0 (IsoAikaEro(j,k),2));
   end; //<+120.5i *)
//,,=========================================================================================================================================================
//,,=========================================================================================================================================================
   if fRePunAjoJAKELUUN_pakkoTxtBaseChk  then begin                  //<Tämä ehto korvaa ed. EIKÄ TÄTÄ EHTOA SAA MUUTTAA TAI OHITTAA.!!!!!!!!!!!!!!!!!!!!
      if NOT fFileExists(TextBaseFileN)  //IsDebuggerPresent OR      //<Vaikka NOLAr, TextBase.txt PITÄÄ LÖYTYÄ.!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
         then begin ShowMessage(TextBaseFileN +' -TextBaseFileä ei löydy, tee JOTAIN.!!!!!');
                    Halt;  end
         else TimeEro_AvusteINCit_vsTextBase_KysyDelaa;              //<+120.45:  Tutkii onko uudempia avusteita, editoi ne ja kysyy,, mahd. delaa TextBase´n
   end;                                                              //'+12.0.0: Kysyy delataanko TextBase.NOL -file (jos oltiin muokkaa-
                                                                     //          massa sitä ja mahd. olisi pitänyt delata), tai jos just delattu.
                                                                     //120.3 SIELLÄ MYÖS DELAUS.################################################
                       //¿DefsFileenZ('CreateGlob:  3 :   ®® TextBaseFileN=' +TextBaseFileN +SQ +'   K Y S Y I K Ö  delausta?');
                       YFileen('¿CreateGlob 3');                                //ShowMessage (TextBaseFileN +SQ +'   K Y S Y I K Ö  delausta?');
//''===========================================================================================================''+12.0.0
//>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> myRegSettings siirrtty tästä alkuunpäin 12.0.05 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
//===================================='Registryyn kirjoitus, pitäiskös sallia vain NOLA.EXE´lle???====================================
//====================================================================================================================================
  InitLogFile;                      //<,,Tämä siirretty nimenteko(TextBaseFileN)kuvion jäljestä tähän 12.0.0,,,,,,,,,,,,
                       //¿DefsFileenZ('CreateGlob:  4 :  ');
                       YFileen('¿CreateGlob 4:');
  myLog.WriteMessage(lmgInfo,'', '');
  su := '';  if fDirectoryExists (KaikkiOikDirN)  then su := 'AllRightsDirN=TR.'; //+1415d
  myLog.WriteMessage(lmgInfo,'', 'Ohjelma käynnistettiin: versio '+ IntToStr (PROGRAM_VERSION_MAJOR) +'.' +
                                       IntToStr (PROGRAM_VERSION_MINOR)   +'.' +
                                       IntToStr (PROGRAM_VERSION_RELEASE) +' '+PROGRAM_BUILD_DATE);

  language := myRegSettings.GetStringValue(SETTINGS_USED, LANGUAGE_ID);
  if (language = '') then
  begin
       myRegSettings.SetStringValue(SETTINGS_USED, LANGUAGE_ID, LANGUAGE_DEF);
       language := LANGUAGE_DEF;
  end;                                                                 //,,+1415f.
   SQ := myRegSettings.GetStringValue( Settings_Used, 'LapiRegKerta'); //<,k=Läpikäyntikertalaskuri: Luetaan edKertaNo. Helpottaa tapausjäljitystä tiedos-
   if SQ=''  then k := 0  else k := StrToInt(SQ);                      //<',+1414fu.   jossa: ..\BIN\RegWr1.Txt´ssä.  Syytä joskus nollata RegEditillä !!!.
   if k>5000  then begin                                               //<+1415f.     <''Nyt ei enää tarvetta nollata RegEditillä.
      k := 0;
      myRegSettings.SetStringValue( Settings_Used, 'LapiRegKerta', Ints(k)); //<z=LäkikäyntiKertalaskuri, löytyy Reg´in R-alkuisista.
   end;//''+1415f
                       //¿DefsFileenZ('CreateGlob:  5 :  gAjoExeN=' +gAjoExeN +CR +' ®® gAjoPath=' +gAjoPath +CR +' ®® gAjoConfPath=' +gAjoConfPath);
                       YFileen('¿CreateGlob 5:');
//====================================================================================================================================
//====================================================================================================================================
                                                                 // 120.3:  Reijo-xp\e\Projektit XE2\NolaKehi\BIN\Config\TextBase.NOL
                                                                 //         Reijo-xp\e\NolaRek\TextBase.NOL
                       //,,Delattiin edellä mahd. KysyTxtBaseNOLjaDelaa'ssa JOS RePunKehi.##############################################################
                       //¿ShowMsg ('1 Glob/gAjoPath: ' +gAjoPath +CR +'  gAjoConfPath: '+gAjoConfPath);   //<120.4x
//######################################################################################################################################################
//######################################################################################################################################################
//######################################################################################################################################################
      myTextBase := TTextBase.Create(TextBaseFileN); //<Tämä alustaa (tekee,tehdään,luodaan,luonti) TextBase´n. Nyt KOPIOIDAAN NolaRek´iin +1201 #######
//######################################################################################################################################################
//######################################################################################################################################################
//######################################################################################################################################################
                       //¿ShowMsg ('2 Glob/gAjoPath: ' +gAjoPath +CR +'  gAjoConfPath: '+gAjoConfPath);   //<120.4x
                                                               // Drive=\\Reijo-xp\e   mahd. \\VERKKOLEVY\Nola\(__projE)
      //Esim kutsussa:,,                                       // Polku=\\Reijo-xp\e\Projektit XE2\NolaKehi\BIN\
      //fTeeP..("C:\Projektit XE2\NolaKehi\NolaRek", "\NolaRek\NolaRek.NOR") löytyy aikaisemmin "C:\NolaRek\NolaRek.NOR" joka tulee NolaRekPFN´ksi =PITÄÄKIN.
                                                               // \\VERKKOLEVY\Nola\__projE\Projektit XE2\NolaKehi\BIN\Config
                                                               // \\VERKKOLEVY\Nola\__projE\Projektit XE2\NolaKehi\NolaNet      =Ei EXE -polku.
                                                               // \\VERKKOLEVY\Nola\__projE\Projektit XE2\NolaKehi\NolaRek
                                                               // \\VERKKOLEVY\Nola\__projE\Projektit XE2\NolaKehi\Toimitus\Nola\Config *)
                                                            //,NolaRek.EXEä ajetaan vain omassa koneessa. DEVELOPER1lla NolaRek´issä (siellä ei \Config´gia).
   if fRePunKehi  then begin                                //,\\VERKKOLEVY\Nola\__projE\NolaRek´iin kopiointia varten. fRePunKehi -ehto turha.
      NolaRekPFN := fTeePolkuFileN(gAjoPath, '\NolaRek\' +REKFILE_NAME{"NolaRek.NOR"});  //<Siirtty Defgs´istä tähän 120.5f.
      su := NolaRekPFN;
      if fFileExists(su)                                                 //<+130.2
         then su := '''= ' +su +' =Löytyy OK.!!!!!!!!!!!!!!!!!!!!!!!!!!'
         else su := '''= ' +su +' =EI LÖYDY.!!!!!!!!!!!!!!!!!!!!!!!!!!';
      sa := fPCnNimi;              //+1415d
      ShowMessage ('2.1 (Vain DEVELOPER1:lla): Globals/NolaRekPFN tarkistus:'  +LFR +
                   'Kone: "' +sa +'"'                                    +LFR +LFR +
                   'NolaRekPFN tarkistus, while -kysely jos eiOK: '      +LFR +       //<,,+130.2
                   su                                                    +LFR +
                   'Exe=  "' +Application.ExeName +'"'                   +LFR +
                   'Path= "' +ExtractFilePath (Application.ExeName) +'"');
                       //¿DefsFileenZ('CreateGlob:  6: NolaRekPFN=' +NolaRekPFN);
                       YFileen('¿CreateGlob:  6:');
                       //¿ShowMsg ('4 Glob/TextBaseFN: ' +TextBaseFileN +LFR +'...Copy to: ' +NolaRekPFN);        //<120.4x
      Chk_LoytyykoNolaRekPFN_NOR_Kysy (NolaRekPFN);         //<+130.2  Tämä tarkistus TÄSSÄ ekax vaikka ajossa NolaRek.EXE´ä, joten RekPaa.PAS´sissa TURHA.
      Pn := ExtractFilePath(NolaRekPFN) +BaseFN;            //<Otetaan NolaRek.NOR´in polku ja TextBase.NOL´in nimi. ,=TextBase.txt kopioidaan NolaRek -dirriin.
      CopyFile (PChar(TextBaseFileN), PChar(Pn), false);    //<_NolaFileProj ei kopioi tätä, vain EXEt (32+64B), joten kopiointi tehtävä täällä.
                       //¿DefsFileenZ('CreateGlob:  CopyTxtBase to NolaRek: ' +TextBaseFileN +' to ' +NolaRekPFN); //<+120.5f 130.2: EiKantsuTestata onkoJo, ehkä vanhakin.
                       YFileen('¿CreateGlob:  Copy');
   end;//if fRePunKehi
//====================================================================================================================================
//====================================================================================================================================

   //,,Siirrtty vähän ylempää tähän 12.0.05: Nyt tarkistetaan olemassa olo TextBase´n teon jälkeen.  120.3:  NYT NÄMÄ LIENEE TURHIA.
   //,,Pakko olla esim. Pn =E:\NolaRek, jonne tehdään (kopioidaan) myös TextBase.NOL file, NOLA/NET.EXE tekee oman, joseioo sen DIRrissä, OK.
                       //¿DefsFileenZ('CreateGlob:  6 :  Tuleeko herja: Ei kelvollista..???');
                       YFileen('¿CreateGlob:  6+:');

                       //¿DefsFileenZ('CreateGlob:  61:  TxBFN=' +TextBaseFileN +'  gAjoConfPath: ' +gAjoConfPath +'  gAjoPath: ' +gAjoPath);
                       YFileen('¿CreateGlob:  61:');
                       //¿ShowMsg ('5 Glob/gAjoPath: ' +gAjoPath +CR +'  gAjoConfPath: '+gAjoConfPath);   //<120.4x
 //,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Tässä MUUTOS 120.5 ja .6 VRSIOIHIN.!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   while NOT fFileExists(TextBaseFileN)  do begin                         //<Kysytään vain NolaRek.EXE´lle, NOLA/NOLANET´ssahan TextBase tiedetään.
      boo := InputQuery ('EXE-polku..\Config\TextBase.NOL =osin väärin: ' {+gAjoConfPath +':'},
                         'Anna/Muokkaa ..\Config\TextBase.NOL -tiedoston koko polku (ja nimi):', TextBaseFileN); // OK=TR,  CANCEL=FA
      if NOT boo  then Halt;                 //<+120.4:  Keskeytetään ajo jos CANCEL.  '120.6 Oli Pn (Pn= ..\NolaRek\.. paha moka).
      Pn := Trim (Pn);
      Pn := IncludeTrailingPathDelimiter (Pn);
    //actPath := Pn;                         //<Tällä ei mitään tekemistä täällä, mistähän mahtanut tulla???  -120.5f,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
    //TextBaseFileN := Pn +Fn;               //<Kamala virhe, polkuun tuli NolaRek => \\VERKKOLEVY\Nola\__projE\NolaRek\TexBase.NOL\TexBase.NOL
      TextBaseFileN := Pn;
                       //¿DefsFileenZ('CreateGlob:  62:  TextBaseFileN: ' +TextBaseFileN); //<+120.4, 5f
                       YFileen('¿CreateGlob:  62:');
   end;
 //TextBaseFileN := s0;                                                           //<+120.5 Testausvaiheessa.
                       //¿DefsFileenZ('CreateGlob:  7 :  ');        //''Tähän asti siirretty nimenteko(TextBaseFileN)kuvion jäljestä tähän 12.0.0'''''''''''
                       YFileen('¿CreateGlob:  7:');
 //message Hint 'DEVELOPER2 ALP on oikein???'.  //,Jos poistaa => Unknown identif (myLicense, ainakin NolaNet´illa.
{$IFNDEF NOLALIS}                         //<,Poistettukin koemielessä. Ks. myös ..Create rv. 57  12.0.03 ja .05.   NYT TAAS MUKANA 12.0.06 =Nyt OK.<<<<<<<<<
                                          //NOLALIS on asetettu VAIN NolaNet + NolaRek´lle, joten myLicense := suoritetaan VAIN Nola.EXE´lle.<<<<<<<<<<<<<<<<
   myLicense := TLicenseManager.Create;   //<Luodaan Licence. Tästä mennään License.PAS´siin.  myLicense´n esittely tämän PAS´sin alussa.

   sa := LisLaajToStr (myLicense.lisenssilaajuus,0);
   lvEXTok := (sa='EXT') or (sa='GLOB');  //<+130.0:  Nyt ainoa sijoitus tässä.  'LT','PWO'  lvLT, lvPro, lvExtended, lvGlobal
//   lvEXTok := Globals.{LicenseManager.}myLicense.lisenssilaajuus >=lvEXTended; //<120.5n+:  TR jos lvEXTended tai lvGLOB. Takas 130.0
// lvEXTok:= myLicense.LisenssikoodiRec.laajuus >=lvEXTended;                    //<120.5n+:  TR jos lvEXTended tai lvGLOB.
                       //¿DefsFileenZ('CreateGlob: 8-:  ');               //''Tähän asti siirretty nimenteko(TextBaseFileN)kuvion jäljestä tähän 12.0.0'''''''''''
                       YFileen('¿CreateGlob:  8-:');
{$ENDIF} //æ 'Tämä oli ohitettu - :lla (tms), jolloin tuli Acces Viol. PALAUTETTU ALP´KSI =OK.
                       //¿DefsFileenZ('CreateGlob: 8 :  ');
                       YFileen('¿CreateGlob:  8:');
  myDesignInfo.ScreenHeight := -1;
  myDesignInfo.ScreenWidth :=  -1;

  demoInfoPrint := False;

//message Hint 'Oli joskus NOLALIS ohitus.'
// DEVELOPER2 2003-11-21 BEGIN
{$IFNDEF NOLALIS}        //æ-12.0.04 (SittenkinOK. IFNDEF  ohitti tämän jostain syystä ja aiheutti Acces Viol., itsekseen korjautui ?
         //'Tämä oli ohitettu "½"- :lla, jolloin tuli Acces Viol.
                       //¿DefsFileenZ('CreateGlob: 9-:  ');
                       YFileen('¿CreateGlob:  9-:');
  CreateCableImages;
{$ENDIF} //æ
// DEVELOPER2 2003-11-21 END
                       //¿DefsFileenZ('CreateGlob: 9 :  ');
                       YFileen('¿CreateGlob:  9:');
end;//CreateGlobals =========================================================================================================================================
//===========================================================================================================================================================
//===========================================================================================================================================================

procedure DestroyGlobals;
begin
     myRegSettings.Destroy;
     myTextBase.Destroy;
// DEVELOPER2 2003-11-21 BEGIN
//message Hint 'Oli joskus NOLALIS ohitus.'
{$IFNDEF NOLALIS} //æ
     DestroyCableImages;
{$ENDIF} //æ
// DEVELOPER2 2003-11-21 END
     myLog.WriteMessage(lmgInfo,'', 'Ohjelma suljettiin');
     myLog.Destroy;
end;

procedure GlobalSetTexts;
begin
{$IFNDEF NOLALIS}
  PaaValFrm.SetTexts;
  Z_PaaValFrm.SetTexts;
  Z_A2Frm.SetTexts;
  ZS_Frm.SetTexts;
  SyottoAvFrm.SetTexts;
  S_PaaValFrm.SetTexts;
  // Herja1Frm.SetTexts;
  // Y_DemoFrm.SetTexts;
  // KoeFrm.SetTexts;
  // SyottoFrm.SetTexts;
  NjFrm.SetTexts;
  EdvNewFrm.SetTexts;
  // EdVrkFrm.SetTexts;
  PrintDlgNola.SetTexts;
  // OdotaFrm.SetTexts;
  AsetusFrm.SetTexts;
{$ENDIF}
end;

procedure InitLogFile;
var
  directory, sa :string;
begin
  if (myLog = nil) then
      myLog := TLog.Create;

(*sa := LICENSE_PATH_ID;                                                        //<NolaLICENSE.  josko pitääisi vai,,,,htaa gAjoConfPath
      if sa='!"#¤%&/'  then ;
sa := //IncludeTrailingPathDelimiter(actPath{currDir}) + LICENSE_DEFAULT_PATH);
      LICENSE_DEFAULT_PATH;                                                     //License
      if sa='!"#¤%&/'  then ;
sa := ExtractFileDrive(myRegSettings.AutoGetStringValue(LICENSE_PATH_ID, LICENSE_DEFAULT_PATH)); //<,+12.0.0§£
      if sa='!"#¤%&/'  then ;                                                   //<X:
sa := //if (ExtractFileDrive(myRegSettings.AutoGetStringValue(LICENSE_PATH_ID, LICENSE_DEFAULT_PATH)) = '') then
      ExtractFileDrive(myRegSettings.AutoGetStringValue(LICENSE_PATH_ID, LICENSE_DEFAULT_PATH));
      if sa='!"#¤%&/'  then ;                                                  //<X:
sa := myRegSettings.AutoGetStringValue(LICENSE_PATH_ID, LICENSE_DEFAULT_PATH); //< Sama kuin LICENSE_PATH_ID
      if sa='!"#¤%&/'  then ;                                                  //<X:\Projektit XE2\NolaKehi\BIN\Win64\Debug\Config\License

sa := IncludeTrailingPathDelimiter(ExcludeTrailingPathDelimiter(actPath) + myRegSettings.GetStringValue(SETTINGS_USED, LICENSE_PATH_ID));
      if sa='!"#¤%&/'  then ;                                             //<X:\Projektit XE2\NolaKehi\BIN\Win64\Debug\Config\License\
sa := myRegSettings.GetStringValue(SETTINGS_USED, LICENSE_PATH_ID);
      if sa='!"#¤%&/'  then ;                                              //<X:\Projektit XE2\NolaKehi\BIN\Win64\Debug\Config\License
sa := myRegSettings.AutoGetStringValue(LICENSE_PATH_ID, LICENSE_DEFAULT_PATH); //< Sama kuin LICENSE_PATH_ID £"4
      if sa='!"#¤%&/'  then ;                                              //<X:\Projektit XE2\NolaKehi\BIN\Win64\Debug\Config\License
sa := myRegSettings.    GetStringValue(LICENSE_PATH_ID, LICENSE_DEFAULT_PATH); //< Sama kuin LICENSE_PATH_ID £"4
      if sa='!"#¤%&/'  then ;                                              //<"" =tyhjä.
sa := gAjoConfPath +LICENSE_PATH_ID;
      if sa='!"#¤%&/'  then ;                                              //<X:\Projektit XE2\NolaKehi\BIN\Config\NolaLICENSE
sa := gAjoConfPath +LICENSE_DEFAULT_PATH;
      if sa='!"#¤%&/'  then ;                                              //<X:\Projektit XE2\NolaKehi\BIN\Config\License             //*)

  // Katsotaan onko polku verkkolisenssin täydellinen vai vanha 'Config\License'.
  // Päättely perustuu siihen, ettei aikaisemmassa 'Config\license' polussa ole
  // tiedostoasemaa                                             //,NolaLICENSE     ,License
//sa := ExtractFileDrive(myRegSettings.AutoGetStringValue(LICENSE_PATH_ID, LICENSE_DEFAULT_PATH));        //£"3 µ1net  \\License
  sa :=                  myRegSettings.AutoGetStringValue(LICENSE_PATH_ID, LICENSE_DEFAULT_PATH);         //£"3 µ1net  \\License
  if (sa='') or NOT fDirectoryExists(sa){+120.5g} or            //'"\\License" tallettunut reg.tieto PAHA MOKA. //<'Erotettu 12.0.05 .
               (Pos('LICENSE',AnsiUpperCase(sa))<=3)            //< C:License  tai  \\License
  then begin //'+120.5g
    // Lisenssihakemisto on vanha 'Config\license', joten rakennetaan
    // verkkohakemisto käsin.      12.0.05:  if DirectoryExists(sa)=TR oli lopussa "\" eli ei, jos dirri vain on, koklattu.
    sa := IncludeTrailingPathDelimiter(actPath);                            //<,,+12.0.05 Lisättyä,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
    sa := sa +LICENSE_DEFAULT_PATH; //myRegSettings.GetStringValue(SETTINGS_USED, LICENSE_PATH_ID);
    sa := IncludeTrailingPathDelimiter(sa);                                 //<''+12.0.05'''''''''''''''''''''''''''''''''''''''''''''
    directory := sa; //,,OLI:                                               //<,+-12.0.05 <Puuttui sijoitus/Lisätty directory := ...
   {directory := IncludeTrailingPathDelimiter(ExcludeTrailingPathDelimiter(actPath) +  //<Incl.. lisäämä(?) "\" saattaa olla ainoaMrk.
                 myRegSettings.GetStringValue(SETTINGS_USED, LICENSE_PATH_ID));}
    myRegSettings.SetStringValue(SETTINGS_USED, LICENSE_PATH_ID, sa);       //<+120.5g: Olikohan paha MOLA, puuttui, muualla vain 1x License.PAS´ss.
  end
  else begin
    // Uuden mukainen lisenssihakemisto joten käytetään sellaisenaan                       //,Tässä VAIN kokeillaan em. sijoitusta.
    directory := myRegSettings.GetStringValue(SETTINGS_USED, LICENSE_PATH_ID);             //<+'-12.0.05 <Lisätty directory := ...
   {if directory='!!#¤'  then ;                                                            //'\\License
    directory := myRegSettings.AutoGetStringValue(LICENSE_PATH_ID, LICENSE_DEFAULT_PATH)   //< Sama kuin ed.}
  end;

  sa := ExtractFileName(myApplication.ExeName); //<,+130.2 Harjulalle.
  if sa='1234'  then ;
  // Käynnistetään loki palvelu. Koko on 50 * 1024 = 50Kb.  Logiin kirjoitus. Lokiin kirjoitus.
  myLog.Open(IncludeTrailingPathDelimiter(directory) + 'nola_' + computerName + '.log',
             IncludeTrailingPathDelimiter(directory) + 'nola_' + computerName + '.old.log',
             50 * 1024, ExtractFileName(myApplication.ExeName));//+130.2 Takas.
           //gAjoExeN); //+-12.0.05 oli: ExtractFileName(myApplication.ExeName));
end;//InitLogFile

{#######################################################################################################################
 #######################################################################################################################
Netistä löytyi nämä käyttökelpoiset FNCt nyt jälkikäteen kun DEVELOPER2 oli jo jälemmät kuviot toteuttanut 12.0.08:
Delphi 2010 includes a number of Windows 7 specific features. One important point is to be able to correctly identify Windows 7 (compared to Windows Vista or XP for example), which can be done as follows:

  if CheckWin32Version(6, 1) then //####################################################################################
    ShowMessage('Windows 7')      //####################################################################################
  else                            //####################################################################################
  if CheckWin32Version(6) then    //####################################################################################
    ShowMessage('Windows Vista'); //####################################################################################
#######################################################################################################################
#######################################################################################################################}

function Start64Version(exeBaseName{='Nola'}: string): boolean;    //Tätä kutsutaan vain .DPR´stä, kutsu sinne nyt lisätty.

{$IFDEF WIN64} //DEVELOPER1/DEVELOPER2:  Seur. mennään vain 64b-versiolla, eli FNC := FA. ================================================================================
begin//......................................................................................................................
               //BFileen (1,'01:exeBasn: '+exeBaseName); //<+12.0.02  Ei onaa fileenkirjoitus täällä. // exeBaseName ="Nola".
                 //¿ShowMsg('Glob/Start64/Asdfgh');
                 //¿DefsFile3('Glob/Start64/Qwerty');
                 //¿DefsFileenZ('Start64: 1:  exeBaseName=' +exeBaseName +' ®® exeName=' +Application.ExeName);
                 YFileen('¿Start64: 1:');
                 //ShowMsg ('Start64: 1:  exeBaseName=' +exeBaseName);
  result := false;
end;           //'64b versiolla ei mennä tämän pitemmälle, eli tässä kaikki.!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

{$ELSE}        //<,,Tänne mennään vain 32b-versioilla. ======================================================================================================
      var shellOperation, shellFile, shellParameters, shellDirectory, error: string;  {+12.0.07:}ajoFN,ajoPTH :string;      begin
   ajoFN :=  {AnsiUpperCase(}Application.ExeName;                 //<,+12.0.08             => "\\Reijo-xp\e\Projektit XE2\NolaKehi\BIN\Win32_Release_Nola.exe"
   ajoPTH := {AnsiUpperCase(}ExtractFilePath(ajoFN);              //<Sis."\" lopussa.      => "\\Reijo-xp\e\Projektit XE2\NolaKehi\BIN\"
   ajoFN := ExtractFileName(ajoFN);                               //                       => "Win32_Release_Nola.exe"
                        //¿DefsFileenZ('Start64: 2 elsen jälk:  exeBaseName=' +exeBaseName +' ®® exeName=' +Application.ExeName + //ÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖ
                        //¿           CR +' ®® ajoPTH=' +ajoPTH +' ®® ajoFN=' +ajoFN);
                        YFileen('¿Start64Vers');
                        //ShowMsg ('Start64: 2:  exeBaseName=' +exeBaseName);
   result := false;     //BFileen (1,'02:exeBasn: '+exeBaseName); //<+12.0.02
                  //                           ,Laji (char)
                  //Win64_Nola.exe             N          //,,Nämä voivat kutsua tätä PRC´tä,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
                  //Win64_Release_Nola.exe     B          //..ja ohaLAJI kuvaa EXEn sijaintipaikkaa:  (\NOLA  \BIN  \BIN)
                  //Win64_Debug_Nola.exe       B

                  //Win64_NolaNet.exe          N
                  //Win64_Release_NolaNet.exe  B
                  //Win64_Debug_NolaNet.exe    B
                  //-------------------------
                  //Win32_Nola.exe             N
                  //Win32_Release_Nola.exe     B
                  //Win32_Debug_Nola.exe       B

                  //Win32_NolaNet.exe          N
                  //Win32_Release_NolaNet.exe  B
                  //Win32_Debug_Nola.exe       B          //KRIITTISIÄ KRIITTISIÄ KRIITTISIÄ KRIITTISIÄ KRIITTISIÄ KRIITTISIÄ KRIITTISIÄ KRIITTISIÄ
  // Käynnistetään Win64 versio, jos ollaan käynnistämässä Win32 versiota
  // 64-bittisessä käyttöjärjestelmässä. WIN64 on määritelty vain 64-bittistä
  // käännettäessä muttei 32-bittistä käännettäessä.
   if (SysUtils.TOSVersion.Architecture = arIntelX64) then
   begin
                        //¿DefsFileenZ('Start64: 3 Intel:  ajoPTH=' +ajoPTH +' ®® ajoFN=' +ajoFN);                  //ÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖ
                        YFileen('¿Start64:  3');
      result := true;
      // Ei käynnistetä 64-bittistä jos softaa ajetaan debuggerissa.  120.5no: ONKOHAN NÄIN !?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!
      if IsDebuggerPresent then
         result := false;
      shellOperation := 'open';
      shellParameters := '';
      shellDirectory := '.';
               //BFileen (0,'4:exeBasn: '+exeBaseName); //<,+12.0.02
               //BFileen (0,'4:shellF: ' +shellFile);
{$IFDEF Debug} //============================================================================================================================================
      shellFile := ajoPTH +'Win64_Debug_Nola.exe';        //<..\BIN´ssä oleva debug_EXE.   <+DEVELOPER1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
                        //¿DefsFileenZ('Start64: 4 Debug jälk:  shellFile=' +shellFile);   //,,ALP oli DEVELOPER2 tekemä, omia nimimuutoksia..
                        YFileen('¿Start64:  4');
      if NOT fFileExists(shellFile)  then                                                //<+DEVELOPER1
         ShowMessage('1.Ajotiedosto puuttuu: "' +shellFile +'", ajo keskeytetään!');     //<+DEVELOPER1
                        //BFileen (0,'5:shellF: '+shellFile);    //<+12.0.02             //<+DEVELOPER1''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
{$ELSE}                                                                                  //,+DEVELOPER1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
                        //¿DefsFileenZ('Start64: 5 DebEls jälk:  shellFile=' +shellFile);                           //ÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖ
                        //¿ShowMsg('2. ajoPTH +ajoFN: "' +ajoPTH +'" + "' +ajoFN +'"');
           if AnsiUpperCase(ajoFN)=   'WIN32_RELEASE_NOLA.EXE'
      then begin shellFile := ajoPTH +'Win64_Release_Nola.exe'
                 ;{ShowMsg('21: ' +shellFile);  }end
      else if AnsiUpperCase(ajoFN)=   'WIN32_NOLA.EXE'
      then begin shellFile := ajoPTH +'Win64_Nola.exe'
                 ;ShowMsg('22: ' +shellFile);  end;
      if NOT fFileExists(shellFile)  then                                                //<+DEVELOPER1
         ShowMessage('3.Ajotiedosto puuttuu: "' +shellFile +'", ajo keskeytetään!');     //<+DEVELOPER1
                        //BFileen (0,'6:shellF: '+shellFile);    //<+12.0.02             //<+DEVELOPER1
{$ENDIF} //Debug ============================================================================================================================================
                        //BFileen (0,'9:exeBasn: '+exeBaseName); //<,+12.0.02            //<+DEVELOPER1
                        //BFileen (0,'9:shellF: ' +shellFile);   //<+12.0.02             //<+DEVELOPER1
                        //¿DefsFileenZ('Start64: 6 EndIF jälk:  shellFile=' +shellFile);                            //ÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖ
      if result then                                                                      //<,,DEVELOPER2 tekemiä<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      begin             //¿DefsFileenZ('Start64: 7 EndIF jälk:  shellFile=' +shellFile);                            //ÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖÖ
                        YFileen('¿Start64');
      // ShellExecute on epäonnistunut jos paluuarvo on 32 tai vähemmän.
         if ShellExecute(0{Handle}, PChar(shellOperation), PChar(shellFile),              //,SW_HIDE (0) =Hides the window and activates another window.
                            PChar(shellParameters), PChar(shellDirectory), 5) <= 32 then  //<0 => 5 auttoi, nyt toimii, (0 :lla PaaVal ei näkynyt, vain avusteikkuna näkyi eikä sitäkään saanut minimized.
         begin          //¿DefsFileenZ('Start64: 8 EndIF jälk:  shellFile=' +shellFile);    //'SW_SHOW (5) =Activates the window and displays it in its current size and position.
                        YFileen('¿Start64: 8');
          //DefsFile3('Clobals/Start64Version 1/2:  error := Format (Ohjelman... (%s).%s..  =' +%s.%s);
          //DllMessage('Tuleeko Clobals/Start64Version 1/2:  error := Format..');
            DefsFile3('Clobals/Start64Version 1/2:  error := Format (Ohjelman... (%s).%s..  =' +
                     Format ('Ohjelman 64-bit versiota ei pystytty käynnistämään (%s).%s%sKäynnistetäänkö 32-bit versio sen sijaan?',
                            [shellFile, #13#10, #13#10]));
            error := Format ('Ohjelman 64-bit versiota ei pystytty käynnistämään (%s).%s%sKäynnistetäänkö 32-bit versio sen sijaan?',
                            [shellFile, #13#10, #13#10]);
            DefsFile3('Clobals/Start64Version 2/2:  error := Format (Ohjelman... (%s).%s..  =' +
                     Format ('Ohjelman 64-bit versiota ei pystytty käynnistämään (%s).%s%sKäynnistetäänkö 32-bit versio sen sijaan?',
                            [shellFile, #13#10, #13#10]));
            if MessageDlg(error, mtError, [mbYes, mbCancel],0, mbCancel) = mrYes  then begin
            // Ilmoitetaan ettei 64-bittistä käynnistetty, joten ohjelma
            // käynnistyy normaalisti.
               result := false;
            end;
         end;
      end;
   end;//if (SysUtils..
end;//Start64Version
{$ENDIF} //WIN64 ============================================================================================================================================

end.
